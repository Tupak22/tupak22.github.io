var THREE={REVISION:"67 (SuS)",CullFaceNone:0,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,FrontFaceDirectionCW:0,FrontFaceDirectionCCW:1,BasicShadowMap:0,PCFShadowMap:1,PCFSoftShadowMap:2,FrontSide:0,BackSide:1,DoubleSide:2,NoShading:0,FlatShading:1,SmoothShading:2,NoColors:0,FaceColors:1,VertexColors:2,NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5,AddEquation:100,SubtractEquation:101,ReverseSubtractEquation:102,ZeroFactor:200,OneFactor:201,
SrcColorFactor:202,OneMinusSrcColorFactor:203,SrcAlphaFactor:204,OneMinusSrcAlphaFactor:205,DstAlphaFactor:206,OneMinusDstAlphaFactor:207,DstColorFactor:208,OneMinusDstColorFactor:209,SrcAlphaSaturateFactor:210,MultiplyOperation:0,MixOperation:1,AddOperation:2,UVMapping:function(){},CubeReflectionMapping:function(){},CubeRefractionMapping:function(){},SphericalReflectionMapping:function(){},SphericalRefractionMapping:function(){},RepeatWrapping:1E3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002,
NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008,UnsignedByteType:1009,ByteType:1010,ShortType:1011,UnsignedShortType:1012,IntType:1013,UnsignedIntType:1014,FloatType:1015,UnsignedShort4444Type:1016,UnsignedShort5551Type:1017,UnsignedShort565Type:1018,AlphaFormat:1019,RGBFormat:1020,RGBAFormat:1021,LuminanceFormat:1022,LuminanceAlphaFormat:1023,RGB_S3TC_DXT1_Format:2001,RGBA_S3TC_DXT1_Format:2002,
RGBA_S3TC_DXT3_Format:2003,RGBA_S3TC_DXT5_Format:2004,TOLERANCE:0,MOUSE:{LEFT:0,MIDDLE:1,RIGHT:2},Color:function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)}};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*
c:0.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a},b=0.5>=c?c*(1+b):c+b-c*b,c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a))return a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=
Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=
a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<
8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){var a=a||{h:0,s:0,l:0},b=this.r,c=this.g,d=this.b,f=Math.max(b,c,d),e=Math.min(b,c,d),g,i=(e+f)/2;if(e===f)e=g=0;else{var j=f-e,e=0.5>=i?j/(f+e):j/(2-f-e);switch(f){case b:g=(c-d)/j+(c<d?6:0);break;case c:g=(d-b)/j+2;break;case d:g=(b-c)/j+4}g/=6}a.h=g;a.s=e;a.l=i;return a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,
b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;
this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;
this._w=a._w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),f=Math.cos(a._z/2),e=Math.sin(a._x/2),g=Math.sin(a._y/2),i=Math.sin(a._z/2);"XYZ"===a.order?(this._x=e*d*f+c*g*i,this._y=c*g*f-e*d*i,this._z=c*d*i+e*g*f,this._w=c*d*f-e*g*i):"YXZ"===a.order?(this._x=e*d*f+c*g*i,
this._y=c*g*f-e*d*i,this._z=c*d*i-e*g*f,this._w=c*d*f+e*g*i):"ZXY"===a.order?(this._x=e*d*f-c*g*i,this._y=c*g*f+e*d*i,this._z=c*d*i+e*g*f,this._w=c*d*f-e*g*i):"ZYX"===a.order?(this._x=e*d*f-c*g*i,this._y=c*g*f+e*d*i,this._z=c*d*i-e*g*f,this._w=c*d*f+e*g*i):"YZX"===a.order?(this._x=e*d*f+c*g*i,this._y=c*g*f+e*d*i,this._z=c*d*i-e*g*f,this._w=c*d*f-e*g*i):"XZY"===a.order&&(this._x=e*d*f-c*g*i,this._y=c*g*f-e*d*i,this._z=c*d*i+e*g*f,this._w=c*d*f+e*g*i);if(!1!==b)this.onChangeCallback();return this},
setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],f=b[1],e=b[5],g=b[9],i=b[2],j=b[6],b=b[10],k=c+e+b;0<k?(c=0.5/Math.sqrt(k+1),this._w=0.25/c,this._x=(j-g)*c,this._y=(d-i)*c,this._z=(f-a)*c):c>e&&c>b?(c=2*Math.sqrt(1+c-e-b),this._w=(j-g)/c,this._x=0.25*c,this._y=(a+f)/c,this._z=(d+i)/c):e>b?(c=2*Math.sqrt(1+e-c-b),this._w=(d-
i)/c,this._x=(a+f)/c,this._y=0.25*c,this._z=(g+j)/c):(c=2*Math.sqrt(1+b-c-e),this._w=(f-a)/c,this._x=(d+i)/c,this._y=(g+j)/c,this._z=0.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();
return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},multiply:function(a,b){return void 0!==
b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,f=a._z,e=a._w,g=b._x,i=b._y,j=b._z,k=b._w;this._x=c*k+e*g+d*j-f*i;this._y=d*k+e*i+f*g-c*j;this._z=f*k+e*j+c*i-d*g;this._w=e*k-c*g-d*i-f*j;this.onChangeCallback();return this},multiplyVector3:function(a){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
return a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,f=this._z,e=this._w,g=e*a._w+c*a._x+d*a._y+f*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=e,this._x=c,this._y=d,this._z=f,this;var i=Math.acos(g),j=Math.sqrt(1-g*g);if(0.001>Math.abs(j))return this._w=0.5*(e+this._w),this._x=0.5*(c+this._x),this._y=0.5*(d+this._y),this._z=0.5*(f+this._z),this;g=Math.sin((1-b)*i)/j;i=Math.sin(b*i)/j;this._w=e*g+this._w*i;this._x=
c*g+this._x*i;this._y=d*g+this._y*i;this._z=f*g+this._z*i;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];this._w=a[3];this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,
this._z,this._w)},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=
a.y;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},
clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);
return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},
distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){this.x=a[0];this.y=a[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};
THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*
b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),
applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements,f=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*f;this.y=
(a[1]*b+a[5]*c+a[9]*d+a[13])*f;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*f;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,f=a.x,e=a.y,g=a.z,a=a.w,i=a*b+e*d-g*c,j=a*c+g*b-f*d,k=a*d+f*c-e*b,b=-f*b-e*c-g*d;this.x=i*a+b*-f+j*-g-k*-e;this.y=j*a+b*-e+k*-f-i*-g;this.z=k*a+b*-g+i*-e-j*-f;return this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},
divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<
a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);
return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,f=this.z;this.x=
d*a.z-f*a.y;this.y=f*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,f=a.z,e=b.x,g=b.y,i=b.z;this.x=d*i-f*g;this.y=f*e-c*i;this.z=c*g-d*e;return this},projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;
return function(b){void 0===a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},
setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(a){console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.");
return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.");return this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),
a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return Math.abs(a.x-this.x)<THREE.TOLERANCE&&Math.abs(a.y-this.y)<THREE.TOLERANCE&&Math.abs(a.z-this.z)<THREE.TOLERANCE},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,
this.y,this.z)},setFromSpherical:function(a){var b=Math.sin(a.phi)*a.radius;this.x=b*Math.sin(a.theta);this.y=Math.cos(a.phi)*a.radius;this.z=b*Math.cos(a.theta);return this}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},
applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,f=this.w,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*f;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*f;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*f;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*f;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,
this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,f=a[0];d=a[4];var e=a[8],g=a[1],i=a[5],j=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(e-c)&&0.01>Math.abs(j-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(e+c)&&0.1>Math.abs(j+b)&&0.1>Math.abs(f+i+k-3))return this.set(1,0,0,0),this;a=Math.PI;f=(f+1)/2;i=(i+1)/2;k=(k+1)/2;d=(d+g)/4;e=(e+c)/4;j=(j+b)/4;f>i&&f>k?0.01>f?(b=0,d=c=0.707106781):(b=Math.sqrt(f),c=d/b,d=e/b):i>k?0.01>i?
(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(i),b=d/c,d=j/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=e/d,c=j/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-j)*(b-j)+(e-c)*(e-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-j)/a;this.y=(e-c)/a;this.z=(g-d)/a;this.w=Math.acos((f+i+k-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=
a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=
Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):
Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];this.w=a[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,
this.w)}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},copy:function(a){this._x=
a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b){var c=THREE.Math.clamp,d=a.elements,f=d[0],e=d[4],g=d[8],i=d[1],j=d[5],k=d[9],n=d[2],p=d[6],d=d[10],b=b||this._order;"XYZ"===b?(this._y=Math.asin(c(g,-1,1)),0.99999>Math.abs(g)?(this._x=Math.atan2(-k,d),this._z=Math.atan2(-e,f)):(this._x=Math.atan2(p,j),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(k,-1,1)),0.99999>Math.abs(k)?(this._y=Math.atan2(g,d),this._z=Math.atan2(i,j)):
(this._y=Math.atan2(-n,f),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(p,-1,1)),0.99999>Math.abs(p)?(this._y=Math.atan2(-n,d),this._z=Math.atan2(-e,j)):(this._y=0,this._z=Math.atan2(i,f))):"ZYX"===b?(this._y=Math.asin(-c(n,-1,1)),0.99999>Math.abs(n)?(this._x=Math.atan2(p,d),this._z=Math.atan2(i,f)):(this._x=0,this._z=Math.atan2(-e,j))):"YZX"===b?(this._z=Math.asin(c(i,-1,1)),0.99999>Math.abs(i)?(this._x=Math.atan2(-k,j),this._y=Math.atan2(-n,f)):(this._x=0,this._y=Math.atan2(g,d))):"XZY"===b?(this._z=
Math.asin(-c(e,-1,1)),0.99999>Math.abs(e)?(this._x=Math.atan2(p,j),this._y=Math.atan2(g,f)):(this._x=Math.atan2(-k,d),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+b);this._order=b;this.onChangeCallback();return this},setFromQuaternion:function(a,b,c){var d=THREE.Math.clamp,f=a.x*a.x,e=a.y*a.y,g=a.z*a.z,i=a.w*a.w,b=b||this._order;"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),i-f-e+g),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w),-1,1)),this._z=Math.atan2(2*
(a.z*a.w-a.x*a.y),i+f-e-g)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),i-f-e+g),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),i-f+e-g)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),i-f-e+g),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),i-f+e-g)):"ZYX"===b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),i-f-e+g),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z),-1,1)),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),i+f-e-g)):"YZX"===
b?(this._x=Math.atan2(2*(a.x*a.w-a.z*a.y),i-f+e-g),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),i+f-e-g),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w),-1,1))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),i-f+e-g),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),i+f-e-g),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y),-1,1))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);
this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};
THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var f=b.dot(b),f=b.dot(a)/f;d&&(f=THREE.Math.clamp(f,0,1));return f}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},addPoint:function(a){a.x<this.min.x?this.min.x=a.x:a.x>this.max.x&&(this.max.x=a.x);a.y<this.min.y?this.min.y=a.y:a.y>this.max.y&&(this.max.y=a.y);a.z<this.min.z?this.min.z=a.z:a.z>this.max.z&&(this.max.z=a.z);return this},addPointChecked:function(a){!isNaN(a.x)&&isFinite(a.x)&&(a.x<this.min.x?this.min.x=a.x:a.x>this.max.x&&(this.max.x=a.x));!isNaN(a.y)&&isFinite(a.y)&&(a.y<this.min.y?this.min.y=
a.y:a.y>this.max.y&&(this.max.y=a.y));!isNaN(a.z)&&isFinite(a.z)&&(a.z<this.min.z?this.min.z=a.z:a.z>this.max.z&&(this.max.z=a.z));return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var b=1,c=a.length;b<c;b++)this.addPoint(a[b])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=
new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);this.makeEmpty();b.traverse(function(b){if(void 0!==b.geometry&&void 0!==b.geometry.vertices)for(var f=b.geometry.vertices,e=0,g=f.length;e<g;e++)a.copy(f[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<
this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||
a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||
a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=0.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);
this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,
this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};
THREE.Matrix3=function(a,b,c,d,f,e,g,i,j){var k=this.elements=new Float32Array(9);k[0]=void 0!==a?a:1;k[3]=b||0;k[6]=c||0;k[1]=d||0;k[4]=void 0!==f?f:1;k[7]=e||0;k[2]=g||0;k[5]=i||0;k[8]=void 0!==j?j:1};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,f,e,g,i,j){var k=this.elements;k[0]=a;k[3]=b;k[6]=c;k[1]=d;k[4]=f;k[7]=e;k[2]=g;k[5]=i;k[8]=j;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
multiplyVector3Array:function(a){console.warn("DEPRECATED: Matrix3's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=b.length);for(var f=0;f<d;f+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=
a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],f=a[3],e=a[4],g=a[5],i=a[6],j=a[7],a=a[8];return b*e*a-b*g*j-c*f*a+c*g*i+d*f*j-d*e*i},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-
c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];
a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],
a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}};THREE.Matrix4=function(a,b,c,d,f,e,g,i,j,k,n,p,m,s,w,l){var q=this.elements=new Float32Array(16);q[0]=void 0!==a?a:1;q[4]=b||0;q[8]=c||0;q[12]=d||0;q[1]=f||0;q[5]=void 0!==e?e:1;q[9]=g||0;q[13]=i||0;q[2]=j||0;q[6]=k||0;q[10]=void 0!==n?n:1;q[14]=p||0;q[3]=m||0;q[7]=s||0;q[11]=w||0;q[15]=void 0!==l?l:1};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,f,e,g,i,j,k,n,p,m,s,w,l){var q=this.elements;q[0]=a;q[4]=b;q[8]=c;q[12]=d;q[1]=f;q[5]=e;q[9]=g;q[13]=i;q[2]=j;q[6]=k;q[10]=n;q[14]=p;q[3]=m;q[7]=s;q[11]=w;q[15]=l;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");
return this.copyPosition(a)},copyPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements,b=b.elements,d=1/a.set(b[0],b[1],b[2]).length(),f=1/a.set(b[4],b[5],b[6]).length(),e=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*f;c[5]=b[5]*f;c[6]=b[6]*f;c[8]=b[8]*e;c[9]=b[9]*e;c[10]=b[10]*e;return this}}(),makeRotationFromEuler:function(a){!1===
a instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var b=this.elements,c=a.x,d=a.y,f=a.z,e=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),i=Math.cos(f),f=Math.sin(f);if("XYZ"===a.order){var a=e*i,j=e*f,k=c*i,n=c*f;b[0]=g*i;b[4]=-g*f;b[8]=d;b[1]=j+k*d;b[5]=a-n*d;b[9]=-c*g;b[2]=n-a*d;b[6]=k+j*d;b[10]=e*g}else"YXZ"===a.order?(a=g*i,j=g*f,k=d*i,n=d*f,b[0]=a+n*c,b[4]=k*c-j,b[8]=
e*d,b[1]=e*f,b[5]=e*i,b[9]=-c,b[2]=j*c-k,b[6]=n+a*c,b[10]=e*g):"ZXY"===a.order?(a=g*i,j=g*f,k=d*i,n=d*f,b[0]=a-n*c,b[4]=-e*f,b[8]=k+j*c,b[1]=j+k*c,b[5]=e*i,b[9]=n-a*c,b[2]=-e*d,b[6]=c,b[10]=e*g):"ZYX"===a.order?(a=e*i,j=e*f,k=c*i,n=c*f,b[0]=g*i,b[4]=k*d-j,b[8]=a*d+n,b[1]=g*f,b[5]=n*d+a,b[9]=j*d-k,b[2]=-d,b[6]=c*g,b[10]=e*g):"YZX"===a.order?(a=e*g,j=e*d,k=c*g,n=c*d,b[0]=g*i,b[4]=n-a*f,b[8]=k*f+j,b[1]=f,b[5]=e*i,b[9]=-c*i,b[2]=-d*i,b[6]=j*f+k,b[10]=a-n*f):"XZY"===a.order&&(a=e*g,j=e*d,k=c*g,n=c*d,b[0]=
g*i,b[4]=-f,b[8]=d*i,b[1]=a*f+n,b[5]=e*i,b[9]=j*f-k,b[2]=k*f-j,b[6]=c*i,b[10]=n*f+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w,g=c+c,i=d+d,j=f+f,a=c*g,k=c*i,c=
c*j,n=d*i,d=d*j,f=f*j,g=e*g,i=e*i,e=e*j;b[0]=1-(n+f);b[4]=k-e;b[8]=c+i;b[1]=k+e;b[5]=1-(a+f);b[9]=d-g;b[2]=c-i;b[6]=d+g;b[10]=1-(a+n);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,f,e){var g=this.elements;c.subVectors(d,f).normalize();0===c.length()&&(c.z=1);a.crossVectors(e,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(e,c).normalize());b.crossVectors(c,a);g[0]=a.x;
g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,f=this.elements,e=c[0],g=c[4],i=c[8],j=c[12],k=c[1],n=c[5],p=c[9],m=c[13],s=c[2],w=c[6],l=c[10],q=c[14],t=c[3],r=c[7],u=c[11],c=c[15],
y=d[0],v=d[4],B=d[8],E=d[12],K=d[1],z=d[5],H=d[9],J=d[13],M=d[2],x=d[6],L=d[10],C=d[14],G=d[3],D=d[7],Q=d[11],d=d[15];f[0]=e*y+g*K+i*M+j*G;f[4]=e*v+g*z+i*x+j*D;f[8]=e*B+g*H+i*L+j*Q;f[12]=e*E+g*J+i*C+j*d;f[1]=k*y+n*K+p*M+m*G;f[5]=k*v+n*z+p*x+m*D;f[9]=k*B+n*H+p*L+m*Q;f[13]=k*E+n*J+p*C+m*d;f[2]=s*y+w*K+l*M+q*G;f[6]=s*v+w*z+l*x+q*D;f[10]=s*B+w*H+l*L+q*Q;f[14]=s*E+w*J+l*C+q*d;f[3]=t*y+r*K+u*M+c*G;f[7]=t*v+r*z+u*x+c*D;f[11]=t*B+r*H+u*L+c*Q;f[15]=t*E+r*J+u*C+c*d;return this},multiplyToArray:function(a,b,
c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return a.applyProjection(this)},multiplyVector4:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);
void 0===d&&(d=b.length);for(var f=0;f<d;f+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix4(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)},crossVector:function(a){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},determinant:function(){var a=
this.elements,b=a[0],c=a[4],d=a[8],f=a[12],e=a[1],g=a[5],i=a[9],j=a[13],k=a[2],n=a[6],p=a[10],m=a[14];return a[3]*(+f*i*n-d*j*n-f*g*p+c*j*p+d*g*m-c*i*m)+a[7]*(+b*i*m-b*j*p+f*e*p-d*e*m+d*j*k-f*i*k)+a[11]*(+b*j*n-b*g*m-f*e*n+c*e*m+f*g*k-c*j*k)+a[15]*(-d*g*k-b*i*n+b*g*p+d*e*n-c*e*p+c*i*k)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,
b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=
this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,f=d[0],e=d[4],g=d[8],i=d[12],j=d[1],k=d[5],n=d[9],p=d[13],m=d[2],s=d[6],w=d[10],l=d[14],q=d[3],t=d[7],r=d[11],d=d[15];c[0]=n*l*t-p*w*t+p*s*r-k*l*r-n*s*d+k*w*d;c[4]=i*w*t-g*l*t-i*s*r+e*l*r+g*s*d-e*w*d;c[8]=g*p*t-i*n*t+i*k*r-e*p*r-g*k*d+e*n*d;c[12]=i*n*s-g*p*s-i*k*w+e*p*w+g*k*l-e*n*l;c[1]=p*w*q-n*l*q-p*m*r+j*l*r+n*m*d-j*w*d;c[5]=g*l*q-i*w*q+i*m*r-f*l*r-g*m*d+f*w*d;c[9]=i*n*q-g*p*q-i*j*
r+f*p*r+g*j*d-f*n*d;c[13]=g*p*m-i*n*m+i*j*w-f*p*w-g*j*l+f*n*l;c[2]=k*l*q-p*s*q+p*m*t-j*l*t-k*m*d+j*s*d;c[6]=i*s*q-e*l*q-i*m*t+f*l*t+e*m*d-f*s*d;c[10]=e*p*q-i*k*q+i*j*t-f*p*t-e*j*d+f*k*d;c[14]=i*k*m-e*p*m-i*j*s+f*p*s+e*j*l-f*k*l;c[3]=n*s*q-k*w*q-n*m*t+j*w*t+k*m*r-j*s*r;c[7]=e*w*q-g*s*q+g*m*t-f*w*t-e*m*r+f*s*r;c[11]=g*k*q-e*n*q-g*j*t+f*n*t+e*j*r-f*k*r;c[15]=e*n*m-g*k*m+g*j*s-f*n*s-e*j*w+f*k*w;c=f*c[0]+j*c[4]+m*c[8]+q*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");
console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},
scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,
0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,e=a.x,g=a.y,i=a.z,j=f*e,k=f*g;this.set(j*e+c,j*g-d*i,j*i+d*g,0,j*g+d*i,k*g+c,k*i-d*e,0,j*i-d*g,k*i+d*e,f*i*i+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,
0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,f){var e=this.elements,g=a.set(e[0],e[1],e[2]).length(),i=a.set(e[4],e[5],e[6]).length(),j=a.set(e[8],e[9],e[10]).length();0>this.determinant()&&(g=-g);c.x=e[12];c.y=e[13];c.z=e[14];b.elements.set(this.elements);var c=1/g,e=1/i,k=1/j;b.elements[0]*=c;b.elements[1]*=
c;b.elements[2]*=c;b.elements[4]*=e;b.elements[5]*=e;b.elements[6]*=e;b.elements[8]*=k;b.elements[9]*=k;b.elements[10]*=k;d.setFromRotationMatrix(b);f.x=g;f.y=i;f.z=j;return this}}(),makeFrustum:function(a,b,c,d,f,e){var g=this.elements;g[0]=2*f/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*f/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(e+f)/(e-f);g[14]=-2*e*f/(e-f);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(THREE.Math.degToRad(0.5*
a)),f=-a;return this.makeFrustum(f*b,a*b,f,a,c,d)},makeOrthographic:function(a,b,c,d,f,e){var g=this.elements,i=b-a,j=c-d,k=e-f;g[0]=2/i;g[4]=0;g[8]=0;g[12]=-((b+a)/i);g[1]=0;g[5]=2/j;g[9]=0;g[13]=-((c+d)/j);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((e+f)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){var a=
this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);
var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(a,b,c,d){var f=a.clone().add(b).multiplyScalar(0.5),e=b.clone().sub(a).normalize(),g=0.5*a.distanceTo(b),
i=this.origin.clone().sub(f),a=-this.direction.dot(e),b=i.dot(this.direction),j=-i.dot(e),k=i.lengthSq(),n=Math.abs(1-a*a),p,m;0<=n?(i=a*j-b,p=a*b-j,m=g*n,0<=i?p>=-m?p<=m?(g=1/n,i*=g,p*=g,a=i*(i+a*p+2*b)+p*(a*i+p+2*j)+k):(p=g,i=Math.max(0,-(a*p+b)),a=-i*i+p*(p+2*j)+k):(p=-g,i=Math.max(0,-(a*p+b)),a=-i*i+p*(p+2*j)+k):p<=-m?(i=Math.max(0,-(-a*g+b)),p=0<i?-g:Math.min(Math.max(-g,-j),g),a=-i*i+p*(p+2*j)+k):p<=m?(i=0,p=Math.min(Math.max(-g,-j),g),a=p*(p+2*j)+k):(i=Math.max(0,-(a*g+b)),p=0<i?g:Math.min(Math.max(-g,
-j),g),a=-i*i+p*(p+2*j)+k)):(p=0<a?-g:g,i=Math.max(0,-(a*p+b)),a=-i*i+p*(p+2*j)+k);c&&c.copy(this.direction.clone().multiplyScalar(i).add(this.origin));d&&d.copy(e.clone().multiplyScalar(p).add(f));return a},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?
0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,f,e,g;d=1/this.direction.x;e=1/this.direction.y;g=1/this.direction.z;var i=this.origin;0<=d?(c=(a.min.x-i.x)*d,d*=a.max.x-i.x):(c=(a.max.x-i.x)*d,d*=a.min.x-i.x);0<=e?(f=(a.min.y-i.y)*e,e*=
a.max.y-i.y):(f=(a.max.y-i.y)*e,e*=a.min.y-i.y);if(c>e||f>d)return null;if(f>c||c!==c)c=f;if(e<d||d!==d)d=e;0<=g?(f=(a.min.z-i.z)*g,g*=a.max.z-i.z):(f=(a.max.z-i.z)*g,g*=a.min.z-i.z);if(c>g||f>d)return null;if(f>c||c!==c)c=f;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(f,e,g,i,j){b.subVectors(e,f);c.subVectors(g,f);d.crossVectors(b,c);e=this.direction.dot(d);if(0<
e){if(i)return null;i=1}else if(0>e)i=-1,e=-e;else return null;a.subVectors(this.origin,f);f=i*this.direction.dot(c.crossVectors(a,c));if(0>f)return null;g=i*this.direction.dot(b.cross(a));if(0>g||f+g>e)return null;f=-i*a.dot(d);return 0>f?null:this.at(f/e,j)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},
clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var f=0,e=0,g=b.length;e<g;e++)f=Math.max(f,d.distanceToSquared(b[e]));this.radius=Math.sqrt(f);return this}}(),copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=
this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);
return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Spherical=function(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this};
THREE.Spherical.prototype={constructor:THREE.Spherical,set:function(a,b,c){this.radius=a;this.phi=b;this.theta=c},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.radius.copy(a.radius);this.phi.copy(a.phi);this.theta.copy(a.theta);return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi))},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=Math.acos(THREE.Math.clamp(a.y/
this.radius,-1,1)));return this}};THREE.Frustum=function(a,b,c,d,f,e){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==f?f:new THREE.Plane,void 0!==e?e:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,f,e){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(f);g[5].copy(e);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],f=c[2],e=c[3],g=c[4],i=c[5],j=c[6],k=c[7],n=c[8],p=c[9],m=c[10],s=c[11],w=c[12],l=c[13],q=c[14],c=c[15];b[0].setComponents(e-a,k-g,s-n,c-w).normalize();b[1].setComponents(e+
a,k+g,s+n,c+w).normalize();b[2].setComponents(e+d,k+i,s+p,c+l).normalize();b[3].setComponents(e-d,k-i,s-p,c-l).normalize();b[4].setComponents(e-f,k-j,s-m,c-q).normalize();b[5].setComponents(e+f,k+j,s+m,c+q).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){for(var b=this.planes,
c=a.center,a=-a.radius,d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,f=0;6>f;f++){var e=d[f];a.x=0<e.normal.x?c.min.x:c.max.x;b.x=0<e.normal.x?c.max.x:c.min.x;a.y=0<e.normal.y?c.min.y:c.max.y;b.y=0<e.normal.y?c.max.y:c.min.y;a.z=0<e.normal.z?c.min.z:c.max.z;b.z=0<e.normal.z?c.max.z:c.min.z;var g=e.distanceToPoint(a),e=e.distanceToPoint(b);if(0>g&&0>e)return!1}return!0}}(),containsPoint:function(a){for(var b=
this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,f){d=a.subVectors(f,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,
c);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,f=b.delta(a),e=this.normal.dot(f);if(0==e){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return e=-(b.start.dot(this.normal)+this.constant)/e,0>e||1<e?void 0:d.copy(f).multiplyScalar(e).add(b.start)}}(),
coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,f){var e=f||c.getNormalMatrix(d),e=a.copy(this.normal).applyMatrix3(e),g=this.coplanarPoint(b);g.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(e,g);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};
THREE.Math={generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),b=Array(36),c=0,d;return function(){for(var f=0;36>f;f++)8==f||13==f||18==f||23==f?b[f]="-":14==f?b[f]="4":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[f]=a[19==f?d&3|8:d]);return b.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,f){return d+(a-b)*(f-d)/(c-b)},smoothstep:function(a,b,c){if(a<=
b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degToRad:function(){var a=Math.PI/180;return function(b){return b*
a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a}};"function"==typeof Math.sign&&(THREE.Math.sign=Math.sign);
THREE.Spline=function(a){function b(a,b,c,d,f,e,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b}this.points=a;var c=[],d={x:0,y:0,z:0},f,e,g,i,j,k,n,p,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;e=Math.floor(f);g=f-e;c[0]=0===e?e:e-1;c[1]=e;c[2]=e>this.points.length-2?this.points.length-1:e+1;c[3]=e>this.points.length-3?this.points.length-1:
e+2;k=this.points[c[0]];n=this.points[c[1]];p=this.points[c[2]];m=this.points[c[3]];i=g*g;j=g*i;d.x=b(k.x,n.x,p.x,m.x,g,i,j);d.y=b(k.y,n.y,p.y,m.y,g,i,j);d.z=b(k.z,n.z,p.z,m.z,g,i,j);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,f=b=b=0,e=new THREE.Vector3,g=new THREE.Vector3,i=[],j=0;i[0]=0;a||(a=100);c=this.points.length*a;e.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),j+=g.distanceTo(e),e.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=f&&(i[b]=j,f=b);i[i.length]=j;return{chunks:i,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,f,e,g,i=[],j=new THREE.Vector3,p=this.getLength();i.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=p.chunks[b]-p.chunks[b-1];g=Math.ceil(a*c/p.total);f=(b-1)/(this.points.length-1);e=b/(this.points.length-1);for(c=1;c<g-1;c++)d=f+c*(1/g)*(e-f),d=this.getPoint(d),
i.push(j.copy(d).clone());i.push(j.copy(this.points[b]).clone())}this.points=i}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){console.log("THREE.EventDispathcer")};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&
c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,f=0;f<d;f++)c[f]=b[f];for(f=0;f<d;f++)c[f].call(this,a)}}}};
(function(a){a.Raycaster=function(b,c,d,f){this.ray=new a.Ray(b,c);this.near=d||0;this.far=f||Infinity};var b=new a.Sphere,c=new a.Ray;new a.Plane;new a.Vector3;var d=new a.Vector3,f=new a.Matrix4,e=function(a,b){return a.distance-b.distance},g=new a.Vector3,i=new a.Vector3,j=new a.Vector3,k=function(e,m,s){if(e instanceof a.Sprite){d.setFromMatrixPosition(e.matrixWorld);var n=m.ray.distanceToPoint(d);if(n>e.scale.x)return s;s.push({distance:n,point:e.position,face:null,object:e})}else if(e instanceof
a.LOD)d.setFromMatrixPosition(e.matrixWorld),n=m.ray.origin.distanceTo(d),k(e.getObjectForDistance(n),m,s);else if(e instanceof a.Mesh){var l=e.geometry;null===l.boundingSphere&&l.computeBoundingSphere();b.copy(l.boundingSphere);b.applyMatrix4(e.matrixWorld);if(!1===m.ray.isIntersectionSphere(b))return s;f.getInverse(e.matrixWorld);c.copy(m.ray).applyMatrix4(f);if(null!==l.boundingBox&&!1===c.isIntersectionBox(l.boundingBox))return s;if(l instanceof a.BufferGeometry){var q=e.material;if(void 0===
q)return s;var t=l.attributes,r,u,y=m.precision;if(void 0!==t.index){var v=t.index.array,B=t.position.array,E=l.offsets;0===E.length&&(E=[{start:0,count:B.length,index:0}]);for(var K=0,z=E.length;K<z;++K)for(var t=E[K].start,H=E[K].index,l=t,J=t+E[K].count;l<J;l+=3){t=H+v[l];r=H+v[l+1];u=H+v[l+2];g.set(B[3*t],B[3*t+1],B[3*t+2]);i.set(B[3*r],B[3*r+1],B[3*r+2]);j.set(B[3*u],B[3*u+1],B[3*u+2]);var M=q.side===a.BackSide?c.intersectTriangle(j,i,g,!0):c.intersectTriangle(g,i,j,q.side!==a.DoubleSide);null!==
M&&(M.applyMatrix4(e.matrixWorld),n=m.ray.origin.distanceTo(M),n<y||(n<m.near||n>m.far)||s.push({distance:n,point:M,indices:[t,r,u],face:null,faceIndex:null,object:e}))}}else{B=t.position.array;l=0;for(J=t.position.array.length;l<J;l+=3)t=l,r=l+1,u=l+2,g.set(B[3*t],B[3*t+1],B[3*t+2]),i.set(B[3*r],B[3*r+1],B[3*r+2]),j.set(B[3*u],B[3*u+1],B[3*u+2]),M=q.side===a.BackSide?c.intersectTriangle(j,i,g,!0):c.intersectTriangle(g,i,j,q.side!==a.DoubleSide),null!==M&&(M.applyMatrix4(e.matrixWorld),n=m.ray.origin.distanceTo(M),
n<y||(n<m.near||n>m.far)||s.push({distance:n,point:M,indices:[t,r,u],face:null,faceIndex:null,object:e}))}}else if(l instanceof a.Geometry){B=e.material instanceof a.MeshFaceMaterial;E=!0===B?e.material.materials:null;y=m.precision;v=l.vertices;K=0;for(z=l.faces.length;K<z;K++)if(H=l.faces[K],q=!0===B?E[H.materialIndex]:e.material,void 0!==q){t=v[H.a];r=v[H.b];u=v[H.c];if(!0===q.morphTargets){n=l.morphTargets;M=e.morphTargetInfluences;g.set(0,0,0);i.set(0,0,0);j.set(0,0,0);for(var J=0,x=n.length;J<
x;J++){var L=M[J];if(0!==L){var C=n[J].vertices;g.x+=(C[H.a].x-t.x)*L;g.y+=(C[H.a].y-t.y)*L;g.z+=(C[H.a].z-t.z)*L;i.x+=(C[H.b].x-r.x)*L;i.y+=(C[H.b].y-r.y)*L;i.z+=(C[H.b].z-r.z)*L;j.x+=(C[H.c].x-u.x)*L;j.y+=(C[H.c].y-u.y)*L;j.z+=(C[H.c].z-u.z)*L}}g.add(t);i.add(r);j.add(u);t=g;r=i;u=j}M=q.side===a.BackSide?c.intersectTriangle(u,r,t,!0):c.intersectTriangle(t,r,u,q.side!==a.DoubleSide);null!==M&&(M.applyMatrix4(e.matrixWorld),n=m.ray.origin.distanceTo(M),n<y||(n<m.near||n>m.far)||s.push({distance:n,
point:M,face:H,faceIndex:K,object:e}))}}}else if(e instanceof a.Line){y=m.linePrecision;q=y*y;l=e.geometry;null===l.boundingSphere&&l.computeBoundingSphere();b.copy(l.boundingSphere);b.applyMatrix4(e.matrixWorld);if(!1===m.ray.isIntersectionSphere(b))return s;f.getInverse(e.matrixWorld);c.copy(m.ray).applyMatrix4(f);if(l instanceof a.Geometry){v=l.vertices;y=v.length;t=new a.Vector3;r=new a.Vector3;u=e.type===a.LineStrip?1:2;for(l=0;l<y-1;l+=u)c.distanceSqToSegment(v[l],v[l+1],r,t)>q||(n=c.origin.distanceTo(r),
n<m.near||n>m.far||s.push({distance:n,point:t.clone().applyMatrix4(e.matrixWorld),face:null,faceIndex:null,object:e}))}}},n=function(a,b,c){for(var a=a.getDescendants(),d=0,f=a.length;d<f;d++)k(a[d],b,c)};a.Raycaster.prototype.precision=1E-4;a.Raycaster.prototype.linePrecision=1;a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b)};a.Raycaster.prototype.intersectObject=function(a,b){var c=[];!0===b&&n(a,this,c);k(a,this,c);c.sort(e);return c};a.Raycaster.prototype.intersectObjects=function(a,
b){for(var c=[],d=0,f=a.length;d<f;d++)k(a[d],this,c),!0===b&&n(a[d],this,c);c.sort(e);return c}})(THREE);
THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;var a=this;Object.defineProperties(this,{rotation:{enumerable:!0,value:(new THREE.Euler).onChange(function(){a.quaternion.setFromEuler(a.rotation,!1)})},quaternion:{enumerable:!0,value:(new THREE.Quaternion).onChange(function(){a.rotation.setFromQuaternion(a.quaternion,void 0,!1)})},scale:{enumerable:!0,
value:new THREE.Vector3(1,1,1)}});this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};
THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");return this.rotation.order},set eulerOrder(a){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=a},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},
applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,
c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b);a.applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));
return this}}(),translate:function(a,b){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,
b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&
a.parent.remove(a);a.parent=this;a.dispatchEvent({type:"added"});this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;a.dispatchEvent({type:"removed"});this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},
getObjectById:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var f=this.children[c];if(f.id===a||!0===b&&(f=f.getObjectById(a,b),void 0!==f))return f}},getObjectByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var f=this.children[c];if(f.name===a||!0===b&&(f=f.getObjectByName(a,b),void 0!==f))return f}},getChildByName:function(a,b){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a,b)},getDescendants:function(a){void 0===
a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=
this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;
THREE.Projector=function(){function a(){if(n===m){var a=new THREE.RenderableVertex;p.push(a);m++;n++;return a}return p[n++]}function b(){if(w===q){var a=new THREE.RenderableFace;l.push(a);q++;w++;return a}return l[w++]}function c(){if(r===y){var a=new THREE.RenderableLine;u.push(a);y++;r++;return a}return u[r++]}function d(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function f(a,b){var c=0,d=1,f=a.z+a.w,e=b.z+b.w,g=-a.z+a.w,i=-b.z+b.w;if(0<=f&&0<=e&&0<=g&&0<=i)return!0;if(0>f&&0>e||0>g&&
0>i)return!1;0>f?c=Math.max(c,f/(f-e)):0>e&&(d=Math.min(d,f/(f-e)));0>g?c=Math.max(c,g/(g-i)):0>i&&(d=Math.min(d,g/(g-i)));if(d<c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var e,g,i=[],j=0,k,n,p=[],m=0,s,w,l=[],q=0,t,r,u=[],y=0,v,B,E=[],K=0,z={objects:[],lights:[],elements:[]},H=new THREE.Vector3,J=new THREE.Vector3,M=new THREE.Vector3,x=new THREE.Vector3,L=new THREE.Vector4,C=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),G=new THREE.Box3,D=Array(3),Q=new THREE.Matrix4,N=
new THREE.Matrix4,ea,Ra=new THREE.Matrix4,Ga=new THREE.Matrix3,Aa=new THREE.Frustum,sa=new THREE.Vector4,ga=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);N.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);return a.applyProjection(N)};var pa=new THREE.Matrix4;this.unprojectVector=function(a,b){pa.getInverse(b.projectionMatrix);N.multiplyMatrices(b.matrixWorld,pa);return a.applyProjection(N)};this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,
a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.sub(a).normalize();return new THREE.Raycaster(a,c)};var I=function(a){if(!1!==a.visible){if(a instanceof THREE.Light)z.lights.push(a);else if(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Sprite)if(!1===a.frustumCulled||!0===Aa.intersectsObject(a)){if(g===j){var b=new THREE.RenderableObject;i.push(b);j++;g++;e=b}else e=i[g++];e.id=a.id;e.object=a;null!==a.renderDepth?e.z=a.renderDepth:(x.setFromMatrixPosition(a.matrixWorld),
x.applyProjection(N),e.z=x.z);z.objects.push(e)}for(var b=0,c=a.children.length;b<c;b++)I(a.children[b])}},V=new function(){var d=[],f=[],e=null,g=null,i=new THREE.Matrix3,j=function(a){var b=a.positionWorld,c=a.positionScreen;b.copy(a.position).applyMatrix4(ea);c.copy(b).applyMatrix4(N);b=1/c.w;c.x*=b;c.y*=b;c.z*=b;a.visible=-1<=c.x&&1>=c.x&&-1<=c.y&&1>=c.y&&-1<=c.z&&1>=c.z},l=function(a,b,c){if(!0===a.visible||!0===b.visible||!0===c.visible)return!0;D[0]=a.positionScreen;D[1]=b.positionScreen;D[2]=
c.positionScreen;return C.isIntersectionBox(G.setFromPoints(D))},m=function(a,b,c){return 0>(c.positionScreen.x-a.positionScreen.x)*(b.positionScreen.y-a.positionScreen.y)-(c.positionScreen.y-a.positionScreen.y)*(b.positionScreen.x-a.positionScreen.x)};return{setObject:function(a){e=a;g=e.material;i.getNormalMatrix(e.matrixWorld);d.length=0;f.length=0},projectVertex:j,checkTriangleVisibility:l,checkBackfaceCulling:m,pushVertex:function(b,c,d){k=a();k.position.set(b,c,d);j(k)},pushNormal:function(a,
b,c){d.push(a,b,c)},pushUv:function(a,b){f.push(a,b)},pushLine:function(a,b){var d=p[a],f=p[b];t=c();t.id=e.id;t.v1.copy(d);t.v2.copy(f);t.z=(d.positionScreen.z+f.positionScreen.z)/2;t.material=e.material;z.elements.push(t)},pushTriangle:function(a,c,j){var k=p[a],n=p[c],r=p[j];if(!1!==l(k,n,r)&&(g.side===THREE.DoubleSide||!0===m(k,n,r))){s=b();s.id=e.id;s.v1.copy(k);s.v2.copy(n);s.v3.copy(r);s.z=(k.positionScreen.z+n.positionScreen.z+r.positionScreen.z)/3;for(k=0;3>k;k++)n=3*arguments[k],r=s.vertexNormalsModel[k],
r.set(d[n],d[n+1],d[n+2]),r.applyMatrix3(i).normalize(),n=2*arguments[k],s.uvs[k].set(f[n],f[n+1]);s.vertexNormalsLength=3;s.material=e.material;z.elements.push(s)}}}};this.projectScene=function(e,i,j,l){var k,m,q,u,y,C,G,x;B=r=w=0;z.elements.length=0;!0===e.autoUpdate&&e.updateMatrixWorld();void 0===i.parent&&i.updateMatrixWorld();Q.copy(i.matrixWorldInverse.getInverse(i.matrixWorld));N.multiplyMatrices(i.projectionMatrix,Q);Aa.setFromMatrix(N);g=0;z.objects.length=0;z.lights.length=0;I(e);!0===
j&&z.objects.sort(d);e=0;for(j=z.objects.length;e<j;e++)if(k=z.objects[e].object,m=k.geometry,V.setObject(k),ea=k.matrixWorld,n=0,k instanceof THREE.Mesh)if(m instanceof THREE.BufferGeometry){if(C=m.attributes,k=m.offsets,void 0!==C.position){G=C.position.array;m=0;for(u=G.length;m<u;m+=3)V.pushVertex(G[m],G[m+1],G[m+2]);if(void 0!==C.normal){x=C.normal.array;m=0;for(u=x.length;m<u;m+=3)V.pushNormal(x[m],x[m+1],x[m+2])}if(void 0!==C.uv){x=C.uv.array;m=0;for(u=x.length;m<u;m+=2)V.pushUv(x[m],x[m+1])}if(void 0!==
C.index)if(C=C.index.array,0<k.length)for(e=0;e<k.length;e++){u=k[e];G=u.index;m=u.start;for(u=u.start+u.count;m<u;m+=3)V.pushTriangle(C[m]+G,C[m+1]+G,C[m+2]+G)}else{m=0;for(u=C.length;m<u;m+=3)V.pushTriangle(C[m],C[m+1],C[m+2])}else{m=0;for(u=G.length/3;m<u;m+=3)V.pushTriangle(m,m+1,m+2)}}}else{if(m instanceof THREE.Geometry){q=m.vertices;u=m.faces;C=m.faceVertexUvs[0];Ga.getNormalMatrix(ea);G=k.material instanceof THREE.MeshFaceMaterial;x=!0===G?k.material:null;for(var D=0,ta=q.length;D<ta;D++){var X=
q[D];V.pushVertex(X.x,X.y,X.z)}D=0;for(ta=u.length;D<ta;D++){q=u[D];var pa=!0===G?x.materials[q.materialIndex]:k.material;if(void 0!==pa){var la=pa.side,X=p[q.a],qa=p[q.b],ra=p[q.c];if(!0===pa.morphTargets){y=m.morphTargets;var ua=k.morphTargetInfluences,ma=X.position,va=qa.position,wa=ra.position;H.set(0,0,0);J.set(0,0,0);M.set(0,0,0);for(var Sa=0,jb=y.length;Sa<jb;Sa++){var fa=ua[Sa];if(0!==fa){var na=y[Sa].vertices;H.x+=(na[q.a].x-ma.x)*fa;H.y+=(na[q.a].y-ma.y)*fa;H.z+=(na[q.a].z-ma.z)*fa;J.x+=
(na[q.b].x-va.x)*fa;J.y+=(na[q.b].y-va.y)*fa;J.z+=(na[q.b].z-va.z)*fa;M.x+=(na[q.c].x-wa.x)*fa;M.y+=(na[q.c].y-wa.y)*fa;M.z+=(na[q.c].z-wa.z)*fa}}X.position.add(H);qa.position.add(J);ra.position.add(M);V.projectVertex(X);V.projectVertex(qa);V.projectVertex(ra)}if(!1!==V.checkTriangleVisibility(X,qa,ra)){ua=V.checkBackfaceCulling(X,qa,ra);if(la!==THREE.DoubleSide){if(la===THREE.FrontSide&&!1===ua)continue;if(la===THREE.BackSide&&!0===ua)continue}s=b();s.id=k.id;s.v1.copy(X);s.v2.copy(qa);s.v3.copy(ra);
s.normalModel.copy(q.normal);!1===ua&&(la===THREE.BackSide||la===THREE.DoubleSide)&&s.normalModel.negate();s.normalModel.applyMatrix3(Ga).normalize();y=q.vertexNormals;ma=0;for(va=Math.min(y.length,3);ma<va;ma++)wa=s.vertexNormalsModel[ma],wa.copy(y[ma]),!1===ua&&(la===THREE.BackSide||la===THREE.DoubleSide)&&wa.negate(),wa.applyMatrix3(Ga).normalize();s.vertexNormalsLength=y.length;la=C[D];if(void 0!==la)for(y=0;3>y;y++)s.uvs[y].copy(la[y]);s.color=q.color;s.material=pa;s.z=(X.positionScreen.z+qa.positionScreen.z+
ra.positionScreen.z)/3;z.elements.push(s)}}}}}else if(k instanceof THREE.Line)if(m instanceof THREE.BufferGeometry){if(C=m.attributes,void 0!==C.position){G=C.position.array;m=0;for(u=G.length;m<u;m+=3)V.pushVertex(G[m],G[m+1],G[m+2]);if(void 0!==C.index){C=C.index.array;m=0;for(u=C.length;m<u;m+=2)V.pushLine(C[m],C[m+1])}else{m=0;for(u=G.length/3-1;m<u;m++)V.pushLine(m,m+1)}}}else{if(m instanceof THREE.Geometry&&(Ra.multiplyMatrices(N,ea),q=k.geometry.vertices,0!==q.length)){X=a();X.positionScreen.copy(q[0]).applyMatrix4(Ra);
m=k.type===THREE.LinePieces?2:1;D=1;for(ta=q.length;D<ta;D++)X=a(),X.positionScreen.copy(q[D]).applyMatrix4(Ra),0<(D+1)%m||(qa=p[n-2],sa.copy(X.positionScreen),ga.copy(qa.positionScreen),!0===f(sa,ga)&&(sa.multiplyScalar(1/sa.w),ga.multiplyScalar(1/ga.w),t=c(),t.id=k.id,t.v1.positionScreen.copy(sa),t.v2.positionScreen.copy(ga),t.z=Math.max(sa.z,ga.z),t.material=k.material,k.material.vertexColors===THREE.VertexColors&&(t.vertexColors[0].copy(k.geometry.colors[D]),t.vertexColors[1].copy(k.geometry.colors[D-
1])),z.elements.push(t)))}}else k instanceof THREE.Sprite&&(L.set(ea.elements[12],ea.elements[13],ea.elements[14],1),L.applyMatrix4(N),m=1/L.w,L.z*=m,-1<=L.z&&1>=L.z&&(B===K?(u=new THREE.RenderableSprite,E.push(u),K++,B++,v=u):v=E[B++],v.id=k.id,v.x=L.x*m,v.y=L.y*m,v.z=L.z,v.object=k,v.rotation=k.rotation,v.scale.x=k.scale.x*Math.abs(v.x-(L.x+i.projectionMatrix.elements[0])/(L.w+i.projectionMatrix.elements[12])),v.scale.y=k.scale.y*Math.abs(v.y-(L.y+i.projectionMatrix.elements[5])/(L.w+i.projectionMatrix.elements[13])),
v.material=k.material,z.elements.push(v)));!0===l&&z.elements.sort(d);return z}};THREE.BufferAttribute=function(a,b){this.array=a;this.itemSize=b};
THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(a){this.array.set(a)},setX:function(a,b){this.array[a*this.itemSize]=b},setY:function(a,b){this.array[a*this.itemSize+1]=b},setZ:function(a,b){this.array[a*this.itemSize+2]=b},setXY:function(a,b,c){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d},setXYZW:function(a,b,c,d,f){a*=this.itemSize;
this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=f},setArray:function(a){this.array=a}};THREE.Int8Attribute=function(a,b){console.log("THREE.Int8Attribute");this.array=new Int8Array(a*b);this.itemSize=b};THREE.Int8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint8Attribute=function(a,b){this.array=new Uint8Array(a*b);this.itemSize=b};THREE.Uint8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);
THREE.Uint8ClampedAttribute=function(a,b){this.array=new Uint8ClampedArray(a*b);this.itemSize=b};THREE.Uint8ClampedAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Int16Attribute=function(a,b){this.array=new Int16Array(a*b);this.itemSize=b};THREE.Int16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint16Attribute=function(a,b){this.array=new Uint16Array(a*b);this.itemSize=b};THREE.Uint16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);
THREE.Int32Attribute=function(a,b){this.array=new Int32Array(a*b);this.itemSize=b};THREE.Int32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint32Attribute=function(a,b){this.array=new Uint32Array(a*b);this.itemSize=b};THREE.Uint32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Float32Attribute=function(a,b){this.array=new Float32Array(a*b);this.itemSize=b};THREE.Float32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);
THREE.Float64Attribute=function(a,b){this.array=new Float64Array(a*b);this.itemSize=b};THREE.Float64Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c){!1===b instanceof THREE.BufferAttribute?(console.warn("DEPRECATED: BufferGeometry's addAttribute() now expects ( name, attribute )."),this.attributes[a]={array:b,itemSize:c}):this.attributes[a]=b},getAttribute:function(a){return this.attributes[a]},addDrawCall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void 0!==c?c:0})},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),
b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;if(a){var b=this.boundingBox;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var c=3,d=a.length;c<d;c+=3){var f=a[c],e=a[c+1],g=a[c+2];f<b.min.x?b.min.x=f:f>b.max.x&&(b.max.x=f);e<b.min.y?b.min.y=e:
e>b.max.y&&(b.max.y=e);g<b.min.z?b.min.z=g:g>b.max.z&&(b.max.z=g)}}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){a.makeEmpty();for(var d=this.boundingSphere.center,f=0,e=c.length;f<e;f+=3)b.set(c[f],c[f+1],c[f+2]),a.addPoint(b);a.center(d);for(var g=0,
f=0,e=c.length;f<e;f+=3)b.set(c[f],c[f+1],c[f+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a)};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var f=this.attributes.position.array,
e=this.attributes.normal.array,g,i,j,k,n,p,m=new THREE.Vector3,s=new THREE.Vector3,w=new THREE.Vector3,l=new THREE.Vector3,q=new THREE.Vector3;if(this.attributes.index){var t=this.attributes.index.array,r=0<this.offsets.length?this.offsets:[{start:0,count:t.length,index:0}];c=0;for(d=r.length;c<d;++c){b=r[c].start;g=r[c].count;var u=r[c].index;a=b;for(b+=g;a<b;a+=3)g=u+t[a],i=u+t[a+1],j=u+t[a+2],k=f[3*g],n=f[3*g+1],p=f[3*g+2],m.set(k,n,p),k=f[3*i],n=f[3*i+1],p=f[3*i+2],s.set(k,n,p),k=f[3*j],n=f[3*
j+1],p=f[3*j+2],w.set(k,n,p),l.subVectors(w,s),q.subVectors(m,s),l.cross(q),e[3*g]+=l.x,e[3*g+1]+=l.y,e[3*g+2]+=l.z,e[3*i]+=l.x,e[3*i+1]+=l.y,e[3*i+2]+=l.z,e[3*j]+=l.x,e[3*j+1]+=l.y,e[3*j+2]+=l.z}}else{a=0;for(b=f.length;a<b;a+=9)k=f[a],n=f[a+1],p=f[a+2],m.set(k,n,p),k=f[a+3],n=f[a+4],p=f[a+5],s.set(k,n,p),k=f[a+6],n=f[a+7],p=f[a+8],w.set(k,n,p),l.subVectors(w,s),q.subVectors(m,s),l.cross(q),e[a]=l.x,e[a+1]=l.y,e[a+2]=l.z,e[a+3]=l.x,e[a+4]=l.y,e[a+5]=l.z,e[a+6]=l.x,e[a+7]=l.y,e[a+8]=l.z}this.normalizeNormals();
this.normalsNeedUpdate=!0}},computeTangents:function(){function a(a){ea.x=d[3*a];ea.y=d[3*a+1];ea.z=d[3*a+2];Ra.copy(ea);Aa=i[a];Q.copy(Aa);Q.sub(ea.multiplyScalar(ea.dot(Aa))).normalize();N.crossVectors(Ra,Aa);sa=N.dot(j[a]);Ga=0>sa?-1:1;g[4*a]=Q.x;g[4*a+1]=Q.y;g[4*a+2]=Q.z;g[4*a+3]=Ga}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");
else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,f=this.attributes.uv.array,e=c.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*e)});for(var g=this.attributes.tangent.array,i=[],j=[],k=0;k<e;k++)i[k]=new THREE.Vector3,j[k]=new THREE.Vector3;var n,p,m,s,w,l,q,t,r,u,y,v,B,E,K,e=new THREE.Vector3,k=new THREE.Vector3,z,H,J,M,x,L,C,G=this.offsets;J=0;for(M=G.length;J<M;++J){H=G[J].start;x=G[J].count;
var D=G[J].index;z=H;for(H+=x;z<H;z+=3)x=D+b[z],L=D+b[z+1],C=D+b[z+2],n=c[3*x],p=c[3*x+1],m=c[3*x+2],s=c[3*L],w=c[3*L+1],l=c[3*L+2],q=c[3*C],t=c[3*C+1],r=c[3*C+2],u=f[2*x],y=f[2*x+1],v=f[2*L],B=f[2*L+1],E=f[2*C],K=f[2*C+1],s-=n,n=q-n,w-=p,p=t-p,l-=m,m=r-m,v-=u,u=E-u,B-=y,y=K-y,K=1/(v*y-u*B),e.set((y*s-B*n)*K,(y*w-B*p)*K,(y*l-B*m)*K),k.set((v*n-u*s)*K,(v*p-u*w)*K,(v*m-u*l)*K),i[x].add(e),i[L].add(e),i[C].add(e),j[x].add(k),j[L].add(k),j[C].add(k)}var Q=new THREE.Vector3,N=new THREE.Vector3,ea=new THREE.Vector3,
Ra=new THREE.Vector3,Ga,Aa,sa;J=0;for(M=G.length;J<M;++J){H=G[J].start;x=G[J].count;D=G[J].index;z=H;for(H+=x;z<H;z+=3)x=D+b[z],L=D+b[z+1],C=D+b[z+2],a(x),a(L),a(C)}}},computeOffsets:function(a){var b=a;void 0===a&&(b=65535);Date.now();for(var a=this.attributes.index.array,c=this.attributes.position.array,d=a.length/3,f=new Uint16Array(a.length),e=0,g=0,i=[{start:0,count:0,index:0}],j=i[0],k=0,n=0,p=new Int32Array(6),m=new Int32Array(c.length),s=new Int32Array(c.length),w=0;w<c.length;w++)m[w]=-1,
s[w]=-1;for(c=0;c<d;c++){for(var l=n=0;3>l;l++)w=a[3*c+l],-1==m[w]?(p[2*l]=w,p[2*l+1]=-1,n++):m[w]<j.index?(p[2*l]=w,p[2*l+1]=-1,k++):(p[2*l]=w,p[2*l+1]=m[w]);if(g+n>j.index+b){j={start:e,count:0,index:g};i.push(j);for(n=0;6>n;n+=2)l=p[n+1],-1<l&&l<j.index&&(p[n+1]=-1)}for(n=0;6>n;n+=2)w=p[n],l=p[n+1],-1===l&&(l=g++),m[w]=l,s[l]=w,f[e++]=l-j.index,j.count++}this.reorderBuffers(f,s,g);return this.offsets=i},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var a=
this.attributes.normal.array,b,c,d,f=0,e=a.length;f<e;f+=3)b=a[f],c=a[f+1],d=a[f+2],b=1/Math.sqrt(b*b+c*c+d*d),a[f]*=b,a[f+1]*=b,a[f+2]*=b},reorderBuffers:function(a,b,c){var d={},f=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],e;for(e in this.attributes)if("index"!=e)for(var g=this.attributes[e].array,i=0,j=f.length;i<j;i++){var k=f[i];if(g instanceof k){d[e]=new k(this.attributes[e].itemSize*c);break}}for(f=0;f<c;f++)for(e in g=
b[f],this.attributes)if("index"!=e)for(var i=this.attributes[e].array,j=this.attributes[e].itemSize,k=d[e],n=0;n<j;n++)k[f*j+n]=i[g*j+n];this.attributes.index.array=a;for(e in this.attributes)"index"!=e&&(this.attributes[e].array=d[e],this.attributes[e].numItems=this.attributes[e].itemSize*c)},clone:function(){var a=new THREE.BufferGeometry,b=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],c;for(c in this.attributes){for(var d=this.attributes[c],
f=d.array,e={itemSize:d.itemSize,array:null},d=0,g=b.length;d<g;d++){var i=b[d];if(f instanceof i){e.array=new i(f);break}}a.attributes[c]=e}d=0;for(g=this.offsets.length;d<g;d++)b=this.offsets[d],a.offsets.push({start:b.start,index:b.index,count:b.count});return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);
THREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};for(var f=a/2,e=b/2,c=Math.floor(c)||1,d=Math.floor(d)||1,g=c+1,i=d+1,j=a/c,k=b/d,b=new Float32Array(3*g*i),a=new Float32Array(3*g*i),n=new Float32Array(2*g*i),p=0,m=0,s=0;s<i;s++)for(var w=s*k-e,l=0;l<g;l++)b[p]=l*j-f,b[p+1]=-w,a[p+2]=1,n[m]=l/c,n[m+1]=1-s/d,p+=3,m+=2;p=0;f=new (65535<b.length/3?Uint32Array:Uint16Array)(6*
c*d);for(s=0;s<d;s++)for(l=0;l<c;l++)e=l+g*(s+1),i=l+1+g*(s+1),j=l+1+g*s,f[p]=l+g*s,f[p+1]=e,f[p+2]=j,f[p+3]=e,f[p+4]=i,f[p+5]=j,p+=6;this.addAttribute("index",new THREE.BufferAttribute(f,1));this.addAttribute("position",new THREE.BufferAttribute(b,3));this.addAttribute("normal",new THREE.BufferAttribute(a,3));this.addAttribute("uv",new THREE.BufferAttribute(n,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;
THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();
THREE.Camera.prototype.clone=function(a){void 0===a&&(a=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,a);a.matrixWorldInverse.copy(this.matrixWorldInverse);a.projectionMatrix.copy(this.projectionMatrix);return a};THREE.OrthographicCamera=function(a,b,c,d,f,e){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==f?f:0.1;this.far=void 0!==e?e:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);
THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,a);a.left=this.left;a.right=this.right;a.top=this.top;a.bottom=this.bottom;a.near=this.near;a.far=this.far;return a};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,f,e){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=f;this.height=e;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,a);a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;return a};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,a);return a};
THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,
0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null;this.susShadows=[]};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraLeft=this.shadowCameraLeft;a.shadowCameraRight=this.shadowCameraRight;a.shadowCameraTop=this.shadowCameraTop;a.shadowCameraBottom=this.shadowCameraBottom;a.shadowCameraVisible=
this.shadowCameraVisible;a.shadowBias=this.shadowBias;a.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;a.shadowCascade=this.shadowCascade;a.shadowCascadeOffset.copy(this.shadowCascadeOffset);a.shadowCascadeCount=this.shadowCascadeCount;a.shadowCascadeBias=this.shadowCascadeBias.slice(0);a.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);a.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);a.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);
a.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return a};THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;THREE.Light.prototype.clone.call(this,a);a.intensity=this.intensity;a.distance=this.distance;return a};
THREE.SpotLight=function(a,b,c,d,f){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.exponent=void 0!==f?f:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=
this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraFov=this.shadowCameraFov;a.shadowCameraVisible=this.shadowCameraVisible;a.shadowBias=this.shadowBias;a.shadowDarkness=
this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;return a};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var f=this,e=new XMLHttpRequest;void 0!==b&&e.addEventListener("load",function(c){b(c.target.responseText);f.manager.itemEnd(a)},!1);void 0!==c&&e.addEventListener("progress",function(a){c(a)},!1);void 0!==d&&e.addEventListener("error",function(a){d(a)},!1);void 0!==this.crossOrigin&&(e.crossOrigin=this.crossOrigin);e.open("GET",a,!0);e.send(null);f.manager.itemStart(a)},setCrossOrigin:function(a){this.crossOrigin=a}};
THREE.LoadingManager=function(a,b,c){var d=this,f=0,e=0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(){e++};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,f,e);if(f===e&&void 0!==d.onLoad)d.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;
THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.colorNoise=!1;this.colorNoiseBase=0.01;this.overdraw=0;this.highlight=
!1;this.highlightValue=new THREE.Vector4(1,1,0,0);this.needsUpdate=this.visible=!0};
THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]="overdraw"==b?Number(c):c}}},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=
this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;a.colorNoise=this.colorNoise;a.colorNoiseBase=this.colorNoiseBase;a.depthNoiseRedux=this.depthNoiseRedux;a.depthNoiseReduxDistance=this.depthNoiseReduxDistance;a.highlight=this.highlight;a.highlightValue=this.highlightValue;
return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=
1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.depthNoiseRedux=this.morphNormals=this.morphTargets=this.skinning=!1;this.depthNoiseReduxDistance=1E3;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;a.depthNoiseRedux=this.depthNoiseRedux;
a.depthNoiseReduxDistance=this.depthNoiseReduxDistance;return a};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(a)};
THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a)};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var a=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,a);return a};
THREE.SkyMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.turbidity=a.turbidity||0;this.reileigh=a.reileigh||2;this.luminance=a.luminance||1;this.mieCoefficient=a.mieCoefficient||0.001;this.mieDirectionalG=a.mieDirectionalG||0.75;this.sunPosition=a.sunPosition||new THREE.Vector3;this.showSunDisk=a.showSunDisk||!0};THREE.SkyMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);
THREE.SkyMaterial.prototype.clone=function(){var a=new THREE.SkyMaterial;THREE.ShaderMaterial.prototype.clone.call(this,a);return a};
THREE.Texture=function(a,b,c,d,f,e,g,i,j){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=a;this.mipmaps=[];this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f?f:THREE.LinearFilter;this.minFilter=void 0!==e?e:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==i?i:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=
this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(a,b,c,d,f,e,g,i,j,k,n){THREE.Texture.call(this,null,e,g,i,j,k,d,f,n);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};
THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){console.log("THREE.ParticleSystem");THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.ParticleSystemMaterial({color:16777215*Math.random()});this.frustumCulled=this.sortParticles=!1};
THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip};
THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a,b){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a,b);return a};
THREE.Sprite=function(){var a=new THREE.Float32Attribute(3,3);a.set([-0.5,-0.5,0,0.5,-0.5,0,0.5,0.5,0]);var b=new THREE.BufferGeometry;b.addAttribute("position",a);return function(a){THREE.Object3D.call(this);this.geometry=b;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera)){this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}this.dispatchEvent({type:"objectAdded",object:a});a.dispatchEvent({type:"addedToScene",scene:this});for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1);if(a.shadowCascadeArray)for(b=0;b<a.shadowCascadeArray.length;b++)this.__removeObject(a.shadowCascadeArray[b])}else a instanceof THREE.Camera||(this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1));this.dispatchEvent({type:"objectRemoved",object:a});a.dispatchEvent({type:"removedFromScene",scene:this});for(b=
0;b<a.children.length;b++)this.__removeObject(a.children[b])};THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};
THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\n\tvec3 reflectVec;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\t\tif ( useRefract ) {\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t} else { \n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\t\t}\n\t#else\n\t\treflectVec = vReflect;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#endif\n\t#ifdef GAMMA_INPUT\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\t#endif\n\tif ( combine == 1 ) {\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\t} else if ( combine == 2 ) {\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\t} else {\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\t}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\tvarying vec3 vReflect;\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP ) || defined ( USE_COLORNOISE )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#endif\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\t#endif\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\tif ( useRefract ) {\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t} else {\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\t#ifdef GAMMA_INPUT\n\t\ttexelColor.xyz *= texelColor.xyz;\n\t#endif\n\tgl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\n\tvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\n\tvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n  #ifdef USE_SHADOWMAP\n  vOverwriteShadow = sign(-dotProduct);\n\t#endif\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\t#ifdef DOUBLE_SIDED\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\t\t#ifdef WRAP_AROUND\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t#endif\n\t#endif\n\t#ifdef WRAP_AROUND\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\t\t#endif\n\t#endif\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\t#ifdef DOUBLE_SIDED\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\t#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef WRAP_AROUND\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\t\t\t#endif\n\t\t#endif\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\t\t#endif\n\t}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\tspotEffect = max( pow( abs(spotEffect), spotLightExponent[ i ] ), 0.0 );\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tlVector = normalize( lVector );\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\t\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\t\t\t#endif\n\t\t}\n\t}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP ) || defined ( USE_COLORNOISE )\n\tvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\tvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP ) || defined ( USE_COLORNOISE )\n\tvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tvec3 pointDiffuse  = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\t#ifdef WRAP_AROUND\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t#else\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\t\t#endif\n\t\tpointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( abs(pointDotNormalHalf), shininess ), 0.0 );\n\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( abs(max( 1.0 - dot( lVector, pointHalfVector ), 0.0 )), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\t}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tvec3 spotDiffuse  = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\tlVector = normalize( lVector );\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\tspotEffect = max( pow( abs(spotEffect), spotLightExponent[ i ] ), 0.0 );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\t\t\t#endif\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( abs(spotDotNormalHalf), shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( abs(max( 1.0 - dot( lVector, spotHalfVector ), 0.0 )), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\t\t}\n\t}\n#endif\nfloat overwriteShadow = 1.0;\n#if MAX_DIR_LIGHTS > 0\n\tvec3 dirDiffuse  = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\tfloat dotProduct = dot( normal, dirVector );\n     overwriteShadow = sign(-dotProduct);\n\t\t#ifdef WRAP_AROUND\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\t\t#else\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\t\t#endif\n\t\tdirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( abs(dirDotNormalHalf), shininess ), 0.0 );\n\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( abs(max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 )), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\t#ifdef GAMMA_INPUT\n\t\tvColor = color * color;\n\t#else\n\t\tvColor = color;\n\t#endif\n#endif",skinning_pars_vertex:"",skinbase_vertex:"",skinning_vertex:"",morphtarget_pars_vertex:"",morphtarget_vertex:"",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\n\tmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",
morphnormal_vertex:"",skinnormal_vertex:"",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\n\tobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\tobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\tobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tvarying float vBias[MAX_SHADOWS];\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n  #ifdef FLOAT_SHADOW_TEXTURE\n     return rgba_depth.x;\n  #else\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n  #endif\n\t}\n  #ifdef LAMBERT\n  varying float vOverwriteShadow;\n  #endif\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n\t#ifdef SHADOWMAP_DEBUG\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\t#endif\n\t#ifdef SHADOWMAP_CASCADE\n\t\tint inFrustumCount = 0;\n\t#endif\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n  #ifdef LAMBERT\n  float overwriteShadow = vOverwriteShadow;\n  #endif\n  gl_FragColor *= vec4( vec3( 1.0 - shadowDarkness[0] * overwriteShadow ), 1.0 );\n  bool frustumTest = false;\n\tfloat shadow = 0.0;\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\t#ifdef SHADOWMAP_CASCADE\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\t\t#else\n        bvec3 frustumTestVec = bvec3( inFrustum, shadowCoord.z <= 1.0, shadowCoord.z >= 0.0 );\n\t\t#endif\n\t\tfrustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t\tshadowCoord.z = clamp(shadowCoord.z + vBias[ i ], 0.0, 1.0);\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\t\tfloat shadowValues = 0.0;\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadowValues += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadowValues += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadowValues += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadowValues += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadowValues += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadowValues += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadowValues += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadowValues += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadowValues += shadowDelta;\n           shadow = max(shadow, shadowValues);\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\t\t\t\tshadow = max(shadow, dot( shadowValues, vec4( 1.0 ) ));\n\t\t\t#else\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\t\t\t#endif\n\t\t}\n\t\t#ifdef SHADOWMAP_DEBUG\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\t\t\t#else\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\t\t\t#endif\n\t\t#endif\n\t}\n\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ 0 ] * shadow ) );\n\t#ifdef GAMMA_OUTPUT\n\t\tshadowColor *= shadowColor;\n\t#endif\n  shadowColor = max(shadowColor, vec3(overwriteShadow));\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\tvarying float vBias[MAX_SHADOWS];\n  #if !defined ( LAMBERT )\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n  #endif\n  #ifdef LAMBERT\n  varying float vOverwriteShadow;\n  #endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n  float biasFac = length(cross( normalize(objectNormal), directionalLightDirection[0] ));\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t\tvBias[ i ] = shadowBias[ i ] * biasFac;\n\t}\n#endif",
alphatest_fragment:"#ifdef ALPHATEST\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif",
logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\t#endif\n#endif",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",colorNoise_pars_fragment:"#ifdef USE_COLORNOISE\n\tuniform float colorNoiseBase;\n  vec4 mod289(vec4 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n  }\n\n  vec4 permute(vec4 x) {\n    return mod289(((x*34.0)+1.0)*x);\n  }\n\n  vec4 taylorInvSqrt(vec4 r) {\n    return 1.79284291400159 - 0.85373472095314 * r;\n  }\n\n  vec2 fade(vec2 t) {\n    return t*t*t*(t*(t*6.0-15.0)+10.0);\n  }\n\n  // Classic Perlin noise\n  float cnoise(vec2 P) {\n    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n    Pi = mod289(Pi); // To avoid truncation effects in permutation\n    vec4 ix = Pi.xzxz;\n    vec4 iy = Pi.yyww;\n    vec4 fx = Pf.xzxz;\n    vec4 fy = Pf.yyww;\n\n    vec4 i = permute(permute(ix) + iy);\n\n    vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;\n    vec4 gy = abs(gx) - 0.5 ;\n    vec4 tx = floor(gx + 0.5);\n    gx = gx - tx;\n\n    vec2 g00 = vec2(gx.x,gy.x);\n    vec2 g10 = vec2(gx.y,gy.y);\n    vec2 g01 = vec2(gx.z,gy.z);\n    vec2 g11 = vec2(gx.w,gy.w);\n\n    vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\n    g00 *= norm.x;  \n    g01 *= norm.y;  \n    g10 *= norm.z;  \n    g11 *= norm.w;  \n\n    float n00 = dot(g00, vec2(fx.x, fy.x));\n    float n10 = dot(g10, vec2(fx.y, fy.y));\n    float n01 = dot(g01, vec2(fx.z, fy.z));\n    float n11 = dot(g11, vec2(fx.w, fy.w));\n\n    vec2 fade_xy = fade(Pf.xy);\n    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n    return 2.3 * n_xy;\n  }\n#endif\n",
colorNoise_fragment:"#ifdef USE_COLORNOISE\n\tgl_FragColor.xyz += colorNoiseBase * vec3(cnoise(vec2(vWorldPosition.x + vWorldPosition.y, vWorldPosition.z + vWorldPosition.y)));\n#endif",depth_noise_pars_vertex:"#ifdef USE_DEPTH_NOISE_REDUX\n\tvarying float vDepthNoiseReduxValue;\n#endif\n",depth_noise_vertex:"#ifdef USE_DEPTH_NOISE_REDUX\n  vDepthNoiseReduxValue = gl_Position.z;\n#endif",depth_noise_pars_fragment:"#ifdef USE_DEPTH_NOISE_REDUX\n\tuniform float depthNoiseReduxDistance;\n\tvarying float vDepthNoiseReduxValue;\n#endif\n",
depth_noise_fragment:"#ifdef USE_DEPTH_NOISE_REDUX\n  gl_FragColor.xyz *= clamp(depthNoiseReduxDistance / max(vDepthNoiseReduxValue, 1.0), 0.0, 1.0);\n#endif",highlight_pars_fragment:"#ifdef USE_HIGHLIGHT_COLOR\n\tuniform vec4 highlightValue;\n#endif\n",highlight_fragment:"#ifdef USE_HIGHLIGHT_COLOR\n  gl_FragColor.xyz = mix(gl_FragColor.xyz, highlightValue.xyz, highlightValue.w);\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)f[c]=d[c];return f},clone:function(a){var b,c,d,f={};for(b in a)for(c in f[b]={},a[b])d=a[b][c],f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return f}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},colorNoiseBase:{type:"f",value:0},morphTargetInfluences:{type:"f",
value:0},highlightValue:{type:"v4",value:new THREE.Vector4(1,1,0,0)}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",
value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},
particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,
THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},
emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,
THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define LAMBERT\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
THREE.ShaderChunk.logdepthbuf_pars_fragment,THREE.ShaderChunk.highlight_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\tgl_FragColor.xyz *= vLightFront;\n\t\telse\n\t\t\tgl_FragColor.xyz *= vLightBack;\n\t#else\n\t\tgl_FragColor.xyz *= vLightFront;\n\t#endif",THREE.ShaderChunk.lightmap_fragment,
THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,THREE.ShaderChunk.highlight_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},
specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)},depthNoiseReduxDistance:{type:"f",value:1E3}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,THREE.ShaderChunk.depth_noise_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,
THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,THREE.ShaderChunk.depth_noise_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,THREE.ShaderChunk.colorNoise_pars_fragment,THREE.ShaderChunk.depth_noise_pars_fragment,THREE.ShaderChunk.highlight_pars_fragment,
"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.colorNoise_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.depth_noise_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,THREE.ShaderChunk.highlight_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,
"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,
"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},
normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",
THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},
tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:0.98},reflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,
0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\n\tvec3 specularTex = vec3( 1.0 );\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\tif( enableDiffuse ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\n\t\t\ttexelColor.xyz *= texelColor.xyz;\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\n\t\t#else\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n\t\t#endif\n\t}\n\tif( enableAO ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\n\t\t\taoColor.xyz *= aoColor.xyz;\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n\t\t#else\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n\t\t#endif\n\t}\n\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n\tvec3 finalNormal = tsb * normalTex;\n\t#ifdef FLIP_SIDED\n\t\tfinalNormal = -finalNormal;\n\t#endif\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\t#if MAX_POINT_LIGHTS > 0\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat pointDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\t\tpointVector = normalize( pointVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n\t\t\t#endif\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( abs(pointDotNormalHalf), shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( abs(1.0 - dot( pointVector, pointHalfVector )), 5.0 );\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\tvec3 spotDiffuse = vec3( 0.0 );\n\t\tvec3 spotSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat spotDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tspotVector = normalize( spotVector );\n\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\t\tspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t\t#else\n\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t#endif\n\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\n\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n\t\t\t}\n\t\t}\n\t#endif\n\t#if MAX_DIR_LIGHTS > 0\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n        #ifdef USE_SHADOWMAP\n           vOverwriteShadow = sign(-dot( normal, dirVector));\n\t      #endif\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\t\t\t#endif\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t\t}\n\t#endif\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\t#if MAX_DIR_LIGHTS > 0\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\t#endif\n\t#if MAX_POINT_LIGHTS > 0\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\ttotalDiffuse += spotDiffuse;\n\t\ttotalSpecular += spotSpecular;\n\t#endif\n\t#ifdef METAL\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\t#else\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\t#endif\n\tif ( enableReflection ) {\n\t\tvec3 vReflect;\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tif ( useRefract ) {\n\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\n\t\t} else {\n\t\t\tvReflect = reflect( cameraToVertex, normal );\n\t\t}\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n\t\t#ifdef GAMMA_INPUT\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\n\t\t#endif\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n\t}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING\n\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\n\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n\t#else\n\t\tvNormal = normalize( normalMatrix * normal );\n\t\tvTangent = normalize( normalMatrix * tangent.xyz );\n\t#endif\n\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n\tvUv = uv * uRepeat + uOffset;\n\tvec3 displacedPosition;\n\t#ifdef VERTEX_TEXTURES\n\t\tif ( enableDisplacement ) {\n\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\n\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\t\tdisplacedPosition = position + normalize( normal ) * df;\n\t\t} else {\n\t\t\t#ifdef USE_SKINNING\n\t\t\t\tvec4 skinVertex = vec4( position, 1.0 );\n\t\t\t\tvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n\t\t\t\tskinned \t  += boneMatY * skinVertex * skinWeight.y;\n\t\t\t\tskinned \t  += boneMatZ * skinVertex * skinWeight.z;\n\t\t\t\tskinned \t  += boneMatW * skinVertex * skinWeight.w;\n\t\t\t\tdisplacedPosition  = skinned.xyz;\n\t\t\t#else\n\t\t\t\tdisplacedPosition = position;\n\t\t\t#endif\n\t\t}\n\t#else\n\t\t#ifdef USE_SKINNING\n\t\t\tvec4 skinVertex = vec4( position, 1.0 );\n\t\t\tvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n\t\t\tskinned \t  += boneMatY * skinVertex * skinWeight.y;\n\t\t\tskinned \t  += boneMatZ * skinVertex * skinWeight.z;\n\t\t\tskinned \t  += boneMatW * skinVertex * skinWeight.w;\n\t\t\tdisplacedPosition  = skinned.xyz;\n\t\t#else\n\t\t\tdisplacedPosition = position;\n\t\t#endif\n\t#endif\n\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;\n\tvViewPosition = -mvPosition.xyz;\n\t#ifdef USE_SHADOWMAP\n\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t\t}\n\t#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,
"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,"vec4 mvPosition;\n#ifdef USE_SKINNING\n\tmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 256 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,
"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")},depthRGBAFloat:{uniforms:{},vertexShader:["void main() {",THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_float_depth( const in float depth ) {\nfloat x = depth + 1.0;\nx = clamp(x, -1.0, 0.0);\nx += 1.0;\nfloat y = depth;\ny = clamp(y, -1.0, 0.0);\ny += 1.0;\nfloat z = depth - 1.0;\nz = clamp(z, -1.0, 0.0);\nz += 1.0;\nfloat w = depth - 2.0;\nw = clamp(w, -1.0, 0.0);\nw += 1.0;\nvec4 result = vec4(x, y, z, w);\n}\nvoid main() {\n\t\tgl_FragData[0] = pack_float_depth(gl_FragCoord.z);\n}"},
sky:{uniforms:{luminance:{type:"f",value:1},turbidity:{type:"f",value:2},reileigh:{type:"f",value:1},mieCoefficient:{type:"f",value:0.005},mieDirectionalG:{type:"f",value:0.8},sunPosition:{type:"v3",value:new THREE.Vector3},showSunDisk:{type:"f",value:"1"}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D skySampler;\nuniform vec3 sunPosition;\nvarying vec3 vWorldPosition;\nuniform float luminance;\nuniform float turbidity;\nuniform float reileigh;\nuniform float mieCoefficient;\nuniform float mieDirectionalG;\nuniform float showSunDisk;\n// constants for atmospheric scattering\nconst float e = 2.71828182845904523536028747135266249775724709369995957;\nconst float pi = 3.141592653589793238462643383279502884197169;\nconst float n = 1.0003; // refractive index of air\nconst float nPow2sub1 = 0.00060009;\nconst float N = 2.545E25; // number of molecules per unit volume for air at\n// 288.15K and 1013mb (sea level -45 celsius)\nconst float pn = 0.035;\t// depolatization factor for standard air\n// wavelength of used primaries, according to preetham\nconst vec3 lambda = vec3(680E-9, 550E-9, 450E-9);\n// mie stuff\n// K coefficient for the primaries\nconst vec3 K = vec3(0.686, 0.678, 0.666);\nconst float v = 4.0;\n// optical length at zenith for molecules\nconst float rayleighZenithLength = 8.4E3;\nconst float mieZenithLength = 1.25E3;\nconst vec3 up = vec3(0.0, 1.0, 0.0);\nconst float EE = 1000.0;\nconst float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\n// 66 arc seconds -> degrees, and the cosine of that\n// earth shadow hack\nconst float cutoffAngle = pi/1.95;\nconst float steepness = 1.5;\nvec3 totalRayleigh(vec3 lambda)\n{\nreturn (8.0 * pi * pi * pi * nPow2sub1 * nPow2sub1 * (6.0 + 3.0 * pn)) / (3.0 * N * pow(abs(lambda), vec3(4.0)) * (6.0 - 7.0 * pn));\n}\nconst vec3 simplifiedRayleigh = vec3(0.0000053191485, 0.0000125, 0.00002777775);\nfloat rayleighPhase(float cosTheta)\n{\t \nreturn (3.0 / (16.0*pi)) * (1.0 + pow(abs(cosTheta), 2.0));\n}\nvec3 totalMie(vec3 lambda, vec3 K, float T)\n{\nfloat c = (0.2 * T ) * 10E-18;\nreturn 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;\n}\nfloat hgPhase(float cosTheta, float g)\n{\nreturn (1.0 / (4.0*pi)) * ((1.0 - pow(abs(g), 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(abs(g), 2.0), 1.5));\n}\nfloat sunIntensity(float zenithAngleCos)\n{\nreturn EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));\n}\n// float logLuminance(vec3 c)\n// {\n// \treturn log(c.r * 0.2126 + c.g * 0.7152 + c.b * 0.0722);\n// }\n// Filmic ToneMapping http://filmicgames.com/archives/75\nconst float A = 0.15;\nconst float B = 0.50;\nconst float C = 0.10;\nconst float D = 0.20;\nconst float E = 0.02;\nconst float F = 0.30;\nconst float W = 1000.0;\nvec3 Uncharted2Tonemap(vec3 x)\n{\nreturn ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\nvoid main() \n{\nvec3 cameraPos = vec3(0., 0., 0.);\nvec3 sunDirection = normalize(sunPosition);\nfloat sunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);\nfloat sunE = sunIntensity(dot(sunDirection, up));\nvec3 betaR = simplifiedRayleigh * reileigh - (1.0 - sunfade);\n// mie coefficients\nvec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;\n// optical length\n// cutoff angle at 90 to avoid singularity in next formula.\nfloat zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));\nfloat sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(abs(93.885 - ((zenithAngle * 180.0) / pi)), -1.253));\nfloat sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(abs(93.885 - ((zenithAngle * 180.0) / pi)), -1.253));\n// combined extinction factor\t\nvec3 Fex = exp(-(betaR * sR + betaM * sM));\n// in scattering\nfloat cosTheta = dot(normalize(vWorldPosition - cameraPos), sunDirection);\nfloat rPhase = rayleighPhase(cosTheta*0.5+0.5);\nvec3 betaRTheta = betaR * rPhase;\nfloat mPhase = hgPhase(cosTheta, mieDirectionalG);\nvec3 betaMTheta = betaM * mPhase;\nvec3 Lin = pow(abs(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex)),vec3(1.5));\nLin *= mix(vec3(1.0),pow(abs(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex),vec3(1.0/2.0)), clamp(pow(abs(1.0-dot(up, sunDirection)),5.0),0.0,1.0));\n//nightsky\nvec3 direction = normalize(vWorldPosition - cameraPos);\nfloat theta = acos(direction.y); // elevation --\> y-axis, [-pi/2, pi/2]\nfloat phi = atan(direction.z, direction.x); // azimuth --\> x-axis [-pi/2, pi/2]\nvec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);\nvec3 L0 = vec3(0.1) * Fex;\n// composition + solar disc\nfloat sundisk =  showSunDisk * smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);\nL0 += (sunE * 19000.0 * Fex)*sundisk;\nvec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));\nvec3 texColor = (Lin+L0);   \ntexColor *= 0.04 ;\ntexColor += vec3(0.0,0.001,0.0025)*0.3;\nfloat g_fMaxLuminance = 1.0;\nfloat fLumScaled = 0.1 / luminance;     \nfloat fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled); \nfloat ExposureBias = fLumCompressed;\nvec3 curr = Uncharted2Tonemap((log2(2.0 / pow(abs(luminance), 4.0))) * texColor);\nvec3 color = curr*whiteScale;\nvec3 retColor = pow(abs(color),vec3(1.0/(1.2+(1.2*sunfade))));\ngl_FragColor.rgb = retColor;\ngl_FragColor.a = 1.0;\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var f in d.attributes){var e=d.attributes[f];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var g=1;"v2"===e.type?g=2:"v3"===e.type?g=3:"v4"===e.type?g=4:"c"===e.type&&(g=3);e.size=g;e.array=new Float32Array(c*g);e.buffer=h.createBuffer();e.buffer.belongsToAttribute=f;e.needsUpdate=!0}a.__webglCustomAttributesList.push(e)}}}
function c(a,b){var c=b.geometry,g=a.faces3,i=3*g.length,j=1*g.length,m=3*g.length,g=d(b,a),l=e(g),k=f(g),n=g.vertexColors?g.vertexColors:!1;a.__vertexArray=new Float32Array(3*i);k&&(a.__normalArray=new Float32Array(3*i));c.hasTangents&&(a.__tangentArray=new Float32Array(4*i));n&&(a.__colorArray=new Float32Array(3*i));l&&(0<c.faceVertexUvs.length&&(a.__uvArray=new Float32Array(2*i)),1<c.faceVertexUvs.length&&(a.__uv2Array=new Float32Array(2*i)));b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&
(a.__skinIndexArray=new Float32Array(4*i),a.__skinWeightArray=new Float32Array(4*i));c=null!==ob&&21845<j?Uint32Array:Uint16Array;a.__typeArray=c;a.__faceArray=new c(3*j);a.__lineArray=new c(2*m);if(a.numMorphTargets){a.__morphTargetsArrays=[];c=0;for(l=a.numMorphTargets;c<l;c++)a.__morphTargetsArrays.push(new Float32Array(3*i))}if(a.numMorphNormals){a.__morphNormalsArrays=[];c=0;for(l=a.numMorphNormals;c<l;c++)a.__morphNormalsArrays.push(new Float32Array(3*i))}a.__webglFaceCount=3*j;a.__webglLineCount=
2*m;if(g.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var s in g.attributes){var j=g.attributes[s],m={},p;for(p in j)m[p]=j[p];if(!m.__webglInitialized||m.createUniqueBuffers)m.__webglInitialized=!0,c=1,"v2"===m.type?c=2:"v3"===m.type?c=3:"v4"===m.type?c=4:"c"===m.type&&(c=3),m.size=c,m.array=new Float32Array(i*c),m.buffer=h.createBuffer(),m.buffer.belongsToAttribute=s,j.needsUpdate=!0,m.__original=j;a.__webglCustomAttributesList.push(m)}}a.__inittedArrays=
!0}function d(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function f(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function g(a,b,c,d){for(var f in b){var e=b[f],g=c[f];if(0<=
e)if(g){var i=g.itemSize;h.bindBuffer(h.ARRAY_BUFFER,g.buffer);j(e);h.vertexAttribPointer(e,i,h.FLOAT,!1,0,4*d*i)}else a.defaultAttributeValues&&(2===a.defaultAttributeValues[f].length?h.vertexAttrib2fv(e,a.defaultAttributeValues[f]):3===a.defaultAttributeValues[f].length&&h.vertexAttrib3fv(e,a.defaultAttributeValues[f]))}k()}function i(){for(var a=0,b=jb.length;a<b;a++)jb[a]=0}function j(a){jb[a]=1;0===fa[a]&&(h.enableVertexAttribArray(a),fa[a]=1)}function k(){for(var a=0,b=fa.length;a<b;a++)fa[a]!==
jb[a]&&(h.disableVertexAttribArray(a),fa[a]=0)}function n(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function p(a,b){return b[0]-a[0]}function m(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++)Pa=Oa=null,Xa=Da=hb=Qa=ta=nb=ib=-1,Ta=!0,a[d].render(b,c,wa,Sa),Pa=Oa=null,Xa=Da=hb=Qa=ta=nb=ib=-1,Ta=!0}function s(a,b,c,d,f,e,g,h){var i,j,m,l;b?(j=a.length-1,l=b=-1):(j=0,b=a.length,l=1);for(var k=j;k!==b;k+=l)if(i=a[k],i.render){j=i.object;m=i.buffer;if(h)i=h;else{i=i[c];if(!i)continue;g&&I.setBlending(i.blending,
i.blendEquation,i.blendSrc,i.blendDst);I.setDepthTest(i.depthTest);I.setDepthWrite(i.depthWrite);H(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}I.setMaterialFaces(i);m instanceof THREE.BufferGeometry?I.renderBufferDirect(d,f,e,i,m,j):I.renderBuffer(d,f,e,i,m,j)}}function w(a,b,c,d,f,e,g){for(var h,i,j=0,m=a.length;j<m;j++)if(h=a[j],i=h.object,i.visible){if(g)h=g;else{h=h[b];if(!h)continue;e&&I.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);I.setDepthTest(h.depthTest);
I.setDepthWrite(h.depthWrite);H(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}I.renderImmediateObject(c,d,f,h,i)}}function l(a,d){var f,e,g;if(void 0===a.__webglInit&&(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,e=a.geometry,void 0!==e&&void 0===e.__webglInit))if(e.__webglInit=!0,e.addEventListener("dispose",Db),e instanceof THREE.BufferGeometry)for(g in e.attributes){var i="index"===g?h.ELEMENT_ARRAY_BUFFER:h.ARRAY_BUFFER,j=e.attributes[g];
j.buffer=h.createBuffer();h.bindBuffer(i,j.buffer);h.bufferData(i,j.array,h.STATIC_DRAW)}else if(a instanceof THREE.Mesh)for(f in g=a.material,void 0===e.geometryGroups&&e.makeGroups(g instanceof THREE.MeshFaceMaterial,ob?4294967296:65535),e.geometryGroups){if(g=e.geometryGroups[f],!g.__webglVertexBuffer){i=g;i.__webglVertexBuffer=h.createBuffer();i.__webglNormalBuffer=h.createBuffer();i.__webglTangentBuffer=h.createBuffer();i.__webglColorBuffer=h.createBuffer();i.__webglUVBuffer=h.createBuffer();
i.__webglUV2Buffer=h.createBuffer();i.__webglSkinIndicesBuffer=h.createBuffer();i.__webglSkinWeightsBuffer=h.createBuffer();i.__webglFaceBuffer=h.createBuffer();i.__webglLineBuffer=h.createBuffer();var m=j=void 0;if(i.numMorphTargets){i.__webglMorphTargetsBuffers=[];j=0;for(m=i.numMorphTargets;j<m;j++)i.__webglMorphTargetsBuffers.push(h.createBuffer())}if(i.numMorphNormals){i.__webglMorphNormalsBuffers=[];j=0;for(m=i.numMorphNormals;j<m;j++)i.__webglMorphNormalsBuffers.push(h.createBuffer())}I.info.memory.geometries++;
c(g,a);e.verticesNeedUpdate=!0;e.morphTargetsNeedUpdate=!0;e.elementsNeedUpdate=!0;e.uvsNeedUpdate=!0;e.normalsNeedUpdate=!0;e.tangentsNeedUpdate=!0;e.colorsNeedUpdate=!0}}else a instanceof THREE.Line?e.__webglVertexBuffer||(g=e,g.__webglVertexBuffer=h.createBuffer(),g.__webglColorBuffer=h.createBuffer(),g.__webglLineDistanceBuffer=h.createBuffer(),I.info.memory.geometries++,g=e,i=g.vertices.length,g.__vertexArray=new Float32Array(3*i),g.__colorArray=new Float32Array(3*i),g.__lineDistanceArray=new Float32Array(1*
i),g.__webglLineCount=i,b(g,a),e.verticesNeedUpdate=!0,e.colorsNeedUpdate=!0,e.lineDistancesNeedUpdate=!0):a instanceof THREE.ParticleSystem&&!e.__webglVertexBuffer&&(g=e,g.__webglVertexBuffer=h.createBuffer(),g.__webglColorBuffer=h.createBuffer(),I.info.memory.geometries++,g=e,i=g.vertices.length,g.__vertexArray=new Float32Array(3*i),g.__colorArray=new Float32Array(3*i),g.__sortArray=[],g.__webglParticleCount=i,b(g,a),e.verticesNeedUpdate=!0,e.colorsNeedUpdate=!0);if(void 0===a.__webglActive){if(a instanceof
THREE.Mesh)if(e=a.geometry,e instanceof THREE.BufferGeometry)q(d.__webglObjects,e,a);else{if(e instanceof THREE.Geometry)for(f in e.geometryGroups)g=e.geometryGroups[f],q(d.__webglObjects,g,a)}else a instanceof THREE.Line||a instanceof THREE.ParticleSystem?(e=a.geometry,q(d.__webglObjects,e,a)):a instanceof THREE.Sprite?d.__webglSprites.push(a):a instanceof THREE.LensFlare&&d.__webglFlares.push(a);a.__webglActive=!0}}function q(a,b,c){a.push({id:null,buffer:b,object:c,opaque:null,transparent:null,
z:0})}function t(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function r(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function u(a,b){if(a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem||a instanceof THREE.Line)for(var c=b.__webglObjects,d=c.length-1;0<=d;d--)c[d].object===a&&c.splice(d,1);else a instanceof THREE.Sprite?y(b.__webglSprites,a):a instanceof THREE.LensFlare&&y(b.__webglFlares,a);delete a.__webglActive}function y(a,b){for(var c=
a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function v(a,b,c,d,f){rb=0;d.needsUpdate&&(d.program&&Eb(d),I.initMaterial(d,b,c,f),d.needsUpdate=!1);d.morphTargets&&!f.__webglMorphTargetInfluences&&(f.__webglMorphTargetInfluences=new Float32Array(I.maxMorphTargets));var e=!1,g=d.program,i=g.uniforms,j=d.uniforms;g.id!==Oa&&(h.useProgram(g.program),Oa=g.id,e=!0);d.id!==Xa&&(Xa=d.id,e=!0);if(e||a!==Pa)h.uniformMatrix4fv(i.projectionMatrix,!1,a.projectionMatrix.elements),sa&&h.uniform1f(i.logDepthBufFC,
2/(Math.log(a.far+1)/Math.LN2)),a!==Pa&&(Pa=a);if(e){c&&d.fog&&(j.fogColor.value=c.color,c instanceof THREE.FogExp2&&(j.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Ta){for(var m,l=0,k=0,n=0,s,p,r,q=Fb,t=q.directional.colors,w=q.directional.positions,u=q.point.colors,v=q.point.positions,H=q.point.distances,y=q.spot.colors,z=q.spot.positions,C=q.spot.distances,G=q.spot.directions,M=q.spot.anglesCos,x=q.spot.exponents,D=q.hemi.skyColors,
Q=q.hemi.groundColors,N=q.hemi.positions,ea=0,V=0,X=0,fa=0,R=0,S=0,T=0,ga=0,ia=m=0,c=r=ia=0,e=b.length;c<e;c++)m=b[c],m.onlyShadow||(s=m.color,p=m.intensity,r=m.distance,m instanceof THREE.AmbientLight?m.visible&&(I.gammaInput?(l+=s.r*s.r,k+=s.g*s.g,n+=s.b*s.b):(l+=s.r,k+=s.g,n+=s.b)):m instanceof THREE.DirectionalLight?(R+=1,m.visible&&(ba.setFromMatrixPosition(m.matrixWorld),ha.setFromMatrixPosition(m.target.matrixWorld),ba.sub(ha),ba.normalize(),0===ba.x&&0===ba.y&&0===ba.z||(m=3*ea,w[m]=ba.x,
w[m+1]=ba.y,w[m+2]=ba.z,I.gammaInput?E(t,m,s,p*p):K(t,m,s,p),ea+=1))):m instanceof THREE.PointLight?(S+=1,m.visible&&(ia=3*V,I.gammaInput?E(u,ia,s,p*p):K(u,ia,s,p),ha.setFromMatrixPosition(m.matrixWorld),v[ia]=ha.x,v[ia+1]=ha.y,v[ia+2]=ha.z,H[V]=r,V+=1)):m instanceof THREE.SpotLight?(T+=1,m.visible&&(ia=3*X,I.gammaInput?E(y,ia,s,p*p):K(y,ia,s,p),ha.setFromMatrixPosition(m.matrixWorld),z[ia]=ha.x,z[ia+1]=ha.y,z[ia+2]=ha.z,C[X]=r,ba.copy(ha),ha.setFromMatrixPosition(m.target.matrixWorld),ba.sub(ha),
ba.normalize(),G[ia]=ba.x,G[ia+1]=ba.y,G[ia+2]=ba.z,M[X]=Math.cos(m.angle),x[X]=m.exponent,X+=1)):m instanceof THREE.HemisphereLight&&(ga+=1,m.visible&&(ba.setFromMatrixPosition(m.matrixWorld),ba.normalize(),0===ba.x&&0===ba.y&&0===ba.z||(r=3*fa,N[r]=ba.x,N[r+1]=ba.y,N[r+2]=ba.z,s=m.color,m=m.groundColor,I.gammaInput?(p*=p,E(D,r,s,p),E(Q,r,m,p)):(K(D,r,s,p),K(Q,r,m,p)),fa+=1))));c=3*ea;for(e=Math.max(t.length,3*R);c<e;c++)t[c]=0;c=3*V;for(e=Math.max(u.length,3*S);c<e;c++)u[c]=0;c=3*X;for(e=Math.max(y.length,
3*T);c<e;c++)y[c]=0;c=3*fa;for(e=Math.max(D.length,3*ga);c<e;c++)D[c]=0;c=3*fa;for(e=Math.max(Q.length,3*ga);c<e;c++)Q[c]=0;q.directional.length=ea;q.point.length=V;q.spot.length=X;q.hemi.length=fa;q.ambient[0]=l;q.ambient[1]=k;q.ambient[2]=n;Ta=!1}c=Fb;j.ambientLightColor.value=c.ambient;j.directionalLightColor.value=c.directional.colors;j.directionalLightDirection.value=c.directional.positions;j.pointLightColor.value=c.point.colors;j.pointLightPosition.value=c.point.positions;j.pointLightDistance.value=
c.point.distances;j.spotLightColor.value=c.spot.colors;j.spotLightPosition.value=c.spot.positions;j.spotLightDistance.value=c.spot.distances;j.spotLightDirection.value=c.spot.directions;j.spotLightAngleCos.value=c.spot.anglesCos;j.spotLightExponent.value=c.spot.exponents;j.hemisphereLightSkyColor.value=c.hemi.skyColors;j.hemisphereLightGroundColor.value=c.hemi.groundColors;j.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshBasicMaterial||
d instanceof THREE.MeshPhongMaterial){j.opacity.value=d.opacity;I.gammaInput?j.diffuse.value.copyGammaToLinear(d.color):j.diffuse.value=d.color;j.map.value=d.map;j.lightMap.value=d.lightMap;j.specularMap.value=d.specularMap;d.bumpMap&&(j.bumpMap.value=d.bumpMap,j.bumpScale.value=d.bumpScale);d.normalMap&&(j.normalMap.value=d.normalMap,j.normalScale.value.copy(d.normalScale));var Z;d.map?Z=d.map:d.specularMap?Z=d.specularMap:d.normalMap?Z=d.normalMap:d.bumpMap&&(Z=d.bumpMap);void 0!==Z&&(c=Z.offset,
Z=Z.repeat,j.offsetRepeat.value.set(c.x,c.y,Z.x,Z.y));j.envMap.value=d.envMap;j.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;j.reflectivity.value=d.reflectivity;j.refractionRatio.value=d.refractionRatio;j.combine.value=d.combine;j.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping;d.colorNoise&&(j.colorNoiseBase.value=d.colorNoiseBase);d.highlight&&(j.highlightValue.value=d.highlightValue)}d instanceof THREE.LineBasicMaterial?(j.diffuse.value=
d.color,j.opacity.value=d.opacity):d instanceof THREE.MeshPhongMaterial?(j.shininess.value=d.shininess,I.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive),j.specular.value.copyGammaToLinear(d.specular)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive,j.specular.value=d.specular),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB),d.depthNoiseRedux&&(j.depthNoiseReduxDistance.value=d.depthNoiseReduxDistance)):d instanceof THREE.MeshLambertMaterial?
(I.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.SkyMaterial&&(j.turbidity.value=d.turbidity,j.reileigh.value=d.reileigh,j.luminance.value=d.luminance,j.mieCoefficient.value=d.mieCoefficient,j.mieDirectionalG.value=d.mieDirectionalG,j.sunPosition.value=d.sunPosition,j.showSunDisk.value=!0===d.showSunDisk?1:0);if(f.receiveShadow&&
!d._shadowPass&&j.shadowMatrix){c=Z=0;for(e=b.length;c<e;c++)if(l=b[c],l.castShadow){if(l instanceof THREE.SpotLight||l instanceof THREE.DirectionalLight&&!l.shadowCascade)j.shadowMap.value[Z]=l.shadowMap,j.shadowMapSize.value[Z]=l.shadowMapSize,j.shadowMatrix.value[Z]=l.shadowMatrix,j.shadowDarkness.value[Z]=l.shadowDarkness,j.shadowBias.value[Z]=l.shadowBias,Z++}else if(l.susShadows&&0<l.susShadows.length)for(k=0;k<l.susShadows.length;k++)j.shadowMap.value[Z]=l.susShadows[k].shadowMap,j.shadowMapSize.value[Z]=
l.susShadows[k].shadowMapSize,j.shadowMatrix.value[Z]=l.susShadows[k].shadowMatrix,j.shadowDarkness.value[Z]=l.susShadows[k].shadowDarkness,j.shadowBias.value[Z]=l.susShadows[k].shadowBias,Z++}b=d.uniformsList;j=0;for(Z=b.length;j<Z;j++)if(e=g.uniforms[b[j][1]])if(c=b[j][0],k=c.type,l=c.value,"v"===k.charAt(0)&&!l&&(console.warn("Uniform Error: value is undefined."),alert("Uniform error\nuniform = "+JSON.stringify(c))),"i"===k||"int"===k||"integer"===k)h.uniform1i(e,l);else if("f"===k||"float"===
k)h.uniform1f(e,l);else if("v2"===k||"vec2"===k)h.uniform2f(e,l.x,l.y);else if("v3"===k||"vec3"===k)h.uniform3f(e,l.x,l.y,l.z);else if("v4"===k||"vec4"===k)h.uniform4f(e,l.x,l.y,l.z,l.w);else if("c"===k||"color"===k)h.uniform3f(e,l.r,l.g,l.b);else if("iv1"===k)h.uniform1iv(e,l);else if("iv"===k)h.uniform3iv(e,l);else if("fv1"===k)h.uniform1fv(e,l);else if("fv"===k)h.uniform3fv(e,l);else if("v2v"===k){void 0===c._array&&(c._array=new Float32Array(2*l.length));k=0;for(n=l.length;k<n;k++)q=2*k,void 0===
l[k]&&console.log("undefined"),c._array[q]=l[k].x,c._array[q+1]=l[k].y;h.uniform2fv(e,c._array)}else if("v3v"===k){void 0===c._array&&(c._array=new Float32Array(3*l.length));k=0;for(n=l.length;k<n;k++)q=3*k,c._array[q]=l[k].x,c._array[q+1]=l[k].y,c._array[q+2]=l[k].z;h.uniform3fv(e,c._array)}else if("v4v"===k){void 0===c._array&&(c._array=new Float32Array(4*l.length));k=0;for(n=l.length;k<n;k++)q=4*k,c._array[q]=l[k].x,c._array[q+1]=l[k].y,c._array[q+2]=l[k].z,c._array[q+3]=l[k].w;h.uniform4fv(e,
c._array)}else if("m3"===k||"mat3"===k||"matrix3"===k)h.uniformMatrix3fv(e,!1,l.elements);else if("m3v"===k){void 0===c._array&&(c._array=new Float32Array(9*l.length));k=0;for(n=l.length;k<n;k++)l[k].flattenToArrayOffset(c._array,9*k);h.uniformMatrix3fv(e,!1,c._array)}else if("m4"===k||"mat4"===k||"matrix4"===k)h.uniformMatrix4fv(e,!1,l.elements);else if("m4v"===k){void 0===c._array&&(c._array=new Float32Array(16*l.length));k=0;for(n=l.length;k<n;k++)l[k].flattenToArrayOffset(c._array,16*k);h.uniformMatrix4fv(e,
!1,c._array)}else if("t"===k||"tex"===k||"texture"===k){if(q=l,l=B(),h.uniform1i(e,l),q)if(q.image instanceof Array&&6===q.image.length){if(c=q,e=l,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.addEventListener("dispose",Gb),c.image.__webglTextureCube=h.createTexture(),I.info.memory.textures++);h.activeTexture(h.TEXTURE0+e);h.bindTexture(h.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);h.pixelStorei(h.UNPACK_FLIP_Y_WEBGL,c.flipY);e=c instanceof THREE.CompressedTexture;l=[];for(k=
0;6>k;k++)I.autoScaleCubemaps&&!e?(n=l,q=k,t=c.image[k],u=oc,t.width<=u&&t.height<=u||(v=Math.max(t.width,t.height),w=Math.floor(t.width*u/v),u=Math.floor(t.height*u/v),v=document.createElement("canvas"),v.width=w,v.height=u,v.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,w,u),t=v),n[q]=t):l[k]=c.image[k];k=l[0];n=THREE.Math.isPowerOfTwo(k.width)&&THREE.Math.isPowerOfTwo(k.height);q=L(c.format);t=L(c.type);J(h.TEXTURE_CUBE_MAP,c,n);for(k=0;6>k;k++)if(e){u=l[k].mipmaps;v=0;for(H=u.length;v<
H;v++)w=u[v],c.format!==THREE.RGBAFormat?h.compressedTexImage2D(h.TEXTURE_CUBE_MAP_POSITIVE_X+k,v,q,w.width,w.height,0,w.data):h.texImage2D(h.TEXTURE_CUBE_MAP_POSITIVE_X+k,v,q,w.width,w.height,0,q,t,w.data)}else h.texImage2D(h.TEXTURE_CUBE_MAP_POSITIVE_X+k,0,q,q,t,l[k]);c.generateMipmaps&&n&&h.generateMipmap(h.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else h.activeTexture(h.TEXTURE0+e),h.bindTexture(h.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else q instanceof THREE.WebGLRenderTargetCube?
(c=q,h.activeTexture(h.TEXTURE0+l),h.bindTexture(h.TEXTURE_CUBE_MAP,c.__webglTexture)):I.setTexture(q,l)}else if("tv"===k){void 0===c._array&&(c._array=[]);k=0;for(n=c.value.length;k<n;k++)c._array[k]=B();h.uniform1iv(e,c._array);k=0;for(n=c.value.length;k<n;k++)q=c.value[k],l=c._array[k],q&&I.setTexture(q,l)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+k);if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==i.cameraPosition)ha.setFromMatrixPosition(a.matrixWorld),
h.uniform3f(i.cameraPosition,ha.x,ha.y,ha.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==i.viewMatrix&&h.uniformMatrix4fv(i.viewMatrix,!1,a.matrixWorldInverse.elements)}h.uniformMatrix4fv(i.modelViewMatrix,!1,f._modelViewMatrix.elements);i.normalMatrix&&h.uniformMatrix3fv(i.normalMatrix,!1,f._normalMatrix.elements);null!==i.modelMatrix&&h.uniformMatrix4fv(i.modelMatrix,!1,f.matrixWorld.elements);return g}function B(){var a=
rb;a>=Hb&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Hb);rb+=1;return a}function E(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function K(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function z(a){a!==qa&&(h.lineWidth(a),qa=a)}function H(a,b,c){X!==a&&(a?h.enable(h.POLYGON_OFFSET_FILL):h.disable(h.POLYGON_OFFSET_FILL),X=a);if(a&&(Cb!==b||la!==c))h.polygonOffset(b,c),Cb=b,la=c}function J(a,b,c){c?(h.texParameteri(a,h.TEXTURE_WRAP_S,
L(b.wrapS)),h.texParameteri(a,h.TEXTURE_WRAP_T,L(b.wrapT)),h.texParameteri(a,h.TEXTURE_MAG_FILTER,L(b.magFilter)),h.texParameteri(a,h.TEXTURE_MIN_FILTER,L(b.minFilter))):(h.texParameteri(a,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(a,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.texParameteri(a,h.TEXTURE_MAG_FILTER,x(b.magFilter)),h.texParameteri(a,h.TEXTURE_MIN_FILTER,x(b.minFilter)));if(Ua&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))h.texParameterf(a,Ua.TEXTURE_MAX_ANISOTROPY_EXT,
Math.min(b.anisotropy,Pb)),b.__oldAnisotropy=b.anisotropy}function M(a,b){h.bindRenderbuffer(h.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(h.renderbufferStorage(h.RENDERBUFFER,h.DEPTH_COMPONENT16,b.width,b.height),h.framebufferRenderbuffer(h.FRAMEBUFFER,h.DEPTH_ATTACHMENT,h.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(h.renderbufferStorage(h.RENDERBUFFER,h.DEPTH_STENCIL,b.width,b.height),h.framebufferRenderbuffer(h.FRAMEBUFFER,h.DEPTH_STENCIL_ATTACHMENT,h.RENDERBUFFER,a)):h.renderbufferStorage(h.RENDERBUFFER,
h.RGBA4,b.width,b.height)}function x(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?h.NEAREST:h.LINEAR}function L(a){if(a===THREE.RepeatWrapping)return h.REPEAT;if(a===THREE.ClampToEdgeWrapping)return h.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return h.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return h.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return h.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return h.NEAREST_MIPMAP_LINEAR;
if(a===THREE.LinearFilter)return h.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return h.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return h.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return h.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return h.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return h.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return h.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return h.BYTE;if(a===THREE.ShortType)return h.SHORT;
if(a===THREE.UnsignedShortType)return h.UNSIGNED_SHORT;if(a===THREE.IntType)return h.INT;if(a===THREE.UnsignedIntType)return h.UNSIGNED_INT;if(a===THREE.FloatType)return h.FLOAT;if(a===THREE.AlphaFormat)return h.ALPHA;if(a===THREE.RGBFormat)return h.RGB;if(a===THREE.RGBAFormat)return h.RGBA;if(a===THREE.LuminanceFormat)return h.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return h.LUMINANCE_ALPHA;if(a===THREE.RGBA32Format)return h.RGBA32F;if(a===THREE.AddEquation)return h.FUNC_ADD;if(a===THREE.SubtractEquation)return h.FUNC_SUBTRACT;
if(a===THREE.ReverseSubtractEquation)return h.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return h.ZERO;if(a===THREE.OneFactor)return h.ONE;if(a===THREE.SrcColorFactor)return h.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return h.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return h.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return h.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return h.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return h.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return h.DST_COLOR;
if(a===THREE.OneMinusDstColorFactor)return h.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return h.SRC_ALPHA_SATURATE;if(void 0!==Ba){if(a===THREE.RGB_S3TC_DXT1_Format)return Ba.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Ba.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Ba.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Ba.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);
var a=a||{},C=void 0!==a.canvas?a.canvas:document.createElement("canvas"),G=void 0!==a.context?a.context:null,D=void 0!==a.precision?a.precision:"highp",Q=void 0!==a.alpha?a.alpha:!1,N=void 0!==a.depth?a.depth:!0,ea=void 0!==a.stencil?a.stencil:!0,Ra=void 0!==a.antialias?a.antialias:!1,Ga=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,Aa=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,sa=void 0!==a.logarithmicDepthBuffer?a.logarithmicDepthBuffer:!1,ga=new THREE.Color(0),pa=0;this.domElement=
C;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.floatShadowTexture=this.shadowMapCascade=this.shadowMapDebug=!1;this.autoScaleCubemaps=
!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var I=this,V=[],Oa=null,zb=null,Xa=-1,Da=null,Pa=null,rb=0,Qa=-1,hb=-1,ib=-1,Ab=-1,wb=-1,Bb=-1,nb=-1,ta=-1,X=null,Cb=null,la=null,qa=null,ra=0,ua=0,ma=C.width,va=C.height,wa=0,Sa=0,jb=new Uint8Array(16),fa=new Uint8Array(16),na=new THREE.Frustum,Qb=new THREE.Matrix4,dc=new THREE.Matrix4,ha=new THREE.Vector3,ba=new THREE.Vector3,Ta=!0,Fb={ambient:[0,
0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},h,kb,Ib,Ua,Ba,ob;try{var Rb={alpha:Q,depth:N,stencil:ea,antialias:Ra,premultipliedAlpha:Ga,preserveDrawingBuffer:Aa};h=G||C.getContext("webgl",Rb)||C.getContext("experimental-webgl",Rb);if(null===h)throw"Error creating WebGL context.";}catch(pc){console.error(pc)}kb=
h.getExtension("OES_texture_float");h.getExtension("OES_texture_float_linear");Ib=h.getExtension("OES_standard_derivatives");Ua=h.getExtension("EXT_texture_filter_anisotropic")||h.getExtension("MOZ_EXT_texture_filter_anisotropic")||h.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Ba=h.getExtension("WEBGL_compressed_texture_s3tc")||h.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||h.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");ob=h.getExtension("OES_element_index_uint");null===kb&&
console.log("THREE.WebGLRenderer: Float textures not supported.");null===Ib&&console.log("THREE.WebGLRenderer: Standard derivatives not supported.");null===Ua&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");null===Ba&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");null===ob&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported.");void 0===h.getShaderPrecisionFormat&&(h.getShaderPrecisionFormat=function(){return{rangeMin:1,
rangeMax:1,precision:1}});sa&&h.getExtension("EXT_frag_depth");h.clearColor(0,0,0,1);h.clearDepth(1);h.clearStencil(0);h.enable(h.DEPTH_TEST);h.depthFunc(h.LEQUAL);h.frontFace(h.CCW);h.cullFace(h.BACK);h.enable(h.CULL_FACE);h.enable(h.BLEND);h.blendEquation(h.FUNC_ADD);h.blendFunc(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA);h.viewport(ra,ua,ma,va);h.clearColor(ga.r,ga.g,ga.b,pa);this.context=h;var Hb=h.getParameter(h.MAX_TEXTURE_IMAGE_UNITS),qc=h.getParameter(h.MAX_VERTEX_TEXTURE_IMAGE_UNITS);h.getParameter(h.MAX_TEXTURE_SIZE);
var oc=h.getParameter(h.MAX_CUBE_MAP_TEXTURE_SIZE),Pb=Ua?h.getParameter(Ua.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Jb=0<qc,rc=Jb&&kb;Ba&&h.getParameter(h.COMPRESSED_TEXTURE_FORMATS);var sc=h.getShaderPrecisionFormat(h.VERTEX_SHADER,h.HIGH_FLOAT),tc=h.getShaderPrecisionFormat(h.VERTEX_SHADER,h.MEDIUM_FLOAT);h.getShaderPrecisionFormat(h.VERTEX_SHADER,h.LOW_FLOAT);var uc=h.getShaderPrecisionFormat(h.FRAGMENT_SHADER,h.HIGH_FLOAT),vc=h.getShaderPrecisionFormat(h.FRAGMENT_SHADER,h.MEDIUM_FLOAT);h.getShaderPrecisionFormat(h.FRAGMENT_SHADER,
h.LOW_FLOAT);var wc=0<sc.precision&&0<uc.precision,Sb=0<tc.precision&&0<vc.precision;"highp"===D&&!wc&&(Sb?(D="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(D="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===D&&!Sb&&(D="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return h};this.supportsVertexTextures=function(){return Jb};this.supportsFloatTextures=function(){return kb};
this.supportsStandardDerivatives=function(){return Ib};this.supportsCompressedTextureS3TC=function(){return Ba};this.getMaxAnisotropy=function(){return Pb};this.getPrecision=function(){return D};this.setSize=function(a,b,c){C.width=a*this.devicePixelRatio;C.height=b*this.devicePixelRatio;!1!==c&&(C.style.width=a+"px",C.style.height=b+"px");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){ra=a*this.devicePixelRatio;ua=b*this.devicePixelRatio;ma=c*this.devicePixelRatio;va=d*this.devicePixelRatio;
h.viewport(ra,ua,ma,va)};this.setScissor=function(a,b,c,d){h.scissor(a*this.devicePixelRatio,b*this.devicePixelRatio,c*this.devicePixelRatio,d*this.devicePixelRatio)};this.enableScissorTest=function(a){a?h.enable(h.SCISSOR_TEST):h.disable(h.SCISSOR_TEST)};this.setClearColor=function(a,b){ga.set(a);pa=void 0!==b?b:1;h.clearColor(ga.r,ga.g,ga.b,pa)};this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(a,
b)};this.getClearColor=function(){return ga};this.getClearAlpha=function(){return pa};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=h.COLOR_BUFFER_BIT;if(void 0===b||b)d|=h.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=h.STENCIL_BUFFER_BIT;h.clear(d)};this.clearColor=function(){h.clear(h.COLOR_BUFFER_BIT)};this.clearDepth=function(){h.clear(h.DEPTH_BUFFER_BIT)};this.clearStencil=function(){h.clear(h.STENCIL_BUFFER_BIT)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};
this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.updateShadowMap=function(a,b){Oa=null;Xa=Da=ta=nb=ib=-1;Ta=!0;hb=Qa=-1;this.shadowMapPlugin.update(a,b)};var Db=function(a){a=a.target;a.removeEventListener("dispose",Db);a.__webglInit=void 0;if(a instanceof THREE.BufferGeometry){var b=a.attributes,c;for(c in b)void 0!==b[c].buffer&&h.deleteBuffer(b[c].buffer);I.info.memory.geometries--}else if(void 0!==
a.geometryGroups)for(b in a.geometryGroups){c=a.geometryGroups[b];if(void 0!==c.numMorphTargets)for(var d=0,e=c.numMorphTargets;d<e;d++)h.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(void 0!==c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)h.deleteBuffer(c.__webglMorphNormalsBuffers[d])}Kb(c)}else Kb(a)},Gb=function(a){a=a.target;a.removeEventListener("dispose",Gb);a.image&&a.image.__webglTextureCube?h.deleteTexture(a.image.__webglTextureCube):a.__webglInit&&(a.__webglInit=!1,h.deleteTexture(a.__webglTexture));
I.info.memory.textures--},Tb=function(a){a=a.target;a.removeEventListener("dispose",Tb);if(a&&a.__webglTexture)if(h.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)h.deleteFramebuffer(a.__webglFramebuffer[b]),h.deleteRenderbuffer(a.__webglRenderbuffer[b]);else h.deleteFramebuffer(a.__webglFramebuffer),h.deleteRenderbuffer(a.__webglRenderbuffer);I.info.memory.textures--},Ub=function(a){a=a.target;a.removeEventListener("dispose",Ub);Eb(a)},Kb=function(a){void 0!==
a.__webglVertexBuffer&&h.deleteBuffer(a.__webglVertexBuffer);void 0!==a.__webglNormalBuffer&&h.deleteBuffer(a.__webglNormalBuffer);void 0!==a.__webglTangentBuffer&&h.deleteBuffer(a.__webglTangentBuffer);void 0!==a.__webglColorBuffer&&h.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&h.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&h.deleteBuffer(a.__webglUV2Buffer);void 0!==a.__webglSkinIndicesBuffer&&h.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&
h.deleteBuffer(a.__webglSkinWeightsBuffer);void 0!==a.__webglFaceBuffer&&h.deleteBuffer(a.__webglFaceBuffer);void 0!==a.__webglLineBuffer&&h.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&h.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)h.deleteBuffer(a.__webglCustomAttributesList[b].buffer);I.info.memory.geometries--},Eb=function(a){var b=a.program;if(void 0!==b){a.program=void 0;var c,d,e=!1,
a=0;for(c=V.length;a<c;a++)if(d=V[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=V.length;a<c;a++)d=V[a],d.program!==b&&e.push(d);V=e;h.deleteProgram(b);I.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){i();a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=h.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=h.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=h.createBuffer());a.hasColors&&
!a.__webglColorBuffer&&(a.__webglColorBuffer=h.createBuffer());a.hasPositions&&(h.bindBuffer(h.ARRAY_BUFFER,a.__webglVertexBuffer),h.bufferData(h.ARRAY_BUFFER,a.positionArray,h.DYNAMIC_DRAW),j(b.attributes.position),h.vertexAttribPointer(b.attributes.position,3,h.FLOAT,!1,0,0));if(a.hasNormals){h.bindBuffer(h.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,l,m,n,q,s,p,r,t=3*a.count;for(r=0;r<t;r+=9)p=a.normalArray,d=p[r],e=p[r+1],f=p[r+2],g=p[r+3],m=p[r+4],q=p[r+
5],l=p[r+6],n=p[r+7],s=p[r+8],d=(d+g+l)/3,e=(e+m+n)/3,f=(f+q+s)/3,p[r]=d,p[r+1]=e,p[r+2]=f,p[r+3]=d,p[r+4]=e,p[r+5]=f,p[r+6]=d,p[r+7]=e,p[r+8]=f}h.bufferData(h.ARRAY_BUFFER,a.normalArray,h.DYNAMIC_DRAW);j(b.attributes.normal);h.vertexAttribPointer(b.attributes.normal,3,h.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(h.bindBuffer(h.ARRAY_BUFFER,a.__webglUvBuffer),h.bufferData(h.ARRAY_BUFFER,a.uvArray,h.DYNAMIC_DRAW),j(b.attributes.uv),h.vertexAttribPointer(b.attributes.uv,2,h.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==
THREE.NoColors&&(h.bindBuffer(h.ARRAY_BUFFER,a.__webglColorBuffer),h.bufferData(h.ARRAY_BUFFER,a.colorArray,h.DYNAMIC_DRAW),j(b.attributes.color),h.vertexAttribPointer(b.attributes.color,3,h.FLOAT,!1,0,0));k();h.drawArrays(h.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible){var j=v(a,b,c,d,f),a=j.attributes,b=e.attributes,c=!1,j=16777215*e.id+2*j.id+(d.wireframe?1:0);j!==Da&&(Da=j,c=!0);c&&i();if(f instanceof THREE.Mesh)if(f=b.index){var k;f.array instanceof
Uint32Array?(j=h.UNSIGNED_INT,k=4):(j=h.UNSIGNED_SHORT,k=2);e=e.offsets;if(0===e.length)c&&(g(d,a,b,0),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,f.buffer)),h.drawElements(h.TRIANGLES,f.array.length,j,0),I.info.render.calls++,I.info.render.vertices+=f.array.length,I.info.render.faces+=f.array.length/3;else for(var c=!0,l=0,m=e.length;l<m;l++){var p=e[l].index;c&&(g(d,a,b,p),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,f.buffer));h.drawElements(h.TRIANGLES,e[l].count,j,e[l].start*k);I.info.render.calls++;I.info.render.vertices+=
e[l].count;I.info.render.faces+=e[l].count/3}}else c&&g(d,a,b,0),d=e.attributes.position,h.drawArrays(h.TRIANGLES,0,d.array.length/3),I.info.render.calls++,I.info.render.vertices+=d.array.length/3,I.info.render.faces+=d.array.length/9;else if(f instanceof THREE.ParticleSystem)c&&g(d,a,b,0),d=b.position,h.drawArrays(h.POINTS,0,d.array.length/3),I.info.render.calls++,I.info.render.points+=d.array.length/3;else if(f instanceof THREE.Line)if(j=f.type===THREE.LineStrip?h.LINE_STRIP:h.LINES,z(d.linewidth),
f=b.index)if(f.array instanceof Uint32Array?(j=h.UNSIGNED_INT,k=4):(j=h.UNSIGNED_SHORT,k=2),e=e.offsets,0===e.length)c&&(g(d,a,b,0),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,f.buffer)),h.drawElements(h.LINES,f.array.length,j,0),I.info.render.calls++,I.info.render.vertices+=f.array.length;else{1<e.length&&(c=!0);l=0;for(m=e.length;l<m;l++)p=e[l].index,c&&(g(d,a,b,p),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,f.buffer)),h.drawElements(h.LINES,e[l].count,j,e[l].start*k),I.info.render.calls++,I.info.render.vertices+=
e[l].count}else c&&g(d,a,b,0),d=b.position,h.drawArrays(j,0,d.array.length/3),I.info.render.calls++,I.info.render.points+=d.array.length/3}};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,l,c=v(a,b,c,d,f),b=c.attributes,a=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==Da&&(Da=c,a=!0);a&&i();!d.morphTargets&&0<=b.position&&a&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglVertexBuffer),j(b.position),h.vertexAttribPointer(b.position,3,h.FLOAT,!1,0,0));if(a){if(e.__webglCustomAttributesList){g=
0;for(l=e.__webglCustomAttributesList.length;g<l;g++)c=e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(h.bindBuffer(h.ARRAY_BUFFER,c.buffer),j(b[c.buffer.belongsToAttribute]),h.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,h.FLOAT,!1,0,0))}0<=b.color&&(0<f.geometry.colors.length||0<f.geometry.faces.length?(h.bindBuffer(h.ARRAY_BUFFER,e.__webglColorBuffer),j(b.color),h.vertexAttribPointer(b.color,3,h.FLOAT,!1,0,0)):d.defaultAttributeValues&&h.vertexAttrib3fv(b.color,
d.defaultAttributeValues.color));0<=b.normal&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglNormalBuffer),j(b.normal),h.vertexAttribPointer(b.normal,3,h.FLOAT,!1,0,0));0<=b.tangent&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglTangentBuffer),j(b.tangent),h.vertexAttribPointer(b.tangent,4,h.FLOAT,!1,0,0));0<=b.uv&&(f.geometry.faceVertexUvs[0]?(h.bindBuffer(h.ARRAY_BUFFER,e.__webglUVBuffer),j(b.uv),h.vertexAttribPointer(b.uv,2,h.FLOAT,!1,0,0)):d.defaultAttributeValues&&h.vertexAttrib2fv(b.uv,d.defaultAttributeValues.uv));
0<=b.uv2&&(f.geometry.faceVertexUvs[1]?(h.bindBuffer(h.ARRAY_BUFFER,e.__webglUV2Buffer),j(b.uv2),h.vertexAttribPointer(b.uv2,2,h.FLOAT,!1,0,0)):d.defaultAttributeValues&&h.vertexAttrib2fv(b.uv2,d.defaultAttributeValues.uv2));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),j(b.skinIndex),h.vertexAttribPointer(b.skinIndex,4,h.FLOAT,!1,0,0),h.bindBuffer(h.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),j(b.skinWeight),h.vertexAttribPointer(b.skinWeight,
4,h.FLOAT,!1,0,0));0<=b.lineDistance&&(h.bindBuffer(h.ARRAY_BUFFER,e.__webglLineDistanceBuffer),j(b.lineDistance),h.vertexAttribPointer(b.lineDistance,1,h.FLOAT,!1,0,0))}k();f instanceof THREE.Mesh?(f=e.__typeArray===Uint32Array?h.UNSIGNED_INT:h.UNSIGNED_SHORT,d.wireframe?(z(d.wireframeLinewidth),a&&h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),h.drawElements(h.LINES,e.__webglLineCount,f,0)):(a&&h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),h.drawElements(h.TRIANGLES,e.__webglFaceCount,
f,0)),I.info.render.calls++,I.info.render.vertices+=e.__webglFaceCount,I.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?h.LINE_STRIP:h.LINES,z(d.linewidth),h.drawArrays(f,0,e.__webglLineCount),I.info.render.calls++):f instanceof THREE.ParticleSystem&&(h.drawArrays(h.POINTS,0,e.__webglParticleCount),I.info.render.calls++,I.info.render.points+=e.__webglParticleCount)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
else{var e,f,g,i,j=a.__lights,l=a.fog;Xa=-1;Ta=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);Qb.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);na.setFromMatrix(Qb);this.autoUpdateObjects&&this.initWebGLObjects(a);m(this.renderPluginsPre,a,b);I.info.render.calls=0;I.info.render.vertices=0;I.info.render.faces=0;I.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,
this.autoClearDepth,this.autoClearStencil);i=a.__webglObjects;d=0;for(e=i.length;d<e;d++)if(f=i[d],g=f.object,f.id=d,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||na.intersectsObject(g))){var k=g;k._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,k.matrixWorld);k._normalMatrix.getNormalMatrix(k._modelViewMatrix);var k=f,p=k.object.material;p&&(p.transparent?(k.transparent=p,k.opaque=null):(k.opaque=p,k.transparent=null));f.render=!0;
!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(ha.setFromMatrixPosition(g.matrixWorld),ha.applyProjection(Qb),f.z=ha.z))}this.sortObjects&&i.sort(n);i=a.__webglObjectsImmediate;d=0;for(e=i.length;d<e;d++)f=i[d],g=f.object,g.visible&&(g._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,g.matrixWorld),g._normalMatrix.getNormalMatrix(g._modelViewMatrix),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,
this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),H(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),s(a.__webglObjects,!1,"",b,j,l,!0,d),w(a.__webglObjectsImmediate,"",b,j,l,!1,d)):(d=null,this.setBlending(THREE.NoBlending),s(a.__webglObjects,!0,"opaque",b,j,l,!1,d),w(a.__webglObjectsImmediate,"opaque",b,j,l,!1,d),s(a.__webglObjects,!1,"transparent",b,j,l,!0,d),w(a.__webglObjectsImmediate,"transparent",b,
j,l,!0,d));m(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(h.bindTexture(h.TEXTURE_CUBE_MAP,c.__webglTexture),h.generateMipmap(h.TEXTURE_CUBE_MAP),h.bindTexture(h.TEXTURE_CUBE_MAP,null)):(h.bindTexture(h.TEXTURE_2D,c.__webglTexture),h.generateMipmap(h.TEXTURE_2D),h.bindTexture(h.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,
b,c,d,e){var f=v(a,b,c,d,e);Da=-1;I.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,h,na):e.render(function(a){I.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;)l(a.__objectsAdded[0],a),a.__objectsAdded.splice(0,1);for(;a.__objectsRemoved.length;)u(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1);for(var b=0,g=
a.__webglObjects.length;b<g;b++){var i=a.__webglObjects[b].object;void 0===i.__webglInit&&(void 0!==i.__webglActive&&u(i,a),l(i,a));var j=i,k=j.geometry,m=void 0,n=void 0,q=void 0;if(k instanceof THREE.BufferGeometry){var s=h.DYNAMIC_DRAW,w=k.attributes,v=void 0,H=void 0;for(v in w)H=w[v],H.needsUpdate&&("index"===v?(h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,H.buffer),h.bufferData(h.ELEMENT_ARRAY_BUFFER,H.array,s)):(h.bindBuffer(h.ARRAY_BUFFER,H.buffer),h.bufferData(h.ARRAY_BUFFER,H.array,s)),H.needsUpdate=
!1)}else if(j instanceof THREE.Mesh){for(var y=0,K=k.geometryGroupsList.length;y<K;y++)if(m=k.geometryGroupsList[y],q=d(j,m),k.buffersNeedUpdate&&c(m,j),n=q.attributes&&t(q),k.verticesNeedUpdate||k.morphTargetsNeedUpdate||k.elementsNeedUpdate||k.uvsNeedUpdate||k.normalsNeedUpdate||k.colorsNeedUpdate||k.tangentsNeedUpdate||n){var z=m,B=j,C=h.DYNAMIC_DRAW,E=!k.dynamic,J=q;if(z.__inittedArrays){var G=f(J),L=J.vertexColors?J.vertexColors:!1,I=e(J),M=G===THREE.SmoothShading,x=void 0,D=void 0,Q=void 0,
N=void 0,ea=void 0,V=void 0,X=void 0,fa=void 0,ba=void 0,ga=void 0,sa=void 0,R=void 0,S=void 0,T=void 0,la=void 0,ia=void 0,Z=void 0,ma=void 0,na=void 0,pa=void 0,qa=void 0,ra=void 0,ta=void 0,ua=void 0,va=void 0,wa=void 0,Aa=void 0,Ba=void 0,Da=void 0,oa=void 0,Ra=void 0,Ga=void 0,Sa=void 0,Xa=void 0,Ea=void 0,jb=void 0,Ya=void 0,Za=void 0,Ta=void 0,Ua=void 0,Va=0,Wa=0,Oa=0,Pa=0,Qa=0,$a=0,Fa=0,pb=0,La=0,da=0,ja=0,F=0,Ca=void 0,ab=z.__vertexArray,hb=z.__uvArray,ib=z.__uv2Array,sb=z.__normalArray,
Ha=z.__tangentArray,bb=z.__colorArray,Ia=z.__skinIndexArray,Ja=z.__skinWeightArray,nb=z.__morphTargetsArrays,rb=z.__morphNormalsArrays,ob=z.__webglCustomAttributesList,A=void 0,kb=z.__faceArray,tb=z.__lineArray,xa=B.geometry,Ab=xa.elementsNeedUpdate,wb=xa.uvsNeedUpdate,Bb=xa.normalsNeedUpdate,Gb=xa.tangentsNeedUpdate,Ib=xa.colorsNeedUpdate,Jb=xa.morphTargetsNeedUpdate,ec=xa.vertices,W=z.faces3,cb=xa.faces,zb=xa.faceVertexUvs[0],Cb=xa.faceVertexUvs[1],fc=xa.skinIndices,Vb=xa.skinWeights,Wb=xa.morphTargets,
Db=xa.morphNormals;if(xa.verticesNeedUpdate){x=0;for(D=W.length;x<D;x++)N=cb[W[x]],R=ec[N.a],S=ec[N.b],T=ec[N.c],ab[Wa]=R.x,ab[Wa+1]=R.y,ab[Wa+2]=R.z,ab[Wa+3]=S.x,ab[Wa+4]=S.y,ab[Wa+5]=S.z,ab[Wa+6]=T.x,ab[Wa+7]=T.y,ab[Wa+8]=T.z,Wa+=9;h.bindBuffer(h.ARRAY_BUFFER,z.__webglVertexBuffer);h.bufferData(h.ARRAY_BUFFER,ab,C)}if(Jb){Ea=0;for(jb=Wb.length;Ea<jb;Ea++){x=ja=0;for(D=W.length;x<D;x++)Ta=W[x],N=cb[Ta],R=Wb[Ea].vertices[N.a],S=Wb[Ea].vertices[N.b],T=Wb[Ea].vertices[N.c],Ya=nb[Ea],Ya[ja]=R.x,Ya[ja+
1]=R.y,Ya[ja+2]=R.z,Ya[ja+3]=S.x,Ya[ja+4]=S.y,Ya[ja+5]=S.z,Ya[ja+6]=T.x,Ya[ja+7]=T.y,Ya[ja+8]=T.z,J.morphNormals&&(M?(Ua=Db[Ea].vertexNormals[Ta],ma=Ua.a,na=Ua.b,pa=Ua.c):pa=na=ma=Db[Ea].faceNormals[Ta],Za=rb[Ea],Za[ja]=ma.x,Za[ja+1]=ma.y,Za[ja+2]=ma.z,Za[ja+3]=na.x,Za[ja+4]=na.y,Za[ja+5]=na.z,Za[ja+6]=pa.x,Za[ja+7]=pa.y,Za[ja+8]=pa.z),ja+=9;h.bindBuffer(h.ARRAY_BUFFER,z.__webglMorphTargetsBuffers[Ea]);h.bufferData(h.ARRAY_BUFFER,nb[Ea],C);J.morphNormals&&(h.bindBuffer(h.ARRAY_BUFFER,z.__webglMorphNormalsBuffers[Ea]),
h.bufferData(h.ARRAY_BUFFER,rb[Ea],C))}}if(Vb.length){x=0;for(D=W.length;x<D;x++)N=cb[W[x]],ua=Vb[N.a],va=Vb[N.b],wa=Vb[N.c],Ja[da]=ua.x,Ja[da+1]=ua.y,Ja[da+2]=ua.z,Ja[da+3]=ua.w,Ja[da+4]=va.x,Ja[da+5]=va.y,Ja[da+6]=va.z,Ja[da+7]=va.w,Ja[da+8]=wa.x,Ja[da+9]=wa.y,Ja[da+10]=wa.z,Ja[da+11]=wa.w,Aa=fc[N.a],Ba=fc[N.b],Da=fc[N.c],Ia[da]=Aa.x,Ia[da+1]=Aa.y,Ia[da+2]=Aa.z,Ia[da+3]=Aa.w,Ia[da+4]=Ba.x,Ia[da+5]=Ba.y,Ia[da+6]=Ba.z,Ia[da+7]=Ba.w,Ia[da+8]=Da.x,Ia[da+9]=Da.y,Ia[da+10]=Da.z,Ia[da+11]=Da.w,da+=12;
0<da&&(h.bindBuffer(h.ARRAY_BUFFER,z.__webglSkinIndicesBuffer),h.bufferData(h.ARRAY_BUFFER,Ia,C),h.bindBuffer(h.ARRAY_BUFFER,z.__webglSkinWeightsBuffer),h.bufferData(h.ARRAY_BUFFER,Ja,C))}if(Ib&&L){x=0;for(D=W.length;x<D;x++)N=cb[W[x]],X=N.vertexColors,fa=N.color,3===X.length&&L===THREE.VertexColors?(qa=X[0],ra=X[1],ta=X[2]):ta=ra=qa=fa,bb[La]=qa.r,bb[La+1]=qa.g,bb[La+2]=qa.b,bb[La+3]=ra.r,bb[La+4]=ra.g,bb[La+5]=ra.b,bb[La+6]=ta.r,bb[La+7]=ta.g,bb[La+8]=ta.b,La+=9;0<La&&(h.bindBuffer(h.ARRAY_BUFFER,
z.__webglColorBuffer),h.bufferData(h.ARRAY_BUFFER,bb,C))}if(Gb&&xa.hasTangents){x=0;for(D=W.length;x<D;x++)N=cb[W[x]],ba=N.vertexTangents,la=ba[0],ia=ba[1],Z=ba[2],Ha[Fa]=la.x,Ha[Fa+1]=la.y,Ha[Fa+2]=la.z,Ha[Fa+3]=la.w,Ha[Fa+4]=ia.x,Ha[Fa+5]=ia.y,Ha[Fa+6]=ia.z,Ha[Fa+7]=ia.w,Ha[Fa+8]=Z.x,Ha[Fa+9]=Z.y,Ha[Fa+10]=Z.z,Ha[Fa+11]=Z.w,Fa+=12;h.bindBuffer(h.ARRAY_BUFFER,z.__webglTangentBuffer);h.bufferData(h.ARRAY_BUFFER,Ha,C)}if(Bb&&G){x=0;for(D=W.length;x<D;x++)if(N=cb[W[x]],ea=N.vertexNormals,V=N.normal,
3===ea.length&&M)for(oa=0;3>oa;oa++)Ga=ea[oa],sb[$a]=Ga.x,sb[$a+1]=Ga.y,sb[$a+2]=Ga.z,$a+=3;else for(oa=0;3>oa;oa++)sb[$a]=V.x,sb[$a+1]=V.y,sb[$a+2]=V.z,$a+=3;h.bindBuffer(h.ARRAY_BUFFER,z.__webglNormalBuffer);h.bufferData(h.ARRAY_BUFFER,sb,C)}if(wb&&zb&&I){x=0;for(D=W.length;x<D;x++)if(Q=W[x],ga=zb[Q],void 0!==ga)for(oa=0;3>oa;oa++)Sa=ga[oa],hb[Oa]=Sa.x,hb[Oa+1]=Sa.y,Oa+=2;0<Oa&&(h.bindBuffer(h.ARRAY_BUFFER,z.__webglUVBuffer),h.bufferData(h.ARRAY_BUFFER,hb,C))}if(wb&&Cb&&I){x=0;for(D=W.length;x<
D;x++)if(Q=W[x],sa=Cb[Q],void 0!==sa)for(oa=0;3>oa;oa++)Xa=sa[oa],ib[Pa]=Xa.x,ib[Pa+1]=Xa.y,Pa+=2;0<Pa&&(h.bindBuffer(h.ARRAY_BUFFER,z.__webglUV2Buffer),h.bufferData(h.ARRAY_BUFFER,ib,C))}if(Ab){x=0;for(D=W.length;x<D;x++)kb[Qa]=Va,kb[Qa+1]=Va+1,kb[Qa+2]=Va+2,Qa+=3,tb[pb]=Va,tb[pb+1]=Va+1,tb[pb+2]=Va,tb[pb+3]=Va+2,tb[pb+4]=Va+1,tb[pb+5]=Va+2,pb+=6,Va+=3;h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,z.__webglFaceBuffer);h.bufferData(h.ELEMENT_ARRAY_BUFFER,kb,C);h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,z.__webglLineBuffer);
h.bufferData(h.ELEMENT_ARRAY_BUFFER,tb,C)}if(ob){oa=0;for(Ra=ob.length;oa<Ra;oa++)if(A=ob[oa],A.__original.needsUpdate){F=0;if(1===A.size)if(void 0===A.boundTo||"vertices"===A.boundTo){x=0;for(D=W.length;x<D;x++)N=cb[W[x]],A.array[F]=A.value[N.a],A.array[F+1]=A.value[N.b],A.array[F+2]=A.value[N.c],F+=3}else{if("faces"===A.boundTo){x=0;for(D=W.length;x<D;x++)Ca=A.value[W[x]],A.array[F]=Ca,A.array[F+1]=Ca,A.array[F+2]=Ca,F+=3}}else if(2===A.size)if(void 0===A.boundTo||"vertices"===A.boundTo){x=0;for(D=
W.length;x<D;x++)N=cb[W[x]],R=A.value[N.a],S=A.value[N.b],T=A.value[N.c],A.array[F]=R.x,A.array[F+1]=R.y,A.array[F+2]=S.x,A.array[F+3]=S.y,A.array[F+4]=T.x,A.array[F+5]=T.y,F+=6}else{if("faces"===A.boundTo){x=0;for(D=W.length;x<D;x++)T=S=R=Ca=A.value[W[x]],A.array[F]=R.x,A.array[F+1]=R.y,A.array[F+2]=S.x,A.array[F+3]=S.y,A.array[F+4]=T.x,A.array[F+5]=T.y,F+=6}}else if(3===A.size){var ca;ca="c"===A.type?["r","g","b"]:["x","y","z"];if(void 0===A.boundTo||"vertices"===A.boundTo){x=0;for(D=W.length;x<
D;x++)N=cb[W[x]],R=A.value[N.a],S=A.value[N.b],T=A.value[N.c],A.array[F]=R[ca[0]],A.array[F+1]=R[ca[1]],A.array[F+2]=R[ca[2]],A.array[F+3]=S[ca[0]],A.array[F+4]=S[ca[1]],A.array[F+5]=S[ca[2]],A.array[F+6]=T[ca[0]],A.array[F+7]=T[ca[1]],A.array[F+8]=T[ca[2]],F+=9}else if("faces"===A.boundTo){x=0;for(D=W.length;x<D;x++)T=S=R=Ca=A.value[W[x]],A.array[F]=R[ca[0]],A.array[F+1]=R[ca[1]],A.array[F+2]=R[ca[2]],A.array[F+3]=S[ca[0]],A.array[F+4]=S[ca[1]],A.array[F+5]=S[ca[2]],A.array[F+6]=T[ca[0]],A.array[F+
7]=T[ca[1]],A.array[F+8]=T[ca[2]],F+=9}else if("faceVertices"===A.boundTo){x=0;for(D=W.length;x<D;x++)Ca=A.value[W[x]],R=Ca[0],S=Ca[1],T=Ca[2],A.array[F]=R[ca[0]],A.array[F+1]=R[ca[1]],A.array[F+2]=R[ca[2]],A.array[F+3]=S[ca[0]],A.array[F+4]=S[ca[1]],A.array[F+5]=S[ca[2]],A.array[F+6]=T[ca[0]],A.array[F+7]=T[ca[1]],A.array[F+8]=T[ca[2]],F+=9}}else if(4===A.size)if(void 0===A.boundTo||"vertices"===A.boundTo){x=0;for(D=W.length;x<D;x++)N=cb[W[x]],R=A.value[N.a],S=A.value[N.b],T=A.value[N.c],A.array[F]=
R.x,A.array[F+1]=R.y,A.array[F+2]=R.z,A.array[F+3]=R.w,A.array[F+4]=S.x,A.array[F+5]=S.y,A.array[F+6]=S.z,A.array[F+7]=S.w,A.array[F+8]=T.x,A.array[F+9]=T.y,A.array[F+10]=T.z,A.array[F+11]=T.w,F+=12}else if("faces"===A.boundTo){x=0;for(D=W.length;x<D;x++)T=S=R=Ca=A.value[W[x]],A.array[F]=R.x,A.array[F+1]=R.y,A.array[F+2]=R.z,A.array[F+3]=R.w,A.array[F+4]=S.x,A.array[F+5]=S.y,A.array[F+6]=S.z,A.array[F+7]=S.w,A.array[F+8]=T.x,A.array[F+9]=T.y,A.array[F+10]=T.z,A.array[F+11]=T.w,F+=12}else if("faceVertices"===
A.boundTo){x=0;for(D=W.length;x<D;x++)Ca=A.value[W[x]],R=Ca[0],S=Ca[1],T=Ca[2],A.array[F]=R.x,A.array[F+1]=R.y,A.array[F+2]=R.z,A.array[F+3]=R.w,A.array[F+4]=S.x,A.array[F+5]=S.y,A.array[F+6]=S.z,A.array[F+7]=S.w,A.array[F+8]=T.x,A.array[F+9]=T.y,A.array[F+10]=T.z,A.array[F+11]=T.w,F+=12}h.bindBuffer(h.ARRAY_BUFFER,A.buffer);h.bufferData(h.ARRAY_BUFFER,A.array,C)}}E&&(delete z.__inittedArrays,delete z.__colorArray,delete z.__normalArray,delete z.__tangentArray,delete z.__uvArray,delete z.__uv2Array,
delete z.__faceArray,delete z.__vertexArray,delete z.__lineArray,delete z.__skinIndexArray,delete z.__skinWeightArray)}}k.verticesNeedUpdate=!1;k.morphTargetsNeedUpdate=!1;k.elementsNeedUpdate=!1;k.uvsNeedUpdate=!1;k.normalsNeedUpdate=!1;k.colorsNeedUpdate=!1;k.tangentsNeedUpdate=!1;k.buffersNeedUpdate=!1;q.attributes&&r(q)}else if(j instanceof THREE.Line){q=d(j,k);n=q.attributes&&t(q);if(k.verticesNeedUpdate||k.colorsNeedUpdate||k.lineDistancesNeedUpdate||n){var Ka=k,Xb=h.DYNAMIC_DRAW,Lb=void 0,
Mb=void 0,Nb=void 0,Yb=void 0,aa=void 0,Zb=void 0,Eb=Ka.vertices,Fb=Ka.colors,Hb=Ka.lineDistances,Pb=Eb.length,Rb=Fb.length,Sb=Hb.length,$b=Ka.__vertexArray,ac=Ka.__colorArray,Kb=Ka.__lineDistanceArray,Tb=Ka.colorsNeedUpdate,Ub=Ka.lineDistancesNeedUpdate,gc=Ka.__webglCustomAttributesList,bc=void 0,kc=void 0,ka=void 0,xb=void 0,ya=void 0,$=void 0;if(Ka.verticesNeedUpdate){for(Lb=0;Lb<Pb;Lb++)Yb=Eb[Lb],aa=3*Lb,$b[aa]=Yb.x,$b[aa+1]=Yb.y,$b[aa+2]=Yb.z;h.bindBuffer(h.ARRAY_BUFFER,Ka.__webglVertexBuffer);
h.bufferData(h.ARRAY_BUFFER,$b,Xb)}if(Tb){for(Mb=0;Mb<Rb;Mb++)Zb=Fb[Mb],aa=3*Mb,ac[aa]=Zb.r,ac[aa+1]=Zb.g,ac[aa+2]=Zb.b;h.bindBuffer(h.ARRAY_BUFFER,Ka.__webglColorBuffer);h.bufferData(h.ARRAY_BUFFER,ac,Xb)}if(Ub){for(Nb=0;Nb<Sb;Nb++)Kb[Nb]=Hb[Nb];h.bindBuffer(h.ARRAY_BUFFER,Ka.__webglLineDistanceBuffer);h.bufferData(h.ARRAY_BUFFER,Kb,Xb)}if(gc){bc=0;for(kc=gc.length;bc<kc;bc++)if($=gc[bc],$.needsUpdate&&(void 0===$.boundTo||"vertices"===$.boundTo)){aa=0;xb=$.value.length;if(1===$.size)for(ka=0;ka<
xb;ka++)$.array[ka]=$.value[ka];else if(2===$.size)for(ka=0;ka<xb;ka++)ya=$.value[ka],$.array[aa]=ya.x,$.array[aa+1]=ya.y,aa+=2;else if(3===$.size)if("c"===$.type)for(ka=0;ka<xb;ka++)ya=$.value[ka],$.array[aa]=ya.r,$.array[aa+1]=ya.g,$.array[aa+2]=ya.b,aa+=3;else for(ka=0;ka<xb;ka++)ya=$.value[ka],$.array[aa]=ya.x,$.array[aa+1]=ya.y,$.array[aa+2]=ya.z,aa+=3;else if(4===$.size)for(ka=0;ka<xb;ka++)ya=$.value[ka],$.array[aa]=ya.x,$.array[aa+1]=ya.y,$.array[aa+2]=ya.z,$.array[aa+3]=ya.w,aa+=4;h.bindBuffer(h.ARRAY_BUFFER,
$.buffer);h.bufferData(h.ARRAY_BUFFER,$.array,Xb)}}}k.verticesNeedUpdate=!1;k.colorsNeedUpdate=!1;k.lineDistancesNeedUpdate=!1;q.attributes&&r(q)}else if(j instanceof THREE.ParticleSystem){q=d(j,k);n=q.attributes&&t(q);if(k.verticesNeedUpdate||k.colorsNeedUpdate||j.sortParticles||n){var db=k,hc=h.DYNAMIC_DRAW,Ob=j,za=void 0,eb=void 0,fb=void 0,P=void 0,gb=void 0,qb=void 0,cc=db.vertices,ic=cc.length,jc=db.colors,lc=jc.length,ub=db.__vertexArray,vb=db.__colorArray,lb=db.__sortArray,mc=db.verticesNeedUpdate,
nc=db.colorsNeedUpdate,mb=db.__webglCustomAttributesList,Ma=void 0,yb=void 0,U=void 0,Na=void 0,Y=void 0,O=void 0;if(Ob.sortParticles){dc.copy(Qb);dc.multiply(Ob.matrixWorld);for(za=0;za<ic;za++)fb=cc[za],ha.copy(fb),ha.applyProjection(dc),lb[za]=[ha.z,za];lb.sort(p);for(za=0;za<ic;za++)fb=cc[lb[za][1]],P=3*za,ub[P]=fb.x,ub[P+1]=fb.y,ub[P+2]=fb.z;for(eb=0;eb<lc;eb++)P=3*eb,qb=jc[lb[eb][1]],vb[P]=qb.r,vb[P+1]=qb.g,vb[P+2]=qb.b;if(mb){Ma=0;for(yb=mb.length;Ma<yb;Ma++)if(O=mb[Ma],void 0===O.boundTo||
"vertices"===O.boundTo)if(P=0,Na=O.value.length,1===O.size)for(U=0;U<Na;U++)gb=lb[U][1],O.array[U]=O.value[gb];else if(2===O.size)for(U=0;U<Na;U++)gb=lb[U][1],Y=O.value[gb],O.array[P]=Y.x,O.array[P+1]=Y.y,P+=2;else if(3===O.size)if("c"===O.type)for(U=0;U<Na;U++)gb=lb[U][1],Y=O.value[gb],O.array[P]=Y.r,O.array[P+1]=Y.g,O.array[P+2]=Y.b,P+=3;else for(U=0;U<Na;U++)gb=lb[U][1],Y=O.value[gb],O.array[P]=Y.x,O.array[P+1]=Y.y,O.array[P+2]=Y.z,P+=3;else if(4===O.size)for(U=0;U<Na;U++)gb=lb[U][1],Y=O.value[gb],
O.array[P]=Y.x,O.array[P+1]=Y.y,O.array[P+2]=Y.z,O.array[P+3]=Y.w,P+=4}}else{if(mc)for(za=0;za<ic;za++)fb=cc[za],P=3*za,ub[P]=fb.x,ub[P+1]=fb.y,ub[P+2]=fb.z;if(nc)for(eb=0;eb<lc;eb++)qb=jc[eb],P=3*eb,vb[P]=qb.r,vb[P+1]=qb.g,vb[P+2]=qb.b;if(mb){Ma=0;for(yb=mb.length;Ma<yb;Ma++)if(O=mb[Ma],O.needsUpdate&&(void 0===O.boundTo||"vertices"===O.boundTo))if(Na=O.value.length,P=0,1===O.size)for(U=0;U<Na;U++)O.array[U]=O.value[U];else if(2===O.size)for(U=0;U<Na;U++)Y=O.value[U],O.array[P]=Y.x,O.array[P+1]=
Y.y,P+=2;else if(3===O.size)if("c"===O.type)for(U=0;U<Na;U++)Y=O.value[U],O.array[P]=Y.r,O.array[P+1]=Y.g,O.array[P+2]=Y.b,P+=3;else for(U=0;U<Na;U++)Y=O.value[U],O.array[P]=Y.x,O.array[P+1]=Y.y,O.array[P+2]=Y.z,P+=3;else if(4===O.size)for(U=0;U<Na;U++)Y=O.value[U],O.array[P]=Y.x,O.array[P+1]=Y.y,O.array[P+2]=Y.z,O.array[P+3]=Y.w,P+=4}}if(mc||Ob.sortParticles)h.bindBuffer(h.ARRAY_BUFFER,db.__webglVertexBuffer),h.bufferData(h.ARRAY_BUFFER,ub,hc);if(nc||Ob.sortParticles)h.bindBuffer(h.ARRAY_BUFFER,
db.__webglColorBuffer),h.bufferData(h.ARRAY_BUFFER,vb,hc);if(mb){Ma=0;for(yb=mb.length;Ma<yb;Ma++)if(O=mb[Ma],O.needsUpdate||Ob.sortParticles)h.bindBuffer(h.ARRAY_BUFFER,O.buffer),h.bufferData(h.ARRAY_BUFFER,O.array,hc)}}k.verticesNeedUpdate=!1;k.colorsNeedUpdate=!1;q.attributes&&r(q)}}};this.initMaterial=function(a,b,c,d){a.addEventListener("dispose",Ub);var e,f;a instanceof THREE.MeshLambertMaterial?f="lambert":a instanceof THREE.MeshPhongMaterial?f="phong":a instanceof THREE.MeshBasicMaterial?
f="basic":a instanceof THREE.LineBasicMaterial?f="basic":a instanceof THREE.SkyMaterial&&(f="sky");if(f){var g=THREE.ShaderLib[f];a.uniforms=THREE.UniformsUtils.clone(g.uniforms);a.vertexShader=g.vertexShader;a.fragmentShader=g.fragmentShader}for(var h=g=0,i=0,k=0,j=b.length;k<j;k++){var l=b[k];l.onlyShadow||!1===l.visible||(l instanceof THREE.DirectionalLight&&g++,l instanceof THREE.PointLight&&h++,l instanceof THREE.SpotLight&&i++)}j=k=0;for(l=b.length;j<l;j++){var m=b[j];m instanceof THREE.DirectionalLight&&
m.susShadows&&(k+=m.susShadows.length);m.castShadow&&(m instanceof THREE.SpotLight&&k++,m instanceof THREE.DirectionalLight&&!m.shadowCascade&&k++)}b=k;c={precision:D,supportsVertexTextures:Jb,map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,colorNoise:!!a.colorNoise,colorNoiseBase:a.colorNoiseBase,depthNoiseRedux:!!a.depthNoiseRedux,depthNoiseReduxDistance:a.depthNoiseReduxDistance,highlight:!!a.highlight,
highlightValue:a.highlightValue,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:sa,useVertexTexture:rc&&d&&d.skeleton&&d.skeleton.useVertexTexture,maxDirLights:g,maxPointLights:h,maxSpotLights:i,maxShadows:b,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow&&0<b,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,wrapAround:a.wrapAround,doubleSided:a.side===
THREE.DoubleSide,flipSided:a.side===THREE.BackSide};d=[];f?d.push(f):(d.push(a.fragmentShader),d.push(a.vertexShader));for(var q in a.defines)d.push(q),d.push(a.defines[q]);for(var p in c)d.push(p),d.push(c[p]);f=d.join();var n;p=0;for(q=V.length;p<q;p++)if(d=V[p],d.code===f){n=d;n.usedTimes++;break}void 0===n&&(n=new THREE.WebGLProgram(this,f,a,c),V.push(n),I.info.memory.programs=V.length);a.program=n;a.uniformsList=[];for(e in a.uniforms)a.uniformsList.push([a.uniforms[e],e])};this.setFaceCulling=
function(a,b){a===THREE.CullFaceNone?h.disable(h.CULL_FACE):(b===THREE.FrontFaceDirectionCW?h.frontFace(h.CW):h.frontFace(h.CCW),a===THREE.CullFaceBack?h.cullFace(h.BACK):a===THREE.CullFaceFront?h.cullFace(h.FRONT):h.cullFace(h.FRONT_AND_BACK),h.enable(h.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;Qa!==b&&(b?h.disable(h.CULL_FACE):h.enable(h.CULL_FACE),Qa=b);hb!==a&&(a?h.frontFace(h.CW):h.frontFace(h.CCW),hb=a)};this.setDepthTest=function(a){nb!==
a&&(a?h.enable(h.DEPTH_TEST):h.disable(h.DEPTH_TEST),nb=a)};this.setDepthWrite=function(a){ta!==a&&(h.depthMask(a),ta=a)};this.setBlending=function(a,b,c,d){a!==ib&&(a===THREE.NoBlending?h.disable(h.BLEND):a===THREE.AdditiveBlending?(h.enable(h.BLEND),h.blendEquation(h.FUNC_ADD),h.blendFunc(h.SRC_ALPHA,h.ONE)):a===THREE.SubtractiveBlending?(h.enable(h.BLEND),h.blendEquation(h.FUNC_ADD),h.blendFunc(h.ZERO,h.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(h.enable(h.BLEND),h.blendEquation(h.FUNC_ADD),
h.blendFunc(h.ZERO,h.SRC_COLOR)):a===THREE.CustomBlending?h.enable(h.BLEND):(h.enable(h.BLEND),h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA)),ib=a);if(a===THREE.CustomBlending){if(b!==Ab&&(h.blendEquation(L(b)),Ab=b),c!==wb||d!==Bb)h.blendFunc(L(c),L(d)),wb=c,Bb=d}else Bb=wb=Ab=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",Gb),a.__webglTexture=h.createTexture(),
I.info.memory.textures++);h.activeTexture(h.TEXTURE0+b);h.bindTexture(h.TEXTURE_2D,a.__webglTexture);h.pixelStorei(h.UNPACK_FLIP_Y_WEBGL,a.flipY);h.pixelStorei(h.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);h.pixelStorei(h.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,c=THREE.Math.isPowerOfTwo(c.width)&&THREE.Math.isPowerOfTwo(c.height),d=L(a.format),e=L(a.type);J(h.TEXTURE_2D,a,c);var f,g=a.mipmaps;if(a instanceof THREE.CompressedTexture)for(var i=0,k=g.length;i<k;i++)f=g[i],a.format!==
THREE.RGBAFormat?h.compressedTexImage2D(h.TEXTURE_2D,i,d,f.width,f.height,0,f.data):h.texImage2D(h.TEXTURE_2D,i,d,f.width,f.height,0,d,e,f.data);else if(0<g.length&&c){i=0;for(k=g.length;i<k;i++)f=g[i],h.texImage2D(h.TEXTURE_2D,i,d,d,e,f);a.generateMipmaps=!1}else h.texImage2D(h.TEXTURE_2D,0,d,d,e,a.image);a.generateMipmaps&&c&&h.generateMipmap(h.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else h.activeTexture(h.TEXTURE0+b),h.bindTexture(h.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=
function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",Tb);a.__webglTexture=h.createTexture();I.info.memory.textures++;var c=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),d=L(a.format),e=L(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];h.bindTexture(h.TEXTURE_CUBE_MAP,a.__webglTexture);J(h.TEXTURE_CUBE_MAP,a,c);
for(var f=0;6>f;f++){a.__webglFramebuffer[f]=h.createFramebuffer();a.__webglRenderbuffer[f]=h.createRenderbuffer();h.texImage2D(h.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,i=h.TEXTURE_CUBE_MAP_POSITIVE_X+f;h.bindFramebuffer(h.FRAMEBUFFER,a.__webglFramebuffer[f]);h.framebufferTexture2D(h.FRAMEBUFFER,h.COLOR_ATTACHMENT0,i,g.__webglTexture,0);M(a.__webglRenderbuffer[f],a)}c&&h.generateMipmap(h.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=h.createFramebuffer(),a.__webglRenderbuffer=
a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:h.createRenderbuffer(),h.bindTexture(h.TEXTURE_2D,a.__webglTexture),J(h.TEXTURE_2D,a,c),h.texImage2D(h.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=h.TEXTURE_2D,h.bindFramebuffer(h.FRAMEBUFFER,a.__webglFramebuffer),h.framebufferTexture2D(h.FRAMEBUFFER,h.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?h.framebufferRenderbuffer(h.FRAMEBUFFER,h.DEPTH_ATTACHMENT,h.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&
a.stencilBuffer&&h.framebufferRenderbuffer(h.FRAMEBUFFER,h.DEPTH_STENCIL_ATTACHMENT,h.RENDERBUFFER,a.__webglRenderbuffer):M(a.__webglRenderbuffer,a),c&&h.generateMipmap(h.TEXTURE_2D);b?h.bindTexture(h.TEXTURE_CUBE_MAP,null):h.bindTexture(h.TEXTURE_2D,null);h.bindRenderbuffer(h.RENDERBUFFER,null);h.bindFramebuffer(h.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=ma,a=va,d=ra,e=ua);b!==zb&&(h.bindFramebuffer(h.FRAMEBUFFER,b),
h.viewport(d,e,c,a),zb=b);wa=c;Sa=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a;this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;
a.shareDepthFrom=this.shareDepthFrom;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){console.log("THREE.WebGLRenderTargetCube");THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);
THREE.WebGLProgram=function(){var a=0;return function(b,c,d,f){var e=b.context,g=d.fragmentShader,i=d.vertexShader,j=d.uniforms,k=d.attributes,n=d.defines,p=d.index0AttributeName;void 0===p&&!0===f.morphTargets&&(p="position");var m="SHADOWMAP_TYPE_BASIC";f.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":f.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT");var s,w;s=[];for(var l in n)w=n[l],!1!==w&&(w="#define "+l+" "+w,s.push(w));s=s.join("\n");n=e.createProgram();d instanceof
THREE.RawShaderMaterial?b=d="":(d=["precision "+f.precision+" float;","precision "+f.precision+" int;",s,f.supportsVertexTextures?"#define VERTEX_TEXTURES":"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+f.maxDirLights,"#define MAX_POINT_LIGHTS "+f.maxPointLights,"#define MAX_SPOT_LIGHTS "+f.maxSpotLights,"#define MAX_SHADOWS "+f.maxShadows,"#define MAX_BONES "+f.maxBones,f.map?"#define USE_MAP":"",f.envMap?"#define USE_ENVMAP":"",f.lightMap?
"#define USE_LIGHTMAP":"",f.bumpMap?"#define USE_BUMPMAP":"",f.normalMap?"#define USE_NORMALMAP":"",f.specularMap?"#define USE_SPECULARMAP":"",f.vertexColors?"#define USE_COLOR":"",f.skinning?"#define USE_SKINNING":"",f.useVertexTexture?"#define BONE_TEXTURE":"",f.morphTargets?"#define USE_MORPHTARGETS":"",f.morphNormals?"#define USE_MORPHNORMALS":"",f.wrapAround?"#define WRAP_AROUND":"",f.doubleSided?"#define DOUBLE_SIDED":"",f.flipSided?"#define FLIP_SIDED":"",f.shadowMapEnabled?"#define USE_SHADOWMAP":
"",f.shadowMapEnabled?"#define "+m:"",f.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",f.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",f.sizeAttenuation?"#define USE_SIZEATTENUATION":"",f.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",f.depthNoiseRedux?"#define USE_DEPTH_NOISE_REDUX":"",f.highlight?"#define USE_HIGHLIGHT_COLOR":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),
b=[f.bumpMap||f.normalMap?"#extension GL_OES_standard_derivatives : enable":"","precision "+f.precision+" float;","precision "+f.precision+" int;",s,"#define MAX_DIR_LIGHTS "+f.maxDirLights,"#define MAX_POINT_LIGHTS "+f.maxPointLights,"#define MAX_SPOT_LIGHTS "+f.maxSpotLights,"#define MAX_SHADOWS "+f.maxShadows,f.alphaTest?"#define ALPHATEST "+f.alphaTest:"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"",f.useFog&&f.fog?"#define USE_FOG":"",f.useFog&&f.fogExp?"#define FOG_EXP2":
"",f.map?"#define USE_MAP":"",f.envMap?"#define USE_ENVMAP":"",f.lightMap?"#define USE_LIGHTMAP":"",f.bumpMap?"#define USE_BUMPMAP":"",f.normalMap?"#define USE_NORMALMAP":"",f.specularMap?"#define USE_SPECULARMAP":"",f.vertexColors?"#define USE_COLOR":"",f.metal?"#define METAL":"",f.wrapAround?"#define WRAP_AROUND":"",f.doubleSided?"#define DOUBLE_SIDED":"",f.flipSided?"#define FLIP_SIDED":"",f.shadowMapEnabled?"#define USE_SHADOWMAP":"",f.shadowMapEnabled?"#define "+m:"",f.shadowMapDebug?"#define SHADOWMAP_DEBUG":
"",f.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",b.floatShadowTexture?"#define FLOAT_SHADOW_TEXTURE":"",f.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",f.colorNoise?"#define USE_COLORNOISE":"",f.depthNoiseRedux?"#define USE_DEPTH_NOISE_REDUX":"",f.highlight?"#define USE_HIGHLIGHT_COLOR":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));i=new THREE.WebGLShader(e,e.VERTEX_SHADER,d+i);g=new THREE.WebGLShader(e,e.FRAGMENT_SHADER,b+g);e.attachShader(n,i);e.attachShader(n,
g);void 0!==p&&e.bindAttribLocation(n,0,p);e.linkProgram(n);!1===e.getProgramParameter(n,e.LINK_STATUS)&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",e.getProgramParameter(n,e.VALIDATE_STATUS)),console.error("gl.getError()",e.getError()));""!==e.getProgramInfoLog(n)&&console.error("gl.getProgramInfoLog()",e.getProgramInfoLog(n));e.deleteShader(i);e.deleteShader(g);p="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");
f.useVertexTexture?(p.push("boneTexture"),p.push("boneTextureWidth"),p.push("boneTextureHeight")):p.push("boneGlobalMatrices");f.logarithmicDepthBuffer&&p.push("logDepthBufFC");for(var q in j)p.push(q);j=p;q={};p=0;for(b=j.length;p<b;p++)m=j[p],q[m]=e.getUniformLocation(n,m);this.uniforms=q;p="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(j=0;j<f.maxMorphTargets;j++)p.push("morphTarget"+j);for(j=0;j<f.maxMorphNormals;j++)p.push("morphNormal"+j);for(var t in k)p.push(t);
f=p;k={};t=0;for(j=f.length;t<j;t++)q=f[t],k[q]=e.getAttribLocation(n,q);this.attributes=k;this.id=a++;this.code=c;this.usedTimes=1;this.program=n;this.vertexShader=i;this.fragmentShader=g;return this}}();
THREE.WebGLShader=function(){var a=function(a){for(var a=a.split("\n"),c=0;c<a.length;c++)a[c]=c+1+": "+a[c];return a.join("\n")};return function(b,c,d){c=b.createShader(c);b.shaderSource(c,d);b.compileShader(c);!1===b.getShaderParameter(c,b.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");""!==b.getShaderInfoLog(c)&&(console.error("THREE.WebGLShader:","gl.getShaderInfoLog()",b.getShaderInfoLog(c)),console.error(a(d)));return c}}();
THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){var f=new THREE.ImageLoader;f.crossOrigin=this.crossOrigin;var e=new THREE.Texture(void 0,b),b=f.load(a,function(){e.needsUpdate=!0;c&&c(e)},void 0,function(a){d&&d(a)});e.image=b;e.sourceFile=a;return e},loadCompressedTexture:function(a,b,c,d){var f=new THREE.CompressedTexture;f.mapping=b;var e=new XMLHttpRequest;e.onload=function(){var a=THREE.ImageUtils.parseDDS(e.response,!0);f.format=a.format;f.mipmaps=a.mipmaps;f.image.width=
a.width;f.image.height=a.height;f.generateMipmaps=!1;f.needsUpdate=!0;c&&c(f)};e.onerror=d;e.open("GET",a,!0);e.responseType="arraybuffer";e.send(null);return f},loadTextureCube:function(a,b,c){var d=[];d.loadCount=0;var f=new THREE.ImageLoader;f.crossOrigin=this.crossOrigin;var e=new THREE.Texture;e.image=d;void 0!==b&&(e.mapping=b);e.flipY=!1;for(var b=0,g=a.length;b<g;++b){var i=f.load(a[b],function(){d.loadCount+=1;6===d.loadCount&&(e.needsUpdate=!0,c&&c(e))});d[b]=i}return e},loadCompressedTextureCube:function(a,
b,c,d){var f=[];f.loadCount=0;var e=new THREE.CompressedTexture;e.image=f;void 0!==b&&(e.mapping=b);e.flipY=!1;e.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;f.loadCount+=1;6===f.loadCount&&(e.format=d.format,e.needsUpdate=!0,c&&c(e))}};if(a instanceof Array)for(var g=0,i=a.length;g<i;++g){var j={};f[g]=j;var k=new XMLHttpRequest;k.onload=b(k,j);k.onerror=d;j=a[g];k.open("GET",
j,!0);k.responseType="arraybuffer";k.send(null)}else k=new XMLHttpRequest,k.onload=function(){var a=THREE.ImageUtils.parseDDS(k.response,!0);if(a.isCubemap){for(var b=a.mipmaps.length/a.mipmapCount,d=0;d<b;d++){f[d]={mipmaps:[]};for(var g=0;g<a.mipmapCount;g++)f[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+g]),f[d].format=a.format,f[d].width=a.width,f[d].height=a.height}e.format=a.format;e.needsUpdate=!0;c&&c(e)}},k.onerror=d,k.open("GET",a,!0),k.responseType="arraybuffer",k.send(null);return e},loadDDSTexture:function(a,
b,c,d){var f=[];f.loadCount=0;var e=new THREE.CompressedTexture;e.image=f;void 0!==b&&(e.mapping=b);e.flipY=!1;e.generateMipmaps=!1;var g=new XMLHttpRequest;g.onload=function(){var a=THREE.ImageUtils.parseDDS(g.response,!0);if(a.isCubemap)for(var b=a.mipmaps.length/a.mipmapCount,d=0;d<b;d++){f[d]={mipmaps:[]};for(var n=0;n<a.mipmapCount;n++)f[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+n]),f[d].format=a.format,f[d].width=a.width,f[d].height=a.height}else e.image.width=a.width,e.image.height=a.height,
e.mipmaps=a.mipmaps;e.format=a.format;e.needsUpdate=!0;c&&c(e)};g.onerror=d;g.open("GET",a,!0);g.responseType="arraybuffer";g.send(null);return e},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},f=c("DXT1"),e=c("DXT3"),g=c("DXT5"),i=new Int32Array(a,0,31);if(542327876!==i[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!i[20]&
4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),d;var j=i[21],k=!1;switch(j){case f:f=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case e:f=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:f=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(32==i[22]&&i[23]&16711680&&i[24]&65280&&i[25]&255&&i[26]&4278190080)k=!0,f=64,d.format=THREE.RGBAFormat;else return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(j&
255,j>>8&255,j>>16&255,j>>24&255)),d}d.mipmapCount=1;i[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,i[7]));d.isCubemap=i[28]&512?!0:!1;d.width=i[4];d.height=i[3];for(var i=i[1]+4,e=d.width,g=d.height,j=d.isCubemap?6:1,n=0;n<j;n++){for(var p=0;p<d.mipmapCount;p++){if(k){var m;m=e;for(var s=g,w=4*m*s,l=new Uint8Array(a,i,w),w=new Uint8Array(w),q=0,t=0,r=0;r<s;r++)for(var u=0;u<m;u++){var y=l[t];t++;var v=l[t];t++;var B=l[t];t++;var E=l[t];t++;w[q]=B;q++;w[q]=v;q++;w[q]=y;q++;w[q]=E;q++}m=w;s=m.length}else s=
Math.max(4,e)/4*Math.max(4,g)/4*f,m=new Uint8Array(a,i,s);d.mipmaps.push({data:m,width:e,height:g});i+=s;e=Math.max(0.5*e,1);g=Math.max(0.5*g,1)}e=d.width;g=d.height}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,f=a.height,e=document.createElement("canvas");e.width=d;e.height=f;var g=e.getContext("2d");g.drawImage(a,0,0);for(var i=g.getImageData(0,0,d,f).data,j=g.createImageData(d,f),k=j.data,n=0;n<
d;n++)for(var p=0;p<f;p++){var m=0>p-1?0:p-1,s=p+1>f-1?f-1:p+1,w=0>n-1?0:n-1,l=n+1>d-1?d-1:n+1,q=[],t=[0,0,i[4*(p*d+n)]/255*b];q.push([-1,0,i[4*(p*d+w)]/255*b]);q.push([-1,-1,i[4*(m*d+w)]/255*b]);q.push([0,-1,i[4*(m*d+n)]/255*b]);q.push([1,-1,i[4*(m*d+l)]/255*b]);q.push([1,0,i[4*(p*d+l)]/255*b]);q.push([1,1,i[4*(s*d+l)]/255*b]);q.push([0,1,i[4*(s*d+n)]/255*b]);q.push([-1,1,i[4*(s*d+w)]/255*b]);m=[];w=q.length;for(s=0;s<w;s++){var l=q[s],r=q[(s+1)%w],l=[l[0]-t[0],l[1]-t[1],l[2]-t[2]],r=[r[0]-t[0],
r[1]-t[1],r[2]-t[2]];m.push(c([l[1]*r[2]-l[2]*r[1],l[2]*r[0]-l[0]*r[2],l[0]*r[1]-l[1]*r[0]]))}q=[0,0,0];for(s=0;s<m.length;s++)q[0]+=m[s][0],q[1]+=m[s][1],q[2]+=m[s][2];q[0]/=m.length;q[1]/=m.length;q[2]/=m.length;t=4*(p*d+n);k[t]=255*((q[0]+1)/2)|0;k[t+1]=255*((q[1]+1)/2)|0;k[t+2]=255*q[2]|0;k[t+3]=255}g.putImageData(j,0,0);return e},generateDataTexture:function(a,b,c){for(var d=a*b,f=new Uint8Array(3*d),e=Math.floor(255*c.r),g=Math.floor(255*c.g),c=Math.floor(255*c.b),i=0;i<d;i++)f[3*i]=e,f[3*i+
1]=g,f[3*i+2]=c;a=new THREE.DataTexture(f,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};
THREE.SceneUtils={createMultiMaterialObject:function(a,b){console.log("THREE.SceneUtils.createMultiMaterialObject");for(var c=new THREE.Object3D,d=0,f=b.length;d<f;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){console.log("THREE.SceneUtils.detach");a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){console.log("THREE.SceneUtils.attach");var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};THREE.Curve=function(){};
THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};
THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),f,e=0;b.push(0);for(f=1;f<=a;f++)c=this.getPoint(f/a),e+=c.distanceTo(d),b.push(e),d=c;return this.cacheArcLengths=b};
THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,f=c.length,e;e=b?b:a*c[f-1];for(var g=0,i=f-1,j;g<=i;)if(d=Math.floor(g+(i-g)/2),j=c[d]-e,0>j)g=d+1;else if(0<j)i=d-1;else{i=d;break}d=i;if(c[d]==e)return d/(f-1);g=c[d];return c=(d+(e-g)/(c[d+1]-g))/(f-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4,a=a+1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,f){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*f},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,f){var a=0.5*(c-a),d=0.5*(d-b),e=f*f;return(2*b-2*c+a+d)*f*e+(-3*b+3*c-2*a-d)*e+a*f+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.SplineCurve=function(a){console.log("THREE:SplineCurve");this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f,a=(d.length-1)*a;f=Math.floor(a);a-=f;c[0]=0==f?f:f-1;c[1]=f;c[2]=f>d.length-2?d.length-1:f+1;c[3]=f>d.length-3?d.length-1:f+2;f=d[c[0]];var e=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(f.x,e.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(f.y,e.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(f.z,e.z,g.z,c.z,a);return b});
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var i=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=(new THREE.Quaternion).fromArray(i)}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){i={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++){var k=a.hierarchy[c].keys[d].morphTargets[j];i[k]=-1}a.hierarchy[c].usedMorphTargets=i;for(d=
0;d<a.hierarchy[c].keys.length;d++){var n={};for(k in i){for(j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++)if(a.hierarchy[c].keys[d].morphTargets[j]===k){n[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[j];break}j===a.hierarchy[c].keys[d].morphTargets.length&&(n[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=n}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}a.initialized=!0}},remove:function(a){void 0===b[a]&&console.log("THREE.AnimationHandler.add: Warning! "+a+" doesn't exists in library. Doing nothing.");b[a]=void 0},get:function(a){if("string"===typeof a)return b[a]?b[a]:null},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.skeleton.bones.length;c++)b.push(a.skeleton.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=
2;return c}();THREE.LensFlare=function(a,b,c,d,f){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,f)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,f,e){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===e&&(e=1);void 0===f&&(f=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:e,color:f,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,f=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+f*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};
THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),g="precision "+c+" float;\n";b.shaderSource(e,g+a.fragmentShader);b.shaderSource(f,g+a.vertexShader);b.compileShader(e);b.compileShader(f);b.attachShader(d,e);b.attachShader(d,f);b.linkProgram(d);return d}var b,c,d,f,e,g,i,j,k,n,p,m;this.init=function(s){b=s.context;c=s;d=s.getPrecision();f=new Float32Array(16);e=new Uint16Array(6);s=0;f[s++]=-1;f[s++]=-1;
f[s++]=0;f[s++]=0;f[s++]=1;f[s++]=-1;f[s++]=1;f[s++]=0;f[s++]=1;f[s++]=1;f[s++]=1;f[s++]=1;f[s++]=-1;f[s++]=1;f[s++]=0;f[s++]=1;s=0;e[s++]=0;e[s++]=1;e[s++]=2;e[s++]=0;e[s++]=2;e[s++]=3;g=b.createBuffer();i=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,f,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,i);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);j=b.createTexture();k=b.createTexture();b.bindTexture(b.TEXTURE_2D,j);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,
0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,k);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);n=0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?a(THREE.ShaderFlares.lensFlare,d):a(THREE.ShaderFlares.lensFlareVertexTexture,d);p={};m={};p.vertex=b.getAttribLocation(n,"position");p.uv=b.getAttribLocation(n,"uv");m.renderType=b.getUniformLocation(n,"renderType");m.map=b.getUniformLocation(n,"map");m.occlusionMap=b.getUniformLocation(n,"occlusionMap");m.opacity=b.getUniformLocation(n,
"opacity");m.color=b.getUniformLocation(n,"color");m.scale=b.getUniformLocation(n,"scale");m.rotation=b.getUniformLocation(n,"rotation");m.screenPosition=b.getUniformLocation(n,"screenPosition")};this.render=function(a,d,e,f){var a=a.__webglFlares,t=a.length;if(t){var r=new THREE.Vector3,u=f/e,y=0.5*e,v=0.5*f,B=16/f,E=new THREE.Vector2(B*u,B),K=new THREE.Vector3(1,1,0),z=new THREE.Vector2(1,1),H=new THREE.Vector2,J=m,B=p;b.useProgram(n);b.enableVertexAttribArray(p.vertex);b.enableVertexAttribArray(p.uv);
b.uniform1i(J.occlusionMap,0);b.uniform1i(J.map,1);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(B.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(B.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,i);b.disable(b.CULL_FACE);b.depthMask(!1);var M,x,L,C,G;for(M=0;M<t;M++)if(B=16/f,E.set(B*u,B),C=a[M],r.set(C.matrixWorld.elements[12],C.matrixWorld.elements[13],C.matrixWorld.elements[14]),r.applyMatrix4(d.matrixWorldInverse),r.applyProjection(d.projectionMatrix),K.copy(r),z.x=K.x*y+y,
z.y=K.y*v+v,H.x=z.x-8,H.y=z.y-8,0<H.x&&H.x+16<e&&0<H.y&&H.y+16<f){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,j);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,H.x,H.y,16,16,0);b.uniform1i(J.renderType,0);b.uniform2f(J.scale,E.x,E.y);b.uniform3f(J.screenPosition,K.x,K.y,K.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,k);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,H.x,H.y,16,16,0);b.uniform1i(J.renderType,
1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,j);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);C.positionScreen.copy(K);C.customUpdateCallback?C.customUpdateCallback(C):C.updateLensFlares();b.uniform1i(J.renderType,2);b.enable(b.BLEND);x=0;for(L=C.lensFlares.length;x<L;x++)G=C.lensFlares[x],0.001<G.opacity&&0.001<G.scale&&(K.x=G.x,K.y=G.y,K.z=G.z,B=G.size*G.scale/f,E.x=B*u,E.y=B,b.uniform3f(J.screenPosition,K.x,K.y,K.z),b.uniform2f(J.scale,E.x,E.y),b.uniform1f(J.rotation,
G.rotation),b.uniform1f(J.opacity,G.opacity),b.uniform3f(J.color,G.color.r,G.color.g,G.color.b),c.setBlending(G.blending,G.blendEquation,G.blendSrc,G.blendDst),c.setTexture(G.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,f,e,g=new THREE.Frustum,i=new THREE.Matrix4,j=new THREE.Vector3,k=new THREE.Vector3,n=new THREE.Vector3;this.init=function(g){a=g.context;b=g;g.floatShadowTexture?(g=THREE.ShaderLib.depthRGBAFloat,console.log("Float Texture Shadow Map active!")):g=THREE.ShaderLib.depthRGBA;var i=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:i});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:i,morphTargets:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:i,skinning:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:i,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;f._shadowPass=!0;e._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(d,e){var f,w,l,q,t,r,u,y,
v,B=[];q=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFace===THREE.CullFaceFront?a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);f=0;for(w=d.__lights.length;f<w;f++)if(l=d.__lights[f],l.castShadow)if(l instanceof THREE.DirectionalLight&&l.shadowCascade)for(t=0;t<l.shadowCascadeCount;t++){var E;if(l.shadowCascadeArray[t])E=l.shadowCascadeArray[t];else{v=l;u=t;E=new THREE.DirectionalLight;E.isVirtual=!0;E.onlyShadow=!0;E.castShadow=!0;
E.shadowCameraNear=v.shadowCameraNear;E.shadowCameraFar=v.shadowCameraFar;E.shadowCameraLeft=v.shadowCameraLeft;E.shadowCameraRight=v.shadowCameraRight;E.shadowCameraBottom=v.shadowCameraBottom;E.shadowCameraTop=v.shadowCameraTop;E.shadowCameraVisible=v.shadowCameraVisible;E.shadowDarkness=v.shadowDarkness;E.shadowBias=v.shadowCascadeBias[u];E.shadowMapWidth=v.shadowCascadeWidth[u];E.shadowMapHeight=v.shadowCascadeHeight[u];E.pointsWorld=[];E.pointsFrustum=[];y=E.pointsWorld;r=E.pointsFrustum;for(var K=
0;8>K;K++)y[K]=new THREE.Vector3,r[K]=new THREE.Vector3;y=v.shadowCascadeNearZ[u];v=v.shadowCascadeFarZ[u];r[0].set(-1,-1,y);r[1].set(1,-1,y);r[2].set(-1,1,y);r[3].set(1,1,y);r[4].set(-1,-1,v);r[5].set(1,-1,v);r[6].set(-1,1,v);r[7].set(1,1,v);E.originalCamera=e;r=new THREE.Gyroscope;r.position.copy(l.shadowCascadeOffset);r.add(E);r.add(E.target);e.add(r);l.shadowCascadeArray[t]=E;console.log("Created virtualLight",E)}u=l;y=t;v=u.shadowCascadeArray[y];v.position.copy(u.position);v.target.position.copy(u.target.position);
v.lookAt(v.target);v.shadowCameraVisible=u.shadowCameraVisible;v.shadowDarkness=u.shadowDarkness;v.shadowBias=u.shadowCascadeBias[y];r=u.shadowCascadeNearZ[y];u=u.shadowCascadeFarZ[y];v=v.pointsFrustum;v[0].z=r;v[1].z=r;v[2].z=r;v[3].z=r;v[4].z=u;v[5].z=u;v[6].z=u;v[7].z=u;B[q]=E;q++}else B[q]=l,q++;else if(l instanceof THREE.DirectionalLight&&0<l.susShadows.length)for(t=0;t<l.susShadows.length;t++)B[q]=l.susShadows[t],q++;f=0;for(w=B.length;f<w;f++){l=B[f];l.shadowMap||(t=THREE.LinearFilter,b.shadowMapType===
THREE.PCFSoftShadowMap&&(t=THREE.NearestFilter),l.shadowMap=new THREE.WebGLRenderTarget(l.shadowMapWidth,l.shadowMapHeight,b.floatShadowTexture?{minFilter:t,magFilter:t,format:THREE.RGBAFormat,type:THREE.FloatType}:{minFilter:t,magFilter:t,format:THREE.RGBAFormat}),l.shadowMapSize=new THREE.Vector2(l.shadowMapWidth,l.shadowMapHeight),l.shadowMatrix=new THREE.Matrix4);if(!l.shadowCamera){if(l instanceof THREE.SpotLight)l.shadowCamera=new THREE.PerspectiveCamera(l.shadowCameraFov,l.shadowMapWidth/l.shadowMapHeight,
l.shadowCameraNear,l.shadowCameraFar);else if(l instanceof THREE.DirectionalLight)l.shadowCamera=new THREE.OrthographicCamera(l.shadowCameraLeft,l.shadowCameraRight,l.shadowCameraTop,l.shadowCameraBottom,l.shadowCameraNear,l.shadowCameraFar);else if(l instanceof SuS.three.ShadowObject)l.shadowCamera=new THREE.OrthographicCamera(l.left,l.right,l.top,l.bottom,l.near,l.far);else{console.error("Unsupported light type for shadow");continue}d.add(l.shadowCamera);!0===d.autoUpdate&&d.updateMatrixWorld()}l.shadowCameraVisible&&
!l.cameraHelper&&(l.cameraHelper=new THREE.CameraHelper(l.shadowCamera),l.shadowCamera.add(l.cameraHelper));if(l.isVirtual&&E.originalCamera==e){t=e;q=l.shadowCamera;r=l.pointsFrustum;v=l.pointsWorld;j.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(u=0;8>u;u++)y=v[u],y.copy(r[u]),THREE.ShadowMapPlugin.__projector.unprojectVector(y,t),y.applyMatrix4(q.matrixWorldInverse),y.x<j.x&&(j.x=y.x),y.x>k.x&&(k.x=y.x),y.y<j.y&&(j.y=y.y),y.y>k.y&&(k.y=y.y),y.z<j.z&&(j.z=y.z),y.z>k.z&&
(k.z=y.z);q.left=j.x;q.right=k.x;q.top=k.y;q.bottom=j.y;q.updateProjectionMatrix()}q=l.shadowMap;r=l.shadowMatrix;t=l.shadowCamera;t.position.setFromMatrixPosition(l.matrixWorld);n.setFromMatrixPosition(l.target.matrixWorld);t.lookAt(n);t.updateMatrixWorld();t.matrixWorldInverse.getInverse(t.matrixWorld);l.cameraHelper&&(l.cameraHelper.visible=l.shadowCameraVisible);l.shadowCameraVisible&&l.cameraHelper.update();b.floatShadowTexture?r.set(2,0,0,0.5,0,2,0,0.5,0,0,2,0.5,0,0,0,1):r.set(0.5,0,0,0.5,0,
0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);r.multiply(t.projectionMatrix);r.multiply(t.matrixWorldInverse);i.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);g.setFromMatrix(i);b.setRenderTarget(q);b.clear();v=d.__webglObjects;l=0;for(q=v.length;l<q;l++)if(u=v[l],r=u.object,u.render=!1,r.visible&&r.castShadow){y=r instanceof THREE.Mesh;var K=r instanceof THREE.ParticleSystem,z=r.frustumCulled,H=g.intersectsObject(r);if(!y&&!K||!z||H)r._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,r.matrixWorld),
u.render=!0}l=0;for(q=v.length;l<q;l++)u=v[l],u.render&&(r=u.object,u=u.buffer,K=r.material,y=r.customDepthMaterial?r.customDepthMaterial:c,b.setMaterialFaces(K),u instanceof THREE.BufferGeometry?b.renderBufferDirect(t,d.__lights,null,y,u,r):b.renderBuffer(t,d.__lights,null,y,u,r));v=d.__webglObjectsImmediate;l=0;for(q=v.length;l<q;l++)u=v[l],r=u.object,r.visible&&r.castShadow&&(r._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,r.matrixWorld),b.renderImmediateObject(t,d.__lights,null,c,r))}f=
b.getClearColor();w=b.getClearAlpha();a.clearColor(f.r,f.g,f.b,w);a.enable(a.BLEND);b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){var a,b,c,d,f,e,g,i,j,k,n,p,m,s,w,l,q;function t(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var r,u,y,v,B,E,K,z;this.init=function(t){r=t.context;u=t;v=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);B=new Uint16Array([0,1,2,0,2,3]);E=r.createBuffer();K=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,E);r.bufferData(r.ARRAY_BUFFER,v,r.STATIC_DRAW);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,K);r.bufferData(r.ELEMENT_ARRAY_BUFFER,B,r.STATIC_DRAW);var t=r.createProgram(),
J=r.createShader(r.VERTEX_SHADER),M=r.createShader(r.FRAGMENT_SHADER);r.shaderSource(J,["precision "+u.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));
r.shaderSource(M,["precision "+u.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
r.compileShader(J);r.compileShader(M);r.attachShader(t,J);r.attachShader(t,M);r.linkProgram(t);z=t;l=r.getAttribLocation(z,"position");q=r.getAttribLocation(z,"uv");a=r.getUniformLocation(z,"uvOffset");b=r.getUniformLocation(z,"uvScale");c=r.getUniformLocation(z,"rotation");d=r.getUniformLocation(z,"scale");f=r.getUniformLocation(z,"color");e=r.getUniformLocation(z,"map");g=r.getUniformLocation(z,"opacity");i=r.getUniformLocation(z,"modelViewMatrix");j=r.getUniformLocation(z,"projectionMatrix");k=
r.getUniformLocation(z,"fogType");n=r.getUniformLocation(z,"fogDensity");p=r.getUniformLocation(z,"fogNear");m=r.getUniformLocation(z,"fogFar");s=r.getUniformLocation(z,"fogColor");w=r.getUniformLocation(z,"alphaTest");t=document.createElement("canvas");t.width=8;t.height=8;J=t.getContext("2d");J.fillStyle="#ffffff";J.fillRect(0,0,t.width,t.height);y=new THREE.Texture(t);y.needsUpdate=!0};this.render=function(v,B){var M=v.__webglSprites,x=M.length;if(x){r.useProgram(z);r.enableVertexAttribArray(l);
r.enableVertexAttribArray(q);r.disable(r.CULL_FACE);r.enable(r.BLEND);r.bindBuffer(r.ARRAY_BUFFER,E);r.vertexAttribPointer(l,2,r.FLOAT,!1,16,0);r.vertexAttribPointer(q,2,r.FLOAT,!1,16,8);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,K);r.uniformMatrix4fv(j,!1,B.projectionMatrix.elements);r.activeTexture(r.TEXTURE0);r.uniform1i(e,0);var L=0,C=0,G=v.fog;G?(r.uniform3f(s,G.color.r,G.color.g,G.color.b),G instanceof THREE.Fog?(r.uniform1f(p,G.near),r.uniform1f(m,G.far),r.uniform1i(k,1),C=L=1):G instanceof THREE.FogExp2&&
(r.uniform1f(n,G.density),r.uniform1i(k,2),C=L=2)):(r.uniform1i(k,0),C=L=0);for(var D,Q,N=[],G=0;G<x;G++)D=M[G],!1!==D.visible&&(D._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,D.matrixWorld),D.z=-D._modelViewMatrix.elements[14]);M.sort(t);for(G=0;G<x;G++)D=M[G],!1!==D.visible&&(Q=D.material,r.uniform1f(w,Q.alphaTest),r.uniformMatrix4fv(i,!1,D._modelViewMatrix.elements),N[0]=D.scale.x,N[1]=D.scale.y,D=v.fog&&Q.fog?C:0,L!==D&&(r.uniform1i(k,D),L=D),null!==Q.map?(r.uniform2f(a,Q.map.offset.x,
Q.map.offset.y),r.uniform2f(b,Q.map.repeat.x,Q.map.repeat.y)):(r.uniform2f(a,0,0),r.uniform2f(b,1,1)),r.uniform1f(g,Q.opacity),r.uniform3f(f,Q.color.r,Q.color.g,Q.color.b),r.uniform1f(c,Q.rotation),r.uniform2fv(d,N),u.setBlending(Q.blending,Q.blendEquation,Q.blendSrc,Q.blendDst),u.setDepthTest(Q.depthTest),u.setDepthWrite(Q.depthWrite),Q.map&&Q.map.image&&Q.map.image.width?u.setTexture(Q.map,0):u.setTexture(y,0),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0));r.enable(r.CULL_FACE)}}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ntexture.a *= texture.a;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=
0,f=String(a).split(""),e=f.length,g=[],a=0;a<e;a++){var i=new THREE.Path,i=this.extractGlyphPoints(f[a],b,c,d,i),d=d+i.offset;g.push(i.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,f){console.log("THREE.FontUtils.extractGlyphPoints");var e=[],g,i,j,k,n,p,m,s,w,l,q,t=b.glyphs[a]||b.glyphs["?"];if(t){if(t.o){b=t._cachedOutline||(t._cachedOutline=t.o.split(" "));k=b.length;for(a=0;a<k;)switch(j=b[a++],j){case "m":j=b[a++]*c+d;n=b[a++]*c;f.moveTo(j,n);break;case "l":j=b[a++]*
c+d;n=b[a++]*c;f.lineTo(j,n);break;case "q":j=b[a++]*c+d;n=b[a++]*c;s=b[a++]*c+d;w=b[a++]*c;f.quadraticCurveTo(s,w,j,n);if(g=e[e.length-1]){p=g.x;m=g.y;g=1;for(i=this.divisions;g<=i;g++){var r=g/i;THREE.Shape.Utils.b2(r,p,s,j);THREE.Shape.Utils.b2(r,m,w,n)}}break;case "b":if(j=b[a++]*c+d,n=b[a++]*c,s=b[a++]*c+d,w=b[a++]*-c,l=b[a++]*c+d,q=b[a++]*-c,f.bezierCurveTo(j,n,s,w,l,q),g=e[e.length-1]){p=g.x;m=g.y;g=1;for(i=this.divisions;g<=i;g++)r=g/i,THREE.Shape.Utils.b3(r,p,s,l,j),THREE.Shape.Utils.b3(r,
m,w,q,n)}}}return{offset:t.ha*c,path:f}}}};
THREE.FontUtils.generateShapes=function(a,b){var b=b||{},c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",f=void 0!==b.weight?b.weight:"normal",e=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=f;THREE.FontUtils.style=e;c=THREE.FontUtils.drawText(a).paths;d=[];f=0;for(e=c.length;f<e;f++)Array.prototype.push.apply(d,c[f].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,f=0,e=b-1,g=0;g<b;e=g++)f+=a[e].x*a[g].y-a[g].x*a[e].y;return 0.5*f};a.Triangulate=function(a,d){var f=a.length;if(3>f)return null;var e=[],g=[],i=[],j,k,n;if(0<b(a))for(k=0;k<f;k++)g[k]=k;else for(k=0;k<f;k++)g[k]=f-1-k;var p=2*f;for(k=f-1;2<f;){if(0>=p--){console.log("Warning, unable to triangulate polygon!");break}j=k;f<=j&&(j=0);k=j+1;f<=k&&(k=0);n=k+1;f<=n&&(n=0);var m;a:{var s=m=void 0,w=void 0,l=void 0,q=void 0,t=void 0,r=void 0,u=void 0,y=
void 0,s=a[g[j]].x,w=a[g[j]].y,l=a[g[k]].x,q=a[g[k]].y,t=a[g[n]].x,r=a[g[n]].y;if(1E-10>(l-s)*(r-w)-(q-w)*(t-s))m=!1;else{var v=void 0,B=void 0,E=void 0,K=void 0,z=void 0,H=void 0,J=void 0,M=void 0,x=void 0,L=void 0,x=M=J=y=u=void 0,v=t-l,B=r-q,E=s-t,K=w-r,z=l-s,H=q-w;for(m=0;m<f;m++)if(u=a[g[m]].x,y=a[g[m]].y,!(u===s&&y===w||u===l&&y===q||u===t&&y===r))if(J=u-s,M=y-w,x=u-l,L=y-q,u-=t,y-=r,x=v*L-B*x,J=z*M-H*J,M=E*y-K*u,-1E-10<=x&&-1E-10<=M&&-1E-10<=J){m=!1;break a}m=!0}}if(m){e.push([a[g[j]],a[g[k]],
a[g[n]]]);i.push([g[j],g[k],g[n]]);j=k;for(n=k+1;n<f;j++,n++)g[j]=g[n];f--;p=2*f}}return d?i:e};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};
THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};
THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,f,e,g;b=c=Number.NEGATIVE_INFINITY;f=e=Number.POSITIVE_INFINITY;var i,j,k,n,p=a[0]instanceof THREE.Vector3;n=p?new THREE.Vector3:new THREE.Vector2;j=0;for(k=a.length;j<k;j++)i=a[j],i.x>b?b=i.x:i.x<f&&(f=i.x),i.y>c?c=i.y:i.y<e&&(e=i.y),p&&(i.z>d?d=i.z:i.z<g&&(g=i.z)),n.add(i);a={minX:f,minY:e,maxX:b,maxY:c};p&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,f;b||(b=this.bends);d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,f;b||(b=this.bends);d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,f,e,g,i,j;d=0;for(f=a.length;d<f;d++)e=a[d],g=e.x,i=e.y,j=g/c.maxX,j=b.getUtoTmapping(j,g),g=b.getPoint(j),j=b.getTangent(j),j.set(-j.y,j.x).multiplyScalar(i),e.x=g.x+j.x,e.y=g.y+j.y;return a};THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);
THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};
THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var f=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,e=new THREE.QuadraticBezierCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(e);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,f,e){var g=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.CubicBezierCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(f,e));this.curves.push(i);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,f,e){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,f,e)};
THREE.Path.prototype.absarc=function(a,b,c,d,f,e){this.absellipse(a,b,c,c,d,f,e)};THREE.Path.prototype.ellipse=function(a,b,c,d,f,e,g){var i=this.actions[this.actions.length-1].args;this.absellipse(a+i[i.length-2],b+i[i.length-1],c,d,f,e,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,f,e,g){var i=Array.prototype.slice.call(arguments),j=new THREE.EllipseCurve(a,b,c,d,f,e,g);this.curves.push(j);j=j.getPoint(1);i.push(j.x);i.push(j.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:i})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);var a=a||12,c=[],d,f,e,g,i,j,k,n,p,m,s,w,l;d=0;for(f=this.actions.length;d<f;d++)switch(e=this.actions[d],g=e.action,e=e.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:i=e[2];j=e[3];p=e[0];m=e[1];0<c.length?(g=c[c.length-1],s=g.x,
w=g.y):(g=this.actions[d-1].args,s=g[g.length-2],w=g[g.length-1]);for(e=1;e<=a;e++)l=e/a,g=THREE.Shape.Utils.b2(l,s,p,i),l=THREE.Shape.Utils.b2(l,w,m,j),c.push(new THREE.Vector2(g,l));break;case THREE.PathActions.BEZIER_CURVE_TO:i=e[4];j=e[5];p=e[0];m=e[1];k=e[2];n=e[3];0<c.length?(g=c[c.length-1],s=g.x,w=g.y):(g=this.actions[d-1].args,s=g[g.length-2],w=g[g.length-1]);for(e=1;e<=a;e++)l=e/a,g=THREE.Shape.Utils.b3(l,s,p,k,i),l=THREE.Shape.Utils.b3(l,w,m,n,j),c.push(new THREE.Vector2(g,l));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;l=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*e[0].length;l=l.concat(e[0]);l=new THREE.SplineCurve(l);for(e=1;e<=g;e++)c.push(l.getPointAt(e/g));break;case THREE.PathActions.ARC:i=e[0];j=e[1];m=e[2];k=e[3];g=e[4];p=!!e[5];s=g-k;w=2*a;for(e=1;e<=w;e++)l=e/w,p||(l=1-l),l=k+l*s,g=i+m*Math.cos(l),l=j+m*Math.sin(l),c.push(new THREE.Vector2(g,l));break;case THREE.PathActions.ELLIPSE:i=e[0];j=e[1];m=e[2];n=e[3];k=e[4];g=e[5];p=!!e[6];s=g-k;w=2*a;for(e=1;e<=w;e++)l=e/w,p||
(l=1-l),l=k+l*s,g=i+m*Math.cos(l),l=j+n*Math.sin(l),c.push(new THREE.Vector2(g,l))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],i=b[f],k=i.x-g.x,j=i.y-g.y;if(1E-10<Math.abs(j)){if(0>j&&(g=b[f],k=-k,i=b[e],j=-j),!(a.y<g.y||a.y>i.y))if(a.y==g.y){if(a.x==g.x)return!0}else{e=j*(a.x-g.x)-k*(a.y-g.y);if(0==e)return!0;0>e||(d=!d)}}else if(a.y==g.y&&(i.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=
i.x))return!0}return d}var f=this.actions,e,g,i,j,k=[],n=new THREE.Path;e=0;for(g=f.length;e<g;e++)i=f[e],j=i.args,i=i.action,i==THREE.PathActions.MOVE_TO&&0!=n.actions.length&&(k.push(n),n=new THREE.Path),n[i].apply(n,j);0!=n.actions.length&&k.push(n);if(0==k.length)return[];if(!0===b)return c(k);var p,m,f=[];if(1==k.length)return m=k[0],j=new THREE.Shape,j.actions=m.actions,j.curves=m.curves,f.push(j),f;var s=!THREE.Shape.Utils.isClockWise(k[0].getPoints()),s=a?!s:s;j=[];e=[];g=[];var w=0,l;e[w]=
void 0;g[w]=[];n=0;for(i=k.length;n<i;n++)m=k[n],l=m.getPoints(),p=THREE.Shape.Utils.isClockWise(l),(p=a?!p:p)?(!s&&e[w]&&w++,e[w]={s:new THREE.Shape,p:l},e[w].s.actions=m.actions,e[w].s.curves=m.curves,s&&w++,g[w]=[]):g[w].push({h:m,p:l[0]});if(!e[0])return c(k);if(1<e.length){k=!1;n=[];i=0;for(m=e.length;i<m;i++)j[i]=[];i=0;for(m=e.length;i<m;i++){p=g[i];for(s=0;s<p.length;s++){w=p[s];l=!0;for(var q=0;q<e.length;q++)d(w.p,e[q].p)&&(i!=q&&n.push({froms:i,tos:q,hole:s}),l?(l=!1,j[q].push(w)):k=!0);
l&&j[i].push(w)}}0<n.length&&(k||(g=j))}n=0;for(i=e.length;n<i;n++){j=e[n].s;f.push(j);k=g[n];m=0;for(p=k.length;m<p;m++)j.holes.push(k[m].h)}return f};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};
THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};
THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={triangulateShape:function(a,b){function c(a,b,c){return a.x!=b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,i=b.y-a.y,j=e.x-d.x,k=e.y-d.y,l=a.x-d.x,m=a.y-d.y,q=i*j-g*k,n=i*l-g*m;if(1E-10<Math.abs(q)){if(0<q){if(0>n||n>q)return[];j=k*l-j*m;if(0>j||j>q)return[]}else{if(0<n||n<q)return[];j=k*l-j*m;if(0<j||j<q)return[]}if(0==j)return f&&(0==n||n==q)?[]:[a];if(j==q)return f&&(0==n||n==q)?[]:[b];if(0==
n)return[d];if(n==q)return[e];f=j/q;return[{x:a.x+f*g,y:a.y+f*i}]}if(0!=n||k*l!=j*m)return[];i=0==g&&0==i;j=0==j&&0==k;if(i&&j)return a.x!=d.x||a.y!=d.y?[]:[a];if(i)return!c(d,e,a)?[]:[a];if(j)return!c(a,b,d)?[]:[d];0!=g?(a.x<b.x?(g=a,j=a.x,i=b,a=b.x):(g=b,j=b.x,i=a,a=a.x),d.x<e.x?(b=d,q=d.x,k=e,d=e.x):(b=e,q=e.x,k=d,d=d.x)):(a.y<b.y?(g=a,j=a.y,i=b,a=b.y):(g=b,j=b.y,i=a,a=a.y),d.y<e.y?(b=d,q=d.y,k=e,d=e.y):(b=e,q=e.y,k=d,d=d.y));return j<=q?a<q?[]:a==q?f?[]:[b]:a<=d?[b,i]:[b,k]:j>d?[]:j==d?f?[]:[g]:
a<=d?[g,i]:[g,k]}function f(a,b,c,d){var e=b.x-a.x,f=b.y-a.y,b=c.x-a.x,c=c.y-a.y,g=d.x-a.x,d=d.y-a.y,a=e*c-f*b,e=e*d-f*g;return 1E-10<Math.abs(a)?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var e,g,i,j,k,n={};i=a.concat();e=0;for(g=b.length;e<g;e++)Array.prototype.push.apply(i,b[e]);e=0;for(g=i.length;e<g;e++)k=i[e].x+":"+i[e].y,void 0!==n[k]&&console.log("Duplicate point",k),n[k]=e;var p=a.concat(),m;e=[];var s,w,l;g=[];var q,t;i=0;for(j=b.length;i<j;i++)e.push(i);q=0;for(var r=2*e.length;0<e.length;){r--;
if(0>r){console.log("Infinite Loop! Holes left:"+e.length+", Probably Hole outside Shape!");break}for(k=q;k<p.length;k++){s=p[k];j=-1;for(i=0;i<e.length;i++)if(m=e[i],l=s.x+":"+s.y+":"+m,void 0===g[l]){m=b[m];for(t=0;t<m.length;t++){w=m[t];var u;u=k;var y=t,v=p.length-1,B=u-1;0>B&&(B=v);var E=u+1;E>v&&(E=0);(v=f(p[u],p[B],p[E],m[y]))?(v=m.length-1,B=y-1,0>B&&(B=v),E=y+1,E>v&&(E=0),v=f(m[y],m[B],m[E],p[u]),u=!v?!1:!0):u=!1;if(u){a:{u=s;y=w;B=B=v=void 0;for(v=0;v<p.length;v++)if(B=v+1,B%=p.length,B=
d(u,y,p[v],p[B],!0),0<B.length){u=!0;break a}u=!1}if(u=!u){a:{u=s;E=E=B=v=y=void 0;for(y=0;y<e.length;y++){v=b[e[y]];for(B=0;B<v.length;B++)if(E=B+1,E%=v.length,E=d(u,w,v[B],v[E],!0),0<E.length){w=!0;break a}}w=!1}u=!w}}if(u){j=t;e.splice(i,1);q=p.slice(0,k+1);p=p.slice(k);t=m.slice(j);m=m.slice(0,j+1);p=q.concat(t).concat(m).concat(p);q=k;break}}if(0<=j)break;g[l]=!0}if(0<=j)break}}s=THREE.FontUtils.Triangulate(p,!1);e=0;for(g=s.length;e<g;e++){j=s[e];for(i=0;3>i;i++)k=j[i].x+":"+j[i].y,k=n[k],void 0!==
k&&(j[i]=k)}return s.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,f){return this.b3p0(a,b)+
this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,f)}};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};
THREE.ShaderLib.mirror={uniforms:{mirrorColor:{type:"c",value:new THREE.Color(8355711)},mirrorSampler:{type:"t",value:null},textureMatrix:{type:"m4",value:new THREE.Matrix4},alpha:{type:"f",value:1}},vertexShader:"uniform mat4 textureMatrix;\nvarying vec4 mirrorCoord;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nmirrorCoord = textureMatrix * worldPosition;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform vec3 mirrorColor;\nuniform sampler2D mirrorSampler;\nuniform float alpha;\nvarying vec4 mirrorCoord;\nfloat blendOverlay(float base, float blend) {\nreturn( base < 0.5 ? ( 2.0 * base * blend ) : (1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n}\nvoid main() {\nvec4 color = texture2DProj(mirrorSampler, mirrorCoord);\ncolor = vec4(blendOverlay(mirrorColor.r, color.r), blendOverlay(mirrorColor.g, color.g), blendOverlay(mirrorColor.b, color.b), 1.0);\ncolor.a = alpha;\ngl_FragColor = color;\n}"};
THREE.Mirror=function(a,b,c){THREE.Object3D.call(this);this.name="mirror_"+this.id;c=c||{};this.matrixNeedsUpdate=!0;var d=void 0!==c.textureWidth?c.textureWidth:512,f=void 0!==c.textureHeight?c.textureHeight:512;this.clipBias=void 0!==c.clipBias?c.clipBias:0;var e=void 0!==c.color?new THREE.Color(c.color):new THREE.Color(8355711);this.renderer=a;this.mirrorPlane=new THREE.Plane;this.normal=new THREE.Vector3(0,0,1);this.mirrorWorldPosition=new THREE.Vector3;this.cameraWorldPosition=new THREE.Vector3;
this.rotationMatrix=new THREE.Matrix4;this.lookAtPosition=new THREE.Vector3(0,0,-1);this.clipPlane=new THREE.Vector4;if(void 0!==c.debugMode&&c.debugMode){var a=new THREE.ArrowHelper(new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,0),10,16777088),g=new THREE.Geometry;g.vertices.push(new THREE.Vector3(-10,-10,0));g.vertices.push(new THREE.Vector3(10,-10,0));g.vertices.push(new THREE.Vector3(10,10,0));g.vertices.push(new THREE.Vector3(-10,10,0));g.vertices.push(g.vertices[0]);g=new THREE.Line(g,new THREE.LineBasicMaterial({color:16777088}));
this.add(a);this.add(g)}b instanceof THREE.PerspectiveCamera?this.camera=b:(this.camera=new THREE.PerspectiveCamera,console.log(this.name+": camera is not a Perspective Camera!"));this.textureMatrix=new THREE.Matrix4;this.mirrorCamera=this.camera.clone();this.mirrorCamera.matrixAutoUpdate=!0;b={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1};this.renderTarget=new THREE.WebGLRenderTarget(d,f,b);this.renderTarget2=new THREE.WebGLRenderTarget(d,f,b);
b=THREE.ShaderLib.mirror;a=THREE.UniformsUtils.clone(b.uniforms);this.material=new THREE.ShaderMaterial({fragmentShader:c.fragmentShader||b.fragmentShader,vertexShader:c.vertexShader||b.vertexShader,uniforms:a});this.material.uniforms.mirrorSampler.value=this.renderTarget;this.material.uniforms.mirrorColor.value=e;this.material.uniforms.textureMatrix.value=this.textureMatrix;!0===c.transparent&&(this.material.transparent=!0,this.material.uniforms.alpha.value=c.opacity);if(!THREE.Math.isPowerOfTwo(d)||
!THREE.Math.isPowerOfTwo(f))this.renderTarget.generateMipmaps=!1,this.renderTarget2.generateMipmaps=!1;this.updateTextureMatrix();this.render()};THREE.Mirror.prototype=Object.create(THREE.Object3D.prototype);THREE.Mirror.prototype.constructor=THREE.Mirror;
THREE.Mirror.prototype.renderWithMirror=function(a){this.updateTextureMatrix();this.matrixNeedsUpdate=!1;var b=a.camera;a.camera=this.mirrorCamera;a.renderTemp();a.material.uniforms.mirrorSampler.value=a.renderTarget2.texture;this.render();this.matrixNeedsUpdate=!0;a.material.uniforms.mirrorSampler.value=a.renderTarget.texture;a.camera=b;a.updateTextureMatrix()};
THREE.Mirror.prototype.updateTextureMatrix=function(){this.updateMatrixWorld();this.camera.updateMatrixWorld();this.mirrorWorldPosition.setFromMatrixPosition(this.matrixWorld);this.cameraWorldPosition.setFromMatrixPosition(this.camera.matrixWorld);this.rotationMatrix.extractRotation(this.matrixWorld);this.normal.set(0,0,1);this.normal.applyMatrix4(this.rotationMatrix);var a=this.mirrorWorldPosition.clone().sub(this.cameraWorldPosition);a.reflect(this.normal).negate();a.add(this.mirrorWorldPosition);
this.rotationMatrix.extractRotation(this.camera.matrixWorld);this.lookAtPosition.set(0,0,-1);this.lookAtPosition.applyMatrix4(this.rotationMatrix);this.lookAtPosition.add(this.cameraWorldPosition);var b=this.mirrorWorldPosition.clone().sub(this.lookAtPosition);b.reflect(this.normal).negate();b.add(this.mirrorWorldPosition);this.up.set(0,-1,0);this.up.applyMatrix4(this.rotationMatrix);this.up.reflect(this.normal).negate();this.mirrorCamera.position.copy(a);this.mirrorCamera.up=this.up;this.mirrorCamera.lookAt(b);
this.mirrorCamera.updateProjectionMatrix();this.mirrorCamera.updateMatrixWorld();this.mirrorCamera.matrixWorldInverse.getInverse(this.mirrorCamera.matrixWorld);this.textureMatrix.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);this.textureMatrix.multiply(this.mirrorCamera.projectionMatrix);this.textureMatrix.multiply(this.mirrorCamera.matrixWorldInverse);this.mirrorPlane.setFromNormalAndCoplanarPoint(this.normal,this.mirrorWorldPosition);this.mirrorPlane.applyMatrix4(this.mirrorCamera.matrixWorldInverse);
this.clipPlane.set(this.mirrorPlane.normal.x,this.mirrorPlane.normal.y,this.mirrorPlane.normal.z,this.mirrorPlane.constant);a=new THREE.Vector4;b=this.mirrorCamera.projectionMatrix;a.x=(THREE.Math.sign(this.clipPlane.x)+b.elements[8])/b.elements[0];a.y=(THREE.Math.sign(this.clipPlane.y)+b.elements[9])/b.elements[5];a.z=-1;a.w=(1+b.elements[10])/b.elements[14];var c=new THREE.Vector4,c=this.clipPlane.multiplyScalar(2/this.clipPlane.dot(a));b.elements[2]=c.x;b.elements[6]=c.y;b.elements[10]=c.z+1-this.clipBias;
b.elements[14]=c.w};THREE.Mirror.prototype.render=function(){this.matrixNeedsUpdate&&this.updateTextureMatrix();this.matrixNeedsUpdate=!0;for(var a=this;a.parent instanceof THREE.Object3D;)a=a.parent;if(void 0!==a&&a instanceof THREE.Scene){var b=this.material.visible;this.material.visible=!1;this.renderer.render(a,this.mirrorCamera,this.renderTarget,!0);this.material.visible=b}};
THREE.Mirror.prototype.renderTemp=function(){this.matrixNeedsUpdate&&this.updateTextureMatrix();this.matrixNeedsUpdate=!0;for(var a=this;null!==a.parent;)a=a.parent;void 0!==a&&a instanceof THREE.Scene&&this.renderer.render(a,this.mirrorCamera,this.renderTarget2,!0)};(function(a){function b(a,b,c){this.x=a;this.y=b;this.z=c}function c(a){return a*a*a*(a*(6*a-15)+10)}function d(a,b,c){return(1-c)*a+c*b}a=a.noise={};b.prototype.dot2=function(a,b){return this.x*a+this.y*b};b.prototype.dot3=function(a,b,c){return this.x*a+this.y*b+this.z*c};var f=[new b(1,1,0),new b(-1,1,0),new b(1,-1,0),new b(-1,-1,0),new b(1,0,1),new b(-1,0,1),new b(1,0,-1),new b(-1,0,-1),new b(0,1,1),new b(0,-1,1),new b(0,1,-1),new b(0,-1,-1)],e=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,
7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,
183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],g=Array(512),i=Array(512);a.seed=function(a){0<a&&1>a&&(a*=65536);a=Math.floor(a);256>a&&(a|=a<<8);for(var b=0;256>b;b++){var c;c=b&1?e[b]^
a&255:e[b]^a>>8&255;g[b]=g[b+256]=c;i[b]=i[b+256]=f[c%12]}};a.seed(0);var j=0.5*(Math.sqrt(3)-1),k=(3-Math.sqrt(3))/6,n=1/3,p=1/6;a.simplex2=function(a,b){var c,d,e;e=(a+b)*j;var f=Math.floor(a+e),n=Math.floor(b+e);e=(f+n)*k;c=a-f+e;var p=b-n+e,y,v;c>p?(y=1,v=0):(y=0,v=1);d=c-y+k;var B=p-v+k;e=c-1+2*k;var E=p-1+2*k,f=f&255,n=n&255,K=i[f+g[n]];y=i[f+y+g[n+v]];f=i[f+1+g[n+1]];n=0.5-c*c-p*p;0>n?c=0:(n*=n,c=n*n*K.dot2(c,p));p=0.5-d*d-B*B;0>p?d=0:(p*=p,d=p*p*y.dot2(d,B));B=0.5-e*e-E*E;0>B?e=0:(B*=B,e=
B*B*f.dot2(e,E));return 70*(c+d+e)};a.simplex3=function(a,b,c){var d,e,f=(a+b+c)*n,j=Math.floor(a+f);d=Math.floor(b+f);var k=Math.floor(c+f),f=(j+d+k)*p;e=a-j+f;var y=b-d+f,v=c-k+f,B,E,K,z,H,J;e>=y?y>=v?(B=1,K=E=0,H=z=1,J=0):(e>=v?(B=1,K=E=0):(E=B=0,K=1),z=1,H=0,J=1):y<v?(E=B=0,K=1,z=0,J=H=1):e<v?(B=0,E=1,z=K=0,J=H=1):(B=0,E=1,K=0,H=z=1,J=0);var M=e-B+p,x=y-E+p,L=v-K+p,a=e-z+2*p,C=y-H+2*p,G=v-J+2*p,c=e-1+3*p,b=y-1+3*p,f=v-1+3*p,j=j&255;d&=255;var k=k&255,D=i[j+g[d+g[k]]];B=i[j+B+g[d+E+g[k+K]]];z=
i[j+z+g[d+H+g[k+J]]];j=i[j+1+g[d+1+g[k+1]]];d=0.6-e*e-y*y-v*v;0>d?d=0:(d*=d,d=d*d*D.dot3(e,y,v));e=0.6-M*M-x*x-L*L;0>e?e=0:(e*=e,e=e*e*B.dot3(M,x,L));k=0.6-a*a-C*C-G*G;0>k?a=0:(k*=k,a=k*k*z.dot3(a,C,G));C=0.6-c*c-b*b-f*f;0>C?c=0:(C*=C,c=C*C*j.dot3(c,b,f));return 32*(d+e+a+c)};a.perlin2=function(a,b){var e=Math.floor(a),f=Math.floor(b),a=a-e,b=b-f,e=e&255,f=f&255,j=i[e+g[f]].dot2(a,b),k=i[e+g[f+1]].dot2(a,b-1),n=i[e+1+g[f]].dot2(a-1,b),e=i[e+1+g[f+1]].dot2(a-1,b-1),f=c(a);return d(d(j,n,f),d(k,e,f),
c(b))};a.perlin3=function(a,b,e){var f=Math.floor(a),j=Math.floor(b),k=Math.floor(e),a=a-f,b=b-j,e=e-k,f=f&255,j=j&255,k=k&255,n=i[f+g[j+g[k]]].dot3(a,b,e),p=i[f+g[j+g[k+1]]].dot3(a,b,e-1),y=i[f+g[j+1+g[k]]].dot3(a,b-1,e),v=i[f+g[j+1+g[k+1]]].dot3(a,b-1,e-1),B=i[f+1+g[j+g[k]]].dot3(a-1,b,e),E=i[f+1+g[j+g[k+1]]].dot3(a-1,b,e-1),K=i[f+1+g[j+1+g[k]]].dot3(a-1,b-1,e),f=i[f+1+g[j+1+g[k+1]]].dot3(a-1,b-1,e-1),a=c(a),b=c(b),e=c(e);return d(d(d(n,B,a),d(p,E,a),e),d(d(y,K,a),d(v,f,a),e),b)}})(this);(function(){!1=="performance"in window&&(window.performance={});Date.now=Date.now||function(){return(new Date).getTime()};if(!1=="now"in window.performance){var a=Date.now();performance.timing&&performance.timing.navigationStart&&(a=performance.timing.navigationStart);window.performance.now=function(){return Date.now()-a}}})();
